<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SavingAnalyticObjects />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data (2)' inline='true' name='federated.1e28wd1067nyw519jd0ag0b6qhc1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0p0jbix0mchrew161fq3708ib2la'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0p0jbix0mchrew161fq3708ib2la' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.425562' measure-ordering='alphabetic' measure-percentage='0.574438' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data_45' inline='true' name='federated.16u29xf1clbpci18rk0yf131z7ft' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_45' name='textscan.18r6tei0pgmseb1dcukeu11o8qem'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data_56.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.18r6tei0pgmseb1dcukeu11o8qem' name='data_56.csv' table='[data_56#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/jjonus/Documents/My Tableau Repository/Datasources/data_45.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/12/2018 12:45:07 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='80' timestamp-start='2018-08-12 00:45:07.340' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>0</ordinal>
              <family>data_56.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>x</remote-name>
              <remote-type>5</remote-type>
              <local-name>[x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>x</remote-alias>
              <ordinal>1</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>y</remote-alias>
              <ordinal>2</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coord</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coord]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coord</remote-alias>
              <ordinal>3</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cos2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cos2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cos2</remote-alias>
              <ordinal>4</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>contrib</remote-name>
              <remote-type>5</remote-type>
              <local-name>[contrib]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>contrib</remote-alias>
              <ordinal>5</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.425562' measure-ordering='alphabetic' measure-percentage='0.574438' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='train' inline='true' name='federated.0je71i81w9fhsx19mepx11n8r32i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.1bo3rqi0xsc0ee1gb4xo211bmb2z'>
            <connection class='textscan' directory='C:/Users/jjonus/Google Drive/Kaggle/GitAdvancedHousePrices' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1bo3rqi0xsc0ee1gb4xo211bmb2z' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Id' ordinal='0' />
            <column datatype='string' name='MSSubClass' ordinal='1' />
            <column datatype='string' name='MSZoning' ordinal='2' />
            <column datatype='string' name='LotFrontage' ordinal='3' />
            <column datatype='integer' name='LotArea' ordinal='4' />
            <column datatype='string' name='Street' ordinal='5' />
            <column datatype='string' name='Alley' ordinal='6' />
            <column datatype='string' name='LotShape' ordinal='7' />
            <column datatype='string' name='LandContour' ordinal='8' />
            <column datatype='string' name='Utilities' ordinal='9' />
            <column datatype='string' name='LotConfig' ordinal='10' />
            <column datatype='string' name='LandSlope' ordinal='11' />
            <column datatype='string' name='Neighborhood' ordinal='12' />
            <column datatype='string' name='Condition1' ordinal='13' />
            <column datatype='string' name='Condition2' ordinal='14' />
            <column datatype='string' name='BldgType' ordinal='15' />
            <column datatype='string' name='HouseStyle' ordinal='16' />
            <column datatype='string' name='OverallQual' ordinal='17' />
            <column datatype='integer' name='OverallCond' ordinal='18' />
            <column datatype='integer' name='YearBuilt' ordinal='19' />
            <column datatype='integer' name='YearRemodAdd' ordinal='20' />
            <column datatype='string' name='RoofStyle' ordinal='21' />
            <column datatype='string' name='RoofMatl' ordinal='22' />
            <column datatype='string' name='Exterior1st' ordinal='23' />
            <column datatype='string' name='Exterior2nd' ordinal='24' />
            <column datatype='string' name='MasVnrType' ordinal='25' />
            <column datatype='integer' name='MasVnrArea' ordinal='26' />
            <column datatype='string' name='ExterQual' ordinal='27' />
            <column datatype='string' name='ExterCond' ordinal='28' />
            <column datatype='string' name='Foundation' ordinal='29' />
            <column datatype='string' name='BsmtQual' ordinal='30' />
            <column datatype='string' name='BsmtCond' ordinal='31' />
            <column datatype='string' name='BsmtExposure' ordinal='32' />
            <column datatype='string' name='BsmtFinType1' ordinal='33' />
            <column datatype='integer' name='BsmtFinSF1' ordinal='34' />
            <column datatype='string' name='BsmtFinType2' ordinal='35' />
            <column datatype='integer' name='BsmtFinSF2' ordinal='36' />
            <column datatype='integer' name='BsmtUnfSF' ordinal='37' />
            <column datatype='integer' name='TotalBsmtSF' ordinal='38' />
            <column datatype='string' name='Heating' ordinal='39' />
            <column datatype='string' name='HeatingQC' ordinal='40' />
            <column datatype='string' name='CentralAir' ordinal='41' />
            <column datatype='string' name='Electrical' ordinal='42' />
            <column datatype='integer' name='1stFlrSF' ordinal='43' />
            <column datatype='integer' name='2ndFlrSF' ordinal='44' />
            <column datatype='integer' name='LowQualFinSF' ordinal='45' />
            <column datatype='integer' name='GrLivArea' ordinal='46' />
            <column datatype='integer' name='BsmtFullBath' ordinal='47' />
            <column datatype='integer' name='BsmtHalfBath' ordinal='48' />
            <column datatype='integer' name='FullBath' ordinal='49' />
            <column datatype='integer' name='HalfBath' ordinal='50' />
            <column datatype='integer' name='BedroomAbvGr' ordinal='51' />
            <column datatype='integer' name='KitchenAbvGr' ordinal='52' />
            <column datatype='string' name='KitchenQual' ordinal='53' />
            <column datatype='integer' name='TotRmsAbvGrd' ordinal='54' />
            <column datatype='string' name='Functional' ordinal='55' />
            <column datatype='integer' name='Fireplaces' ordinal='56' />
            <column datatype='string' name='FireplaceQu' ordinal='57' />
            <column datatype='string' name='GarageType' ordinal='58' />
            <column datatype='string' name='GarageYrBlt' ordinal='59' />
            <column datatype='string' name='GarageFinish' ordinal='60' />
            <column datatype='integer' name='GarageCars' ordinal='61' />
            <column datatype='integer' name='GarageArea' ordinal='62' />
            <column datatype='string' name='GarageQual' ordinal='63' />
            <column datatype='string' name='GarageCond' ordinal='64' />
            <column datatype='string' name='PavedDrive' ordinal='65' />
            <column datatype='integer' name='WoodDeckSF' ordinal='66' />
            <column datatype='integer' name='OpenPorchSF' ordinal='67' />
            <column datatype='integer' name='EnclosedPorch' ordinal='68' />
            <column datatype='integer' name='3SsnPorch' ordinal='69' />
            <column datatype='integer' name='ScreenPorch' ordinal='70' />
            <column datatype='integer' name='PoolArea' ordinal='71' />
            <column datatype='string' name='PoolQC' ordinal='72' />
            <column datatype='string' name='Fence' ordinal='73' />
            <column datatype='string' name='MiscFeature' ordinal='74' />
            <column datatype='integer' name='MiscVal' ordinal='75' />
            <column datatype='integer' name='MoSold' ordinal='76' />
            <column datatype='integer' name='YrSold' ordinal='77' />
            <column datatype='string' name='SaleType' ordinal='78' />
            <column datatype='string' name='SaleCondition' ordinal='79' />
            <column datatype='integer' name='SalePrice' ordinal='80' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSSubClass</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MSSubClass]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MSSubClass</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSZoning</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MSZoning]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MSZoning</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotFrontage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotFrontage]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotFrontage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LotArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotArea</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Street</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alley</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Alley]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Alley</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotShape</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotShape]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotShape</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandContour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LandContour]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LandContour</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Utilities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Utilities]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Utilities</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotConfig</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotConfig]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotConfig</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandSlope</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LandSlope]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LandSlope</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighborhood]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Neighborhood</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Condition1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Condition2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BldgType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BldgType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BldgType</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HouseStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HouseStyle]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HouseStyle</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OverallQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OverallQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OverallQual</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OverallCond</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OverallCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OverallCond</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearBuilt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearBuilt]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YearBuilt</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearRemodAdd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearRemodAdd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YearRemodAdd</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoofStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoofStyle]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>RoofStyle</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoofMatl</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoofMatl]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>RoofMatl</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exterior1st</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exterior1st]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Exterior1st</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exterior2nd</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exterior2nd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Exterior2nd</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MasVnrType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MasVnrType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MasVnrType</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MasVnrArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MasVnrArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MasVnrArea</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExterQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExterQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ExterQual</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExterCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExterCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ExterCond</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foundation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foundation]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Foundation</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtQual</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtCond</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtExposure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtExposure]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtExposure</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinType1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtFinType1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinType1</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinSF1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFinSF1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinSF1</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinType2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtFinType2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinType2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinSF2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFinSF2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinSF2</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtUnfSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtUnfSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtUnfSF</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalBsmtSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalBsmtSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>TotalBsmtSF</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Heating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Heating]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Heating</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HeatingQC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HeatingQC]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HeatingQC</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CentralAir</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CentralAir]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>CentralAir</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electrical</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electrical]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Electrical</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1stFlrSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1stFlrSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>1stFlrSF</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2ndFlrSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2ndFlrSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>2ndFlrSF</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowQualFinSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LowQualFinSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LowQualFinSF</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrLivArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GrLivArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GrLivArea</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFullBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFullBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFullBath</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtHalfBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtHalfBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtHalfBath</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FullBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FullBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>FullBath</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HalfBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HalfBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HalfBath</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BedroomAbvGr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BedroomAbvGr]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BedroomAbvGr</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KitchenAbvGr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KitchenAbvGr]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>KitchenAbvGr</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KitchenQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[KitchenQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>KitchenQual</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotRmsAbvGrd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotRmsAbvGrd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>TotRmsAbvGrd</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Functional</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Functional]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Functional</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fireplaces</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fireplaces]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fireplaces</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FireplaceQu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FireplaceQu]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>FireplaceQu</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageType</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageYrBlt</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageYrBlt]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageYrBlt</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageFinish</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageFinish]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageFinish</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageCars</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GarageCars]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageCars</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GarageArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageArea</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageQual</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageCond</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PavedDrive</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PavedDrive]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PavedDrive</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WoodDeckSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WoodDeckSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>WoodDeckSF</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenPorchSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OpenPorchSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OpenPorchSF</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EnclosedPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EnclosedPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>EnclosedPorch</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3SsnPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3SsnPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>3SsnPorch</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ScreenPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ScreenPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ScreenPorch</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PoolArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PoolArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PoolArea</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PoolQC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PoolQC]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PoolQC</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Fence]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fence</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiscFeature</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MiscFeature]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MiscFeature</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiscVal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MiscVal]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MiscVal</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MoSold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MoSold]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MoSold</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YrSold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YrSold]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YrSold</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SaleType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SaleType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SaleType</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SaleCondition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SaleCondition]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SaleCondition</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalePrice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SalePrice]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SalePrice</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Bedroom Abv Gr' datatype='integer' name='[BedroomAbvGr]' role='measure' type='quantitative' />
      <column datatype='string' name='[Bldg Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[BldgType]' new-bin='true'>
          <bin default-name='true' value='&quot;2fmCon, Duplex, Twnhs and 1 more&quot;'>
            <value>&quot;2fmCon&quot;</value>
            <value>&quot;Duplex&quot;</value>
            <value>&quot;Twnhs&quot;</value>
            <value>&quot;TwnhsE&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
      <column datatype='string' name='[Bsmt Exposure (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[BsmtExposure]' new-bin='true'>
          <bin default-name='true' value='&quot;Av &amp; Mn&quot;'>
            <value>&quot;Av&quot;</value>
            <value>&quot;Mn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Bsmt Cond' datatype='string' name='[BsmtCond]' role='dimension' type='nominal' />
      <column caption='Bsmt Exposure' datatype='string' name='[BsmtExposure]' role='dimension' type='nominal' />
      <column datatype='string' name='[BsmtFinType1]' role='dimension' type='nominal' />
      <column datatype='string' name='[BsmtFinType2]' role='dimension' type='nominal' />
      <column caption='Bsmt Full Bath' datatype='integer' name='[BsmtFullBath]' role='measure' type='quantitative' />
      <column caption='Bsmt Half Bath' datatype='integer' name='[BsmtHalfBath]' role='measure' type='quantitative' />
      <column caption='Bsmt Qual' datatype='string' name='[BsmtQual]' role='dimension' type='nominal' />
      <column caption='Bsmt Unf SF' datatype='integer' name='[BsmtUnfSF]' role='measure' type='quantitative' />
      <column caption='Ratio of live to total' datatype='real' name='[Calculation_401664822191943686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[GrLivArea]/[LotArea]' />
      </column>
      <column caption='Qual_Garage_Number' datatype='integer' name='[Calculation_401664822194020361]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GarageQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [GarageQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [GarageQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [GarageQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Average Qual' datatype='real' name='[Calculation_401664822195130379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Qual_Garage_Number (copy)] + [Qual_Bsmt_Number (copy 2)] + [Calculation_401664822194020361] + [Qual_Bsmt_Number (copy)])/4' />
      </column>
      <column caption='QualCombined' datatype='string' name='[Calculation_503840242685890562]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[KitchenQual] + [ExterQual]' />
      </column>
      <column caption='Central Air' datatype='string' name='[CentralAir]' role='dimension' type='nominal' />
      <column datatype='string' name='[Electrical (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Electrical]' new-bin='true'>
          <bin default-name='true' value='&quot;FuseA, FuseF, FuseP and 2 more&quot;'>
            <value>&quot;FuseA&quot;</value>
            <value>&quot;FuseF&quot;</value>
            <value>&quot;FuseP&quot;</value>
            <value>&quot;Mix&quot;</value>
            <value>&quot;NA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Electrical]' role='dimension' type='nominal' />
      <column caption='Enclosed Porch' datatype='integer' name='[EnclosedPorch]' role='measure' type='quantitative' />
      <column datatype='string' name='[Exter Qual (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[ExterQual]' new-bin='true'>
          <bin default-name='true' value='&quot;Fa &amp; TA&quot;'>
            <value>&quot;Fa&quot;</value>
            <value>&quot;TA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Exter Cond' datatype='string' name='[ExterCond]' role='dimension' type='nominal' />
      <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
      <column datatype='string' name='[Exterior1st (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Exterior1st]' new-bin='true'>
          <bin default-name='true' value='&quot;AsbShng, AsphShn, BrkComm and 1 more&quot;'>
            <value>&quot;AsbShng&quot;</value>
            <value>&quot;AsphShn&quot;</value>
            <value>&quot;BrkComm&quot;</value>
            <value>&quot;CBlock&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;BrkFace, CemntBd, ImStucc and 2 more&quot;'>
            <value>&quot;BrkFace&quot;</value>
            <value>&quot;CemntBd&quot;</value>
            <value>&quot;ImStucc&quot;</value>
            <value>&quot;Stone&quot;</value>
            <value>&quot;VinylSd&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;MetalSd, Stucco, Wd Sdng and 1 more&quot;'>
            <value>&quot;MetalSd&quot;</value>
            <value>&quot;Stucco&quot;</value>
            <value>&quot;Wd Sdng&quot;</value>
            <value>&quot;WdShing&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
      <column caption='Fireplace Qu' datatype='string' name='[FireplaceQu]' role='dimension' type='nominal' />
      <column datatype='string' name='[Foundation (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Foundation]' new-bin='true'>
          <bin default-name='true' value='&quot;BrkTil, CBlock, Stone and 1 more&quot;'>
            <value>&quot;BrkTil&quot;</value>
            <value>&quot;CBlock&quot;</value>
            <value>&quot;Stone&quot;</value>
            <value>&quot;Wood&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
      <column caption='Full Bath' datatype='integer' name='[FullBath]' role='measure' type='quantitative' />
      <column caption='Garage Area' datatype='integer' name='[GarageArea]' role='measure' type='quantitative' />
      <column caption='Garage Cars' datatype='integer' name='[GarageCars]' role='measure' type='quantitative' />
      <column caption='Garage Cond' datatype='string' name='[GarageCond]' role='dimension' type='nominal' />
      <column caption='Garage Finish' datatype='string' name='[GarageFinish]' role='dimension' type='nominal' />
      <column caption='Garage Qual' datatype='string' name='[GarageQual]' role='dimension' type='nominal' />
      <column caption='Garage Type' datatype='string' name='[GarageType]' role='dimension' type='nominal' />
      <column caption='Garage Yr Blt' datatype='string' name='[GarageYrBlt]' role='dimension' type='nominal' />
      <column caption='Gr Liv Area' datatype='integer' name='[GrLivArea]' role='measure' type='quantitative' />
      <column caption='Half Bath' datatype='integer' name='[HalfBath]' role='measure' type='quantitative' />
      <column caption='Heating QC' datatype='string' name='[HeatingQC]' role='dimension' type='nominal' />
      <column datatype='string' name='[House Style (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[HouseStyle]' new-bin='true'>
          <bin default-name='true' value='&quot;2.5Fin &amp; 2Story&quot;'>
            <value>&quot;2.5Fin&quot;</value>
            <value>&quot;2Story&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='House Style' datatype='string' name='[HouseStyle]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
      <column caption='Kitchen Abv Gr' datatype='integer' name='[KitchenAbvGr]' role='measure' type='quantitative' />
      <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
      <column datatype='string' name='[Land Contour (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[LandContour]' new-bin='true'>
          <bin default-name='true' value='&quot;HLS &amp; Low&quot;'>
            <value>&quot;HLS&quot;</value>
            <value>&quot;Low&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
      <column caption='Land Slope' datatype='string' name='[LandSlope]' role='dimension' type='nominal' />
      <column datatype='string' name='[Lot Shape (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[LotShape]' new-bin='true'>
          <bin default-name='true' value='&quot;IR2 &amp; IR3&quot;'>
            <value>&quot;IR2&quot;</value>
            <value>&quot;IR3&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Lot Area' datatype='integer' name='[LotArea]' role='measure' type='quantitative' />
      <column caption='Lot Config' datatype='string' name='[LotConfig]' role='dimension' type='nominal' />
      <column caption='Lot Frontage' datatype='string' name='[LotFrontage]' role='dimension' type='nominal' />
      <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
      <column caption='Low Qual Fin SF' datatype='integer' name='[LowQualFinSF]' role='measure' type='quantitative' />
      <column datatype='string' name='[MS Sub Class (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MSSubClass]' new-bin='true'>
          <bin default-name='true' value='&quot;160, 190, 40 and 4 more&quot;'>
            <value>&quot;160&quot;</value>
            <value>&quot;190&quot;</value>
            <value>&quot;40&quot;</value>
            <value>&quot;50&quot;</value>
            <value>&quot;70&quot;</value>
            <value>&quot;85&quot;</value>
            <value>&quot;90&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;180, 30, 45&quot;'>
            <value>&quot;180&quot;</value>
            <value>&quot;30&quot;</value>
            <value>&quot;45&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;20, 75, 80&quot;'>
            <value>&quot;20&quot;</value>
            <value>&quot;75&quot;</value>
            <value>&quot;80&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[MS Zoning (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MSZoning]' new-bin='true'>
          <bin default-name='true' value='&quot;C (all), RH, RM&quot;'>
            <value>&quot;C (all)&quot;</value>
            <value>&quot;RH&quot;</value>
            <value>&quot;RM&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='MS Sub Class' datatype='string' name='[MSSubClass]' role='dimension' type='nominal' />
      <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
      <column datatype='string' name='[Mas Vnr Type (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MasVnrType]' new-bin='true'>
          <bin default-name='true' value='&quot;BrkCmn &amp; None&quot;'>
            <value>&quot;BrkCmn&quot;</value>
            <value>&quot;None&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;NA &amp; Stone&quot;'>
            <value>&quot;NA&quot;</value>
            <value>&quot;Stone&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Mas Vnr Area' datatype='integer' name='[MasVnrArea]' role='measure' type='quantitative' />
      <column caption='Mas Vnr Type' datatype='string' name='[MasVnrType]' role='dimension' type='nominal' />
      <column caption='Misc Feature' datatype='string' name='[MiscFeature]' role='dimension' type='nominal' />
      <column caption='Misc Val' datatype='integer' name='[MiscVal]' role='measure' type='quantitative' />
      <column datatype='string' name='[Mo Sold (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MoSold]' new-bin='true'>
          <bin default-name='false' value='&quot;Fall&quot;'>
            <value>9</value>
            <value>10</value>
          </bin>
          <bin default-name='false' value='&quot;Spring&quot;'>
            <value>3</value>
            <value>4</value>
            <value>5</value>
          </bin>
          <bin default-name='false' value='&quot;Summer&quot;'>
            <value>6</value>
            <value>7</value>
            <value>8</value>
          </bin>
          <bin default-name='false' value='&quot;Winter&quot;'>
            <value>1</value>
            <value>2</value>
            <value>11</value>
            <value>12</value>
          </bin>
        </calculation>
      </column>
      <column caption='Mo Sold' datatype='integer' name='[MoSold]' role='measure' type='quantitative' />
      <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
          <bin default-name='false' value='&quot;BEO&quot;'>
            <value>&quot;BrkSide&quot;</value>
            <value>&quot;Edwards&quot;</value>
            <value>&quot;OldTown&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BlueSwis&quot;'>
            <value>&quot;Blueste&quot;</value>
            <value>&quot;Mitchel&quot;</value>
            <value>&quot;NAmes&quot;</value>
            <value>&quot;NPkVill&quot;</value>
            <value>&quot;Sawyer&quot;</value>
            <value>&quot;SWISU&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BNS&quot;'>
            <value>&quot;Blmngtn&quot;</value>
            <value>&quot;Gilbert&quot;</value>
            <value>&quot;NWAmes&quot;</value>
            <value>&quot;SawyerW&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BrMeadow&quot;'>
            <value>&quot;BrDale&quot;</value>
            <value>&quot;IDOTRR&quot;</value>
            <value>&quot;MeadowV&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;C3&quot;'>
            <value>&quot;ClearCr&quot;</value>
            <value>&quot;CollgCr&quot;</value>
            <value>&quot;Crawfor&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;NNS&quot;'>
            <value>&quot;NoRidge&quot;</value>
            <value>&quot;NridgHt&quot;</value>
            <value>&quot;StoneBr&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;STV&quot;'>
            <value>&quot;Somerst&quot;</value>
            <value>&quot;Timber&quot;</value>
            <value>&quot;Veenker&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Porch SF' datatype='integer' name='[OpenPorchSF]' role='measure' type='quantitative' />
      <column caption='Overall Cond' datatype='integer' name='[OverallCond]' role='measure' type='quantitative' />
      <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
      <column caption='Paved Drive' datatype='string' name='[PavedDrive]' role='dimension' type='nominal' />
      <column caption='Pool Area' datatype='integer' name='[PoolArea]' role='measure' type='quantitative' />
      <column caption='Pool QC' datatype='string' name='[PoolQC]' role='dimension' type='nominal' />
      <column caption='Qual_Exter_Number' datatype='integer' name='[Qual_Bsmt_Number (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [ExterQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [ExterQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [ExterQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [ExterQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Qual_Kitchen_Number' datatype='integer' name='[Qual_Bsmt_Number (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [KitchenQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [KitchenQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [KitchenQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [KitchenQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Qual_Bsmt_Number' datatype='integer' name='[Qual_Garage_Number (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [BsmtQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [BsmtQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [BsmtQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [BsmtQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column datatype='string' name='[Roof Style (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[RoofStyle]' new-bin='true'>
          <bin default-name='true' value='&quot;Flat, Hip, Mansard and 1 more&quot;'>
            <value>&quot;Flat&quot;</value>
            <value>&quot;Hip&quot;</value>
            <value>&quot;Mansard&quot;</value>
            <value>&quot;Shed&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Gable &amp; Gambrel&quot;'>
            <value>&quot;Gable&quot;</value>
            <value>&quot;Gambrel&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Roof Matl' datatype='string' name='[RoofMatl]' role='dimension' type='nominal' />
      <column caption='Roof Style' datatype='string' name='[RoofStyle]' role='dimension' type='nominal' />
      <column datatype='string' name='[Sale Condition (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[SaleCondition]' new-bin='true'>
          <bin default-name='true' value='&quot;Abnorml, AdjLand, Alloca and 1 more&quot;'>
            <value>&quot;Abnorml&quot;</value>
            <value>&quot;AdjLand&quot;</value>
            <value>&quot;Alloca&quot;</value>
            <value>&quot;Family&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sale Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[SaleType]' new-bin='true'>
          <bin default-name='true' value='&quot;COD, ConLD, ConLw and 2 more&quot;'>
            <value>&quot;COD&quot;</value>
            <value>&quot;ConLD&quot;</value>
            <value>&quot;ConLw&quot;</value>
            <value>&quot;Oth&quot;</value>
            <value>&quot;WD&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Con, ConLI, CWD and 1 more&quot;'>
            <value>&quot;Con&quot;</value>
            <value>&quot;ConLI&quot;</value>
            <value>&quot;CWD&quot;</value>
            <value>&quot;New&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
      <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
      <column caption='Sale Type' datatype='string' name='[SaleType]' role='dimension' type='nominal' />
      <column caption='Screen Porch' datatype='integer' name='[ScreenPorch]' role='measure' type='quantitative' />
      <column caption='Tot Rms Abv Grd' datatype='integer' name='[TotRmsAbvGrd]' role='measure' type='quantitative' />
      <column caption='Total Bsmt SF' datatype='integer' name='[TotalBsmtSF]' role='measure' type='quantitative' />
      <column caption='Wood Deck SF' datatype='integer' name='[WoodDeckSF]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year Built' datatype='integer' name='[YearBuilt]' role='dimension' type='ordinal' />
      <column caption='Year Remod Add' datatype='integer' name='[YearRemodAdd]' role='dimension' type='quantitative' />
      <column caption='Yr Sold' datatype='integer' name='[YrSold]' role='dimension' type='quantitative' />
      <group name='[Bsmt Qual, Garage Qual, Heating QC and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[GarageQual]' />
          <groupfilter function='level-members' level='[HeatingQC]' />
          <groupfilter function='level-members' level='[ExterQual]' />
          <groupfilter function='level-members' level='[KitchenQual]' />
        </groupfilter>
      </group>
      <group name='[BsmtFinType1, Foundation, Bsmt Qual and 1 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BsmtFinType1]' />
          <groupfilter function='level-members' level='[Foundation]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[BsmtFinType2]' />
        </groupfilter>
      </group>
      <group name='[Foundation &amp; Bsmt Qual (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Foundation]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
        </groupfilter>
      </group>
      <group name='[Garage Qual, Bsmt Qual, Exter Qual and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GarageQual]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[ExterQual]' />
          <groupfilter function='level-members' level='[KitchenQual]' />
        </groupfilter>
      </group>
      <group name='[Kitchen Qual &amp; Exter Qual (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[KitchenQual]' />
          <groupfilter function='level-members' level='[ExterQual]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.540059' measure-ordering='alphabetic' measure-percentage='0.459941' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Neighborhood (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BEO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C3&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;BrMeadow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BNS&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;NNS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BlueSwis&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data' inline='true' name='federated.055r1m20ncqq4z13lx9eq0aa278b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1gk7rvx0ffecon15kfsli1d46qc4'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1gk7rvx0ffecon15kfsli1d46qc4' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KitchenExterQual' datatype='string' name='[Calculation_503840242685714433]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([federated.0je71i81w9fhsx19mepx11n8r32i].[KitchenQual]) + ATTR([federated.0je71i81w9fhsx19mepx11n8r32i].[ExterQual])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coord]' derivation='Sum' name='[sum:coord:qk]' pivot='key' type='quantitative' />
      <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.424023' measure-ordering='alphabetic' measure-percentage='0.575977' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
        <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
        <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{99145fdf-f0b8-4ebf-8bad-2276ed643301}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[attr:name:nk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:coord:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1/2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.055r1m20ncqq4z13lx9eq0aa278b' />
          </datasources>
          <datasource-dependencies datasource='federated.055r1m20ncqq4z13lx9eq0aa278b'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{99145fdf-f0b8-4ebf-8bad-2276ed643301}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
            <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coord]' derivation='Sum' name='[sum:coord:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' field-type='quantitative' max='0.47714843519516992' min='-0.11356780768797037' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' field-type='quantitative' max='0.3873070829113201' min='-0.16410622865981084' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' />
              <text column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]' />
              <lod column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]' />
              <lod column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:coord:qk]' />
              <color column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]</rows>
        <cols>[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='3/4'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (2)' name='federated.1e28wd1067nyw519jd0ag0b6qhc1' />
          </datasources>
          <datasource-dependencies datasource='federated.1e28wd1067nyw519jd0ag0b6qhc1'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1e28wd1067nyw519jd0ag0b6qhc1].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[sum:y:qk]</rows>
        <cols>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='5/6'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_45' name='federated.16u29xf1clbpci18rk0yf131z7ft' />
          </datasources>
          <datasource-dependencies datasource='federated.16u29xf1clbpci18rk0yf131z7ft'>
            <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:x:qk]' field-type='quantitative' max='0.41871570542622416' min='0.021284078646205195' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:y:qk]' field-type='quantitative' max='0.35576301556811546' min='0.04486974733608428' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' />
              <size column='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' />
              <text column='[federated.16u29xf1clbpci18rk0yf131z7ft].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:y:qk]</rows>
        <cols>[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='BldgType'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Bldg Type (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[BldgType]' new-bin='true'>
                <bin default-name='true' value='&quot;2fmCon, Duplex, Twnhs and 1 more&quot;'>
                  <value>&quot;2fmCon&quot;</value>
                  <value>&quot;Duplex&quot;</value>
                  <value>&quot;Twnhs&quot;</value>
                  <value>&quot;TwnhsE&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Bldg Type (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline4' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bldg Type (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='BsmtExposure'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Bsmt Exposure (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[BsmtExposure]' new-bin='true'>
                <bin default-name='true' value='&quot;Av &amp; Mn&quot;'>
                  <value>&quot;Av&quot;</value>
                  <value>&quot;Mn&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bsmt Exposure' datatype='string' name='[BsmtExposure]' role='dimension' type='nominal' />
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_550002142081282050]' role='measure' type='quantitative' user:unnamed='BsmtExposure'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550002142081282050]' derivation='User' name='[usr:Calculation_550002142081282050:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Exposure (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142081282050:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142081282050:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142081282050:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142081282050:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Exposure (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='Contour'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Land Contour (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[LandContour]' new-bin='true'>
                <bin default-name='true' value='&quot;HLS &amp; Low&quot;'>
                  <value>&quot;HLS&quot;</value>
                  <value>&quot;Low&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Land Contour (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Land Contour (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='Electrical'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Electrical (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Electrical]' new-bin='true'>
                <bin default-name='true' value='&quot;FuseA, FuseF, FuseP and 2 more&quot;'>
                  <value>&quot;FuseA&quot;</value>
                  <value>&quot;FuseF&quot;</value>
                  <value>&quot;FuseP&quot;</value>
                  <value>&quot;Mix&quot;</value>
                  <value>&quot;NA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Electrical]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Electrical (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column caption='Garage Qual' datatype='string' name='[GarageQual]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GarageQual]' derivation='None' name='[none:GarageQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]' direction='ASC'>
            <dictionary>
              <bucket>(&quot;Gd&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(&quot;Gd&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Gd&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Fa&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Fa&quot;,&quot;Fa&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Fa&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(%all%,%all%)</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]'>
            <groupfilter from='&quot;Ex&quot;' function='range' level='[none:GarageQual:nk]' to='&quot;TA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]</column>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk] / [federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)])</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQualGrouping'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Exter Qual (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[ExterQual]' new-bin='true'>
                <bin default-name='true' value='&quot;Fa &amp; TA&quot;'>
                  <value>&quot;Fa&quot;</value>
                  <value>&quot;TA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[ExterQual]' derivation='None' name='[none:ExterQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Ex&quot;</bucket>
              <bucket>&quot;Gd&quot;</bucket>
              <bucket>&quot;Fa &amp; TA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQualKitchenQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='QualCombined' datatype='string' name='[Calculation_503840242685890562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[KitchenQual] + [ExterQual]' />
            </column>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Max' name='[max:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Min' name='[min:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_503840242685890562]' derivation='None' name='[none:Calculation_503840242685890562:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Stdev' name='[std:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Exterior1st'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_550002142079111168]' role='measure' type='quantitative' user:unnamed='Exterior1st'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Exterior1st (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Exterior1st]' new-bin='true'>
                <bin default-name='true' value='&quot;AsbShng, AsphShn, BrkComm and 1 more&quot;'>
                  <value>&quot;AsbShng&quot;</value>
                  <value>&quot;AsphShn&quot;</value>
                  <value>&quot;BrkComm&quot;</value>
                  <value>&quot;CBlock&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;BrkFace, CemntBd, ImStucc and 2 more&quot;'>
                  <value>&quot;BrkFace&quot;</value>
                  <value>&quot;CemntBd&quot;</value>
                  <value>&quot;ImStucc&quot;</value>
                  <value>&quot;Stone&quot;</value>
                  <value>&quot;VinylSd&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;MetalSd, Stucco, Wd Sdng and 1 more&quot;'>
                  <value>&quot;MetalSd&quot;</value>
                  <value>&quot;Stucco&quot;</value>
                  <value>&quot;Wd Sdng&quot;</value>
                  <value>&quot;WdShing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550002142079111168]' derivation='User' name='[usr:Calculation_550002142079111168:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group) 2]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142079111168:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142079111168:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142079111168:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142079111168:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group) 2]</cols>
      </table>
    </worksheet>
    <worksheet name='Exterior1st (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_503840242688516099]' role='measure' type='quantitative' user:unnamed='Exterior1st (2)'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exterior1st]' derivation='None' name='[none:Exterior1st:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_503840242688516099]' derivation='User' name='[usr:Calculation_503840242688516099:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Foundation'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Foundation (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Foundation]' new-bin='true'>
                <bin default-name='true' value='&quot;BrkTil, CBlock, Stone and 1 more&quot;'>
                  <value>&quot;BrkTil&quot;</value>
                  <value>&quot;CBlock&quot;</value>
                  <value>&quot;Stone&quot;</value>
                  <value>&quot;Wood&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation (group)]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Gr LIv Area Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664822185672708]' role='measure' type='quantitative' user:unnamed='Gr LIv Area Price'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Fence]' role='dimension' type='nominal' />
            <column datatype='string' name='[Functional]' role='dimension' type='nominal' />
            <column caption='Heating QC' datatype='string' name='[HeatingQC]' role='dimension' type='nominal' />
            <column datatype='string' name='[House Style (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[HouseStyle]' new-bin='true'>
                <bin default-name='true' value='&quot;2.5Fin &amp; 2Story&quot;'>
                  <value>&quot;2.5Fin&quot;</value>
                  <value>&quot;2Story&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='House Style' datatype='string' name='[HouseStyle]' role='dimension' type='nominal' />
            <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
            <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
            <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
            <column caption='Misc Feature' datatype='string' name='[MiscFeature]' role='dimension' type='nominal' />
            <column caption='Paved Drive' datatype='string' name='[PavedDrive]' role='dimension' type='nominal' />
            <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column datatype='string' name='[Utilities]' role='dimension' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BldgType]' derivation='None' name='[none:BldgType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fence]' derivation='None' name='[none:Fence:nk]' pivot='key' type='nominal' />
            <column-instance column='[Functional]' derivation='None' name='[none:Functional:nk]' pivot='key' type='nominal' />
            <column-instance column='[HeatingQC]' derivation='None' name='[none:HeatingQC:nk]' pivot='key' type='nominal' />
            <column-instance column='[LandContour]' derivation='None' name='[none:LandContour:nk]' pivot='key' type='nominal' />
            <column-instance column='[LotShape]' derivation='None' name='[none:LotShape:nk]' pivot='key' type='nominal' />
            <column-instance column='[MSZoning]' derivation='None' name='[none:MSZoning:nk]' pivot='key' type='nominal' />
            <column-instance column='[MiscFeature]' derivation='None' name='[none:MiscFeature:nk]' pivot='key' type='nominal' />
            <column-instance column='[PavedDrive]' derivation='None' name='[none:PavedDrive:nk]' pivot='key' type='nominal' />
            <column-instance column='[SaleCondition]' derivation='None' name='[none:SaleCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Utilities]' derivation='None' name='[none:Utilities:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664822185672708]' derivation='User' name='[usr:Calculation_401664822185672708:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Utilities:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PavedDrive:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MiscFeature:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Functional:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fence:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='LotShape'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_550002142082179075]' role='measure' type='quantitative' user:unnamed='LotShape'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Lot Shape (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[LotShape]' new-bin='true'>
                <bin default-name='true' value='&quot;IR2 &amp; IR3&quot;'>
                  <value>&quot;IR2&quot;</value>
                  <value>&quot;IR3&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550002142082179075]' derivation='User' name='[usr:Calculation_550002142082179075:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Lot Shape (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142082179075:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142082179075:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142082179075:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='671' />
                <format attr='maxheight' value='671' />
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142082179075:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Lot Shape (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='MSZoning'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[MS Zoning (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MSZoning]' new-bin='true'>
                <bin default-name='true' value='&quot;C (all), RH, RM&quot;'>
                  <value>&quot;C (all)&quot;</value>
                  <value>&quot;RH&quot;</value>
                  <value>&quot;RM&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Zoning (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Zoning (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='MasVnr'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Mas Vnr Type' datatype='string' name='[MasVnrType]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Max' name='[max:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Min' name='[min:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MasVnrType]' derivation='None' name='[none:MasVnrType:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Stdev' name='[std:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='NeighborhoodGrouping'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664821936644098]' role='measure' type='quantitative' user:unnamed='NeighborhoodGrouping'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
                <bin default-name='false' value='&quot;BEO&quot;'>
                  <value>&quot;BrkSide&quot;</value>
                  <value>&quot;Edwards&quot;</value>
                  <value>&quot;OldTown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BlueSwis&quot;'>
                  <value>&quot;Blueste&quot;</value>
                  <value>&quot;Mitchel&quot;</value>
                  <value>&quot;NAmes&quot;</value>
                  <value>&quot;NPkVill&quot;</value>
                  <value>&quot;Sawyer&quot;</value>
                  <value>&quot;SWISU&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BNS&quot;'>
                  <value>&quot;Blmngtn&quot;</value>
                  <value>&quot;Gilbert&quot;</value>
                  <value>&quot;NWAmes&quot;</value>
                  <value>&quot;SawyerW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BrMeadow&quot;'>
                  <value>&quot;BrDale&quot;</value>
                  <value>&quot;IDOTRR&quot;</value>
                  <value>&quot;MeadowV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C3&quot;'>
                  <value>&quot;ClearCr&quot;</value>
                  <value>&quot;CollgCr&quot;</value>
                  <value>&quot;Crawfor&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NNS&quot;'>
                  <value>&quot;NoRidge&quot;</value>
                  <value>&quot;NridgHt&quot;</value>
                  <value>&quot;StoneBr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;STV&quot;'>
                  <value>&quot;Somerst&quot;</value>
                  <value>&quot;Timber&quot;</value>
                  <value>&quot;Veenker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664821936644098]' derivation='User' name='[usr:Calculation_401664821936644098:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' z-order='1' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='NeighborhoodGroupinga'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
                <bin default-name='false' value='&quot;BEO&quot;'>
                  <value>&quot;BrkSide&quot;</value>
                  <value>&quot;Edwards&quot;</value>
                  <value>&quot;OldTown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BlueSwis&quot;'>
                  <value>&quot;Blueste&quot;</value>
                  <value>&quot;Mitchel&quot;</value>
                  <value>&quot;NAmes&quot;</value>
                  <value>&quot;NPkVill&quot;</value>
                  <value>&quot;Sawyer&quot;</value>
                  <value>&quot;SWISU&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BNS&quot;'>
                  <value>&quot;Blmngtn&quot;</value>
                  <value>&quot;Gilbert&quot;</value>
                  <value>&quot;NWAmes&quot;</value>
                  <value>&quot;SawyerW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BrMeadow&quot;'>
                  <value>&quot;BrDale&quot;</value>
                  <value>&quot;IDOTRR&quot;</value>
                  <value>&quot;MeadowV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C3&quot;'>
                  <value>&quot;ClearCr&quot;</value>
                  <value>&quot;CollgCr&quot;</value>
                  <value>&quot;Crawfor&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NNS&quot;'>
                  <value>&quot;NoRidge&quot;</value>
                  <value>&quot;NridgHt&quot;</value>
                  <value>&quot;StoneBr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;STV&quot;'>
                  <value>&quot;Somerst&quot;</value>
                  <value>&quot;Timber&quot;</value>
                  <value>&quot;Veenker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' direction='ASC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' value='40' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='OverallQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='RoofStyle'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_550002142080327681]' role='measure' type='quantitative' user:unnamed='RoofStyle'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Roof Style (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[RoofStyle]' new-bin='true'>
                <bin default-name='true' value='&quot;Flat, Hip, Mansard and 1 more&quot;'>
                  <value>&quot;Flat&quot;</value>
                  <value>&quot;Hip&quot;</value>
                  <value>&quot;Mansard&quot;</value>
                  <value>&quot;Shed&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Gable &amp; Gambrel&quot;'>
                  <value>&quot;Gable&quot;</value>
                  <value>&quot;Gambrel&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Roof Style' datatype='string' name='[RoofStyle]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550002142080327681]' derivation='User' name='[usr:Calculation_550002142080327681:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Roof Style (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142080327681:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142080327681:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142080327681:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142080327681:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Roof Style (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='SaleCondition'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Sale Condition (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[SaleCondition]' new-bin='true'>
                <bin default-name='true' value='&quot;Abnorml, AdjLand, Alloca and 1 more&quot;'>
                  <value>&quot;Abnorml&quot;</value>
                  <value>&quot;AdjLand&quot;</value>
                  <value>&quot;Alloca&quot;</value>
                  <value>&quot;Family&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Condition (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Condition (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='SaleType'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Sale Type (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[SaleType]' new-bin='true'>
                <bin default-name='true' value='&quot;COD, ConLD, ConLw and 2 more&quot;'>
                  <value>&quot;COD&quot;</value>
                  <value>&quot;ConLD&quot;</value>
                  <value>&quot;ConLw&quot;</value>
                  <value>&quot;Oth&quot;</value>
                  <value>&quot;WD&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Con, ConLI, CWD and 1 more&quot;'>
                  <value>&quot;Con&quot;</value>
                  <value>&quot;ConLI&quot;</value>
                  <value>&quot;CWD&quot;</value>
                  <value>&quot;New&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column caption='Sale Type' datatype='string' name='[SaleType]' role='dimension' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Type (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Type (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='SubClass'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log([Sale Price])' datatype='real' name='[Calculation_401664822163374083]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='log([SalePrice])' />
            </column>
            <column datatype='string' name='[MS Sub Class (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MSSubClass]' new-bin='true'>
                <bin default-name='true' value='&quot;160, 190, 40 and 4 more&quot;'>
                  <value>&quot;160&quot;</value>
                  <value>&quot;190&quot;</value>
                  <value>&quot;40&quot;</value>
                  <value>&quot;50&quot;</value>
                  <value>&quot;70&quot;</value>
                  <value>&quot;85&quot;</value>
                  <value>&quot;90&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;180, 30, 45&quot;'>
                  <value>&quot;180&quot;</value>
                  <value>&quot;30&quot;</value>
                  <value>&quot;45&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;20, 75, 80&quot;'>
                  <value>&quot;20&quot;</value>
                  <value>&quot;75&quot;</value>
                  <value>&quot;80&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='MS Sub Class' datatype='string' name='[MSSubClass]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664822163374083]' derivation='Sum' name='[sum:Calculation_401664822163374083:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]'>
            <groupfilter from='&quot;120&quot;' function='range' level='[MS Sub Class (group)]' to='&quot;60&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='UnderDaHouse'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Foundation]' derivation='None' name='[none:Foundation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;PConc&quot;</bucket>
              <bucket>&quot;Wood&quot;</bucket>
              <bucket>&quot;Stone&quot;</bucket>
              <bucket>&quot;CBlock&quot;</bucket>
              <bucket>&quot;BrkTil&quot;</bucket>
              <bucket>&quot;Slab&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='VnrType'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_646266584366424064]' role='measure' type='quantitative' user:unnamed='VnrType'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Exterior1st (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Exterior1st]' new-bin='true'>
                <bin default-name='true' value='&quot;AsbShng, AsphShn, BrkComm and 1 more&quot;'>
                  <value>&quot;AsbShng&quot;</value>
                  <value>&quot;AsphShn&quot;</value>
                  <value>&quot;BrkComm&quot;</value>
                  <value>&quot;CBlock&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;BrkFace, CemntBd, ImStucc and 2 more&quot;'>
                  <value>&quot;BrkFace&quot;</value>
                  <value>&quot;CemntBd&quot;</value>
                  <value>&quot;ImStucc&quot;</value>
                  <value>&quot;Stone&quot;</value>
                  <value>&quot;VinylSd&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;MetalSd, Stucco, Wd Sdng and 1 more&quot;'>
                  <value>&quot;MetalSd&quot;</value>
                  <value>&quot;Stucco&quot;</value>
                  <value>&quot;Wd Sdng&quot;</value>
                  <value>&quot;WdShing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
            <column datatype='string' name='[Mas Vnr Type (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MasVnrType]' new-bin='true'>
                <bin default-name='true' value='&quot;BrkCmn &amp; None&quot;'>
                  <value>&quot;BrkCmn&quot;</value>
                  <value>&quot;None&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;NA &amp; Stone&quot;'>
                  <value>&quot;NA&quot;</value>
                  <value>&quot;Stone&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Mas Vnr Type' datatype='string' name='[MasVnrType]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_646266584366424064]' derivation='User' name='[usr:Calculation_646266584366424064:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Mas Vnr Type (group) 1]' direction='ASC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_646266584366424064:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group) 2]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_646266584366424064:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_646266584366424064:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_646266584366424064:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Mas Vnr Type (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='YearBuilt'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_503840242684461056]' role='measure' type='quantitative' user:unnamed='YearBuilt'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year Built' datatype='integer' name='[YearBuilt]' role='dimension' type='ordinal' />
            <column-instance column='[YearBuilt]' derivation='None' name='[none:YearBuilt:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_503840242684461056]' derivation='User' name='[usr:Calculation_503840242684461056:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearBuilt:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='93'>
    <window class='worksheet' name='1/2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]</field>
            <field>[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3/4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[:Measure Names]</field>
            <field>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='5/6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16u29xf1clbpci18rk0yf131z7ft].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='NeighborhoodGrouping'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='240'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='NeighborhoodGroupinga'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='240'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='OverallQual'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQualGrouping'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gr LIv Area Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fence:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Functional:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HouseStyle:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandSlope:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MiscFeature:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PavedDrive:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Utilities:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:LotArea:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Qual, Exter Qual, Kitchen Qual and 1 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Qual, Garage Qual, Heating QC and 2 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Garage Qual, Bsmt Qual, Exter Qual and 2 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='BldgType' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SubClass' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSSubClass:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Foundation' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SaleType' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Type (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Exterior1st' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='VnrType' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='RoofStyle' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MSZoning' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Contour' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Land Contour (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='BsmtExposure' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtExposure:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:FireplaceQu:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Electrical' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtExposure:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:FireplaceQu:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='LotShape' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtExposure:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:FireplaceQu:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SaleCondition' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Condition (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtExposure:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:FireplaceQu:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='YearBuilt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Mo Sold (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearBuilt:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearRemodAdd:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:YearBuilt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQualKitchenQual'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Exterior1st (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MasVnr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='UnderDaHouse'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[BsmtFinType1, Foundation, Bsmt Qual and 1 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation &amp; Bsmt Qual (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1/2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3/4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5/6' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='BldgType' width='192'>
      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
      cKaZ9gvNnDpyhEv6Imorbv50F+f8+3l0RYQju08RCCUlBAZn8ABAKhUnEnNQW1+J6yb77WXr
      eWpTMb0HtvPOgXeJF9Rx712LyHyvy24rWs0XN1cTPbuft7YfosexiM8/sJK89zqHqjef/Kw0
      HO+93qI6KF21kXpvH+2BqATA4OQZYbPgVjwjTHx88qR4YXoSAGFqEgBhahIAYWoSAGFqEgBh
      ahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoS
      AGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBh
      ahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhaupcV0B8
      NLqu33S7oii3uCbGJgEwIF3XiSVSnGrt50hTD+FogpryXDasqMDjtEkIZkDR3+9UIj4yXdeJ
      RCK43e5Zef9YIsnrB1t5dV8z4+EYAIoCaxf7+e7jq/A47bNS7u1GURRFxgAG1Nk/xvHm3isH
      P4Cuw5n2AMfP981hzYxHAmBAl4NRxkLRaduTKY3ewfE5qJFxSQAMyO2w4XLYpm23WhQyva45
      qJFxSQAMyJ/no6YiF5fj6hyGAlQUZrCsqmDuKmZAMgtkQD6Pg8+vrsTjsvNu+wDRRJKy/Azu
      qy8nP9Mz19UzFJkFmgWzPQs0VUYwkmAsGCWpaXjdDrK8TpkCnQFFURRpAQxKURS8bjtet0x5
      fhwSAIOSleBPhgTAgHRdJ55IcepCP0fO9RCKJqipyOW++grcshI8IzIGmAW3YiV426FWtuy9
      YSW4xs93H5OV4A9LVoINqrN/jGNNN1kJbgvQICvBMyIBMKAPWgnukZXgGZEAGNAHrQRnyErw
      jEgADOj9VoLLCzJYNj9/7ipmQDILZEA+j4PPr6rE47RztmOAWDxJWUEGG+rLKchKm+vqGYrh
      Z4F0LUkw0MLhvQdpCUTAnUft2rtYsbAEjw1AY7hpB9t2NXMZD/7Fq7h7bQ25zqnGTyPYeZQ3
      t5+gN6yQPa+e9etXUeSe3B/qPMq74QKqKkrJdAK6Rmi4mSMHeinbsIFK7/RG9NatBMe5HIyS
      Sul4PXayvC6ZAp0B468E6zqRobO8vbUB1/K72bTWRSo8wLiiE4+Dxwbxjh38als/9Q89hJ9R
      Whob2b1P4bMblpBphUTPYV7aeoHiez7Lo+ka3WeO8uY2nU1fWEu+CqngEIPjXspSk0WmkhM0
      791JT8aDrHHN3cE2uRLswOt2zFkdbgeGDoCua3Q37CWy9Etsrs/DblVALyalKVgsABOc2tmI
      f+M3WFvlQ6WEdDXJoaY22nrns9KfovlIE+mrNnBXTRkeFbI9KvGD+znTvpT8BdPP4OPn3mLP
      wGKe3FyOW5WzrdEZehCspVo4eTSdJUvSSUZDBINBQpEEGgqKAkQ7ODdcRf3CNGwWBcViJSO/
      AJ/LydjAMMl4L20jBVSVZ+FSFRRFwZ2eTUFhLqNdvSSuK00nMXqc17ZNcO+frqfQbkEOf+Mz
      dAvA+CD9VgsZ+1/lwLkORsIa9vRS6u9ex9olftJCQcYy0sm8cqgqKA4HblUlEYuRCIcJetx4
      VfVK31lRVexON46BCFMz7fHgCIG+Ds7sfgfnpu+wIv36Q1/X9Ztem5NKpWbxw4tPgrEDEIsR
      Do+j+B/hK/d9CZ81QaB5P28eP0lLpo86H+By4rj2eLVaUVXb1Q/ucOBQlKtnc4sFq93OtRcT
      DDYfpOW0TjhWxGMl0/vcqVSKZDJ5k+rFpm0Tny7GDoDThc/rp3pRCelWACsF1UupPneE4MQ4
      sSwb9tERxnQd59TfxONEYlHibisWVUWdCDKRSlHA5Fw6ySTxcIiwmoUVSALFKzfzyFI/o3tf
      5ODesxRsrCffeTVVqqqiqle/ylsxCyQ+GYYeAyi+MkqUNlr7rjnTKhasqgWLooA7j6JUL5fG
      tfd26sSDE4QScWy+NGyuTPIYZWAiRkrTAZ1ULEpw7DKWrAyuP9enUX3fJhZFG9h+sJXL0ru5
      LRg7AJZ8qlc4OL/rEO0jMVJanNHOVrriFjxpPuy2ApbVpDi24xR90RSp6BgXz7cyFHVRWJiO
      xZpDdZWF80fP0DkeR09GCbS9y/l+lbKKbKw3FmgvYMWGO3B17udQ8xDTOz3CaAy9EKbrOvHR
      do7vO0rraBQdC1abh6LqZaxYXEGmy0pqrJ297+ynY0JDAVR3LgvqV1NXmYvTAqmJbhr2H+Jc
      IISug8WWRunSO1i9pBiPBcbffYN94xWsXLqIfM/kwttQ6yH2ngxQcsdGVpV5pp1FpAtkDIqi
      KIYOAICupYhNDNEXGCacULB7MsnLz8bnsr03sNWJXu6lq/cycVQ8mbkU5GXitE714XUSwUG6
      e4YIJxUcvmwKC3PxvDfHnwwOMpp04UtLY/LSG51UIsroQICkt5h8n23adKgEwBhuiwB8GkkA
      jEF+ECNMz9jToCam6zopTSeRTKEDqsWCTbXIxXAzJAEwoKkrQRvO93H8fC/hWIJqfw4bVlSQ
      7ZMrQmdCAmBA0XiSNw5fYOuB8wQjcQBOtPTR0j3Cdx9fRbrH+UfeQUyRMYABdQbGONHSd+Xg
      h8kfxTd1DnKiRX4UPxMSAAMaD8WYCE+/ziiZ0ugfDs5BjYxLAmBAaS77Te/9Y7UoZKfL1OtM
      SAAMyJ/no7YyD7fz6p0hFKCqJIvlcnv0GZFBsAGluexsXDOfjDQnpy8EiMaTzCvO5L7l5eRI
      CzAjshI8C27Vj+Kj8STBSBxN03E5bXhddpkCnQHj/yjexBRFwfU+N8gSH56MAYSp/X88iBfV
      UoErigAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='BsmtExposure' width='192'>
      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
      /SRjcXHu/wNH72YUcCEQmAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Contour' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Electrical' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ExterQual' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ExterQualGrouping' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVnElEQVR4nO3deXhU13nH8e+9s2tGC5JAGxIgEEgI2YjVmMXGGO+7ncVp7MROHreu3aRp
      nrZunaZO+jR1F7vumjpp6iRecezWdpw4tQ3GGMxqDBgQICQBQhtC++wz957+ISGEEcnjoEFT
      n/fzPPwxVzNn3svM795z7p17rqGUUgihIcMwDHO8ixBiPEkAhNYkAEJrEgChNQmA0JoEQGhN
      AiC0JgEQn4htBdmy9lfUd4S40CeQlLJp2PEOWw+0YY3RmzvHphkxkn1yC3/yxz8kEgjgHNrE
      zLv9j/jSiimjPl8lIvRHFP5AxvDzPymlFNGeI6x//ees+7AR25PP5bd/gdXzpuF1GJ+orUSk
      jxe+/xgFV9/P6uoihl+tEhxZ/xy/2F/CA0vcv12h58XA707w9JqfkfO1+5g1wXveLUoAUkAl
      +um3c/jdP3+M+UW/+fnxPWu476k+/vrRrzMj8Nu9ZzJygpf+4wkO5F7Dd/7+QezWHTzx2GN0
      R/6Yzy+fiucTZEBZFu3NTbhD8TOWx9p38dOfN3Hjw1+lMOPCdx4Mw6CweglXbdvA86/v46G7
      5nO+EZAAXCjKpm3/eta8P8BX77mRjOBBfvrMJkovKmfXq2/QfijB499uoWLBrdz3hSUYHXt5
      5scv0tijqF55OzdfMRdH/yHW/M8WVlx3NfWvP03vrBu4Y3klLhOCLTvYfjyTL919ORlOE8oW
      cts17/Efb63lyot/h/YNL3Ao51I+u2wmjhO7+feX9rD6S3cx3T7Cc089T11nhKrln+P21dU4
      Rl2BOI27ttFXcglzJw5++ZPhLja/8SJv7mwme3I5md5SPvflyzmx/r9ZG67iMzMGWPPqHlb+
      3gPMNI7y4o+f5qOWCFPmXcedty8ly7R58+l/xFF7Jytriunev5Y1WyLcfe+VNP/iWd4OFlF8
      che7O00uue7zrF44FY8jk3nLF/D0v6yl6Zb5VGWe38ciY4AUiYd6OLBnO9u3b2f79l0090aZ
      NKWCgvZ3+MHPt/HKsy/QM3kBKy5dwX2fXU3BjKU8+PB3eeAzi/D01fHk489TcO39fPtbXyOx
      5ce8sG4/4Ug3u3ZuY+PLT/F+dyaFeQHMoS177FgjAznlTMo9tU00yK+oRHW1MDAQpr1+D3ub
      u7AVEOrggw/20h0Hgn2UrLyLb/7eTRx45Ql+uadn9BWKhThY18G0mgoGOz9JNq95jJfrs/nq
      N/6MW+dk8N6mzUSVRfeRfWzcsonXXl+PnVeEN3iI7//V39M/6w4e+tbXKG55hcf/cx19CUXD
      ni00dQZRQLiziR27DxMnSefhXeys6+OSL3yd+++Yy9s/+T5bG7oA8M6cx0waqD86cN6fk+wB
      UiQRDdLccBDVCeDFUTCV0rLJ3PSl2/jWn/4zTRddxTfvqsLldGI7nRimE7fHi9sFnQd3suN4
      O5G1L9C4Fk609WIcbSVWGYBQD9GSL/PwrQvwjuzWKIUyDIzTPXYM0wVY2LZ9zjqNgun4P3yV
      Ne92cCI8wMmePiDr7CdaFsEgBIYD1sHWLe0suudrlOVn0u7z4jBPj0yT4RgL7nmA6mkT6Pjw
      VT6MFPO95dPJ9rlYduMy1j6+hdaepb/2/zBzSgWlE/zY7vlcNOGX7DrWyYoZeWBk4HIn6O7r
      B85vFyABSBF/Ximrb/3ix8YACmeGCzsUojcYhuTor41Gwjj8k7nyplsY7G3cRkZOHq7QXsgo
      YN7c6Wd++QFXYSH+gcP0h5KQ4QQU/c2HMXKKyQz4zlGlxaFf/Bs/3ZnPlz93M0bXnnOvkAGm
      CZZ1KkwhwiETr9cz6tMDxVVUT8vFYdgkEjESLg9eY7Bow+OGeIxk0jr3+53x3gZOp5PTv1tW
      GIaJx3X+A3HpAl1AVrCNV37wMpUPfpub84/zwlu7iQJGZibuSB8DoTi2ZZE/bSb50Tbqu5wU
      lU2lIMdDLBId7L44HDjNs0e0gSmXUp3VyhvvbCNm2UQ66/nfN+uoWnEZEzNNnC6TWDiGnYzQ
      1tZBLG4BMdqajjKhcjFTs216gufeU+DyUFjo5ETTqS7SJMpK4VD9YcLxOP293URGjJkNp5PB
      g08m+SUzmJ5oZmNDFwkrzOFNO3FOr2bSBC9uh0kkGiMZDdLRcZLYiI2CFY+RsC1ONO1mb5dJ
      TVn+4B+CrZwIBiiclH1enwfIHiBl+pr38q/f+TpZQxvI2tv+gMXxtWyOzObhy+bim97NI4/9
      jPcXVHNZ2TJWT3uXJ//yj6hY8UXu/9wC7r3rKE/+8DtsfjqTvMJylt1wE3NzwTQMMM4OgNtf
      yB13f56XXn6DP/nDFzHinbTEq3jk0go8Tpg5fz6vP/U03zq6mYVTPCjTwMBLzarVrPnbf+C/
      +lfjcBoYp7bSpnnm2zgzmFU9g5d/tZ+gWkDAyOHKO27i+z95koe2FTG9wEtyqPtlGAYjM+ov
      ms09d6/iR089ylsJC9+EWdx579VM9BnUXrKQH7z0BN/9YC7lWWEM8/TeqmXrizxS/zP6Yg7m
      Xvc7LCzLBaXo3r+T9uw5VBSPwaFYJT6d+g+q7z1wt3rkpxtVXzQ5Nm1Gjqvnv/MN9aNNHSph
      K9Xd1qz6owllWTG171dPqnv/4ocqatlj8EYD6p0nHlQP/Nf2jy23Vby/Sf3okW+q57Z3nPe7
      gOwBPr0yZ3LP73+VnSczsO0xOm3qLebaL97Cvzz3PB9N+Qpq1xusr+siFk8Qihhcfc2duD/Z
      ObdPRNk2+ze8Tfuk5dxXkzsmbRqnkqA7pRRKKUxThkW/jlIWwb5+nBlZOKwwA8EwSRsc7gyy
      svy4HCbnnwGb6EAfEcPPhMDpbo5Silion4TpI+Bzj9YT/EQMwzAkAEOUUsTjcTye0Y9qiE8f
      uSZYaE8CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABC
      axIAoTUJgNCaBEBoTQIgtCYBEFqTAAitybQoKaCUImnZdA9EsG1FTsCL1+0cnnRKpA8JQAoo
      Ba9sPMi2uhYSSYuLZxRy2/JKsgPnf0MHMbYkACmwr+kEL67bR3xo8tfmE/3kZvm4eemsca5M
      fJyMAVLgYHPX8JcfIGnZ1B3pHMeKxLlIAFKgIPfs+xwVjrJMjD/pAqXApdWTWTW/nI8aO7As
      m5mleVy/pGK8yxKjkKkRh4zl1IhKKSLxJEfaeklaNlMKssnye+QoUJqRuUFH0HJuUKWw+vsJ
      rl0Hto3/8stw5uWNev+BTyPDMAzpAmnMCgbp+fFPCG/eAkCsvp68378fR/b533nl/wsZBGss
      0dxM7FD98ON40xHijY3jWNGFJwHQmWFw1mT+mk0YrtfaijO4y8rwVFYOP/bMmI57evk4VnTh
      ySB4iK6DYDsSIfTeRpRl4V+6FEdWplaDYAnAEC0DoDm5Q4zQngRAaE0CILQmARBakwAIrUkA
      hNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtJZ+
      E2MFO1i3bi31bQOnl3kLWHHVSqqKsoh21vO/b26i085m0coruGhyDgDJSDe7Nr7D7mNBSi9a
      yrLa6WQ4DcLHdnDIMYe5JV5QFm2HdtFsF7CgsgRTk4u/xbmlXwD8E1l+7R0stQev1U9Gutm0
      YRtul4dYVxO/fHM3FStvYZXRzi9/9Qbu2z5LZbZi37tv0BJYwGc+k8/ed9ey/iMX19VOIdHX
      SruzEkog0nOUrR81U7Oy+qzpcISe0q8LZJi4XG48Hg8ej4d4VwMR/3SKJ3g42dFKoKyKWYU5
      BIoqWTnfz779J7CtDo52ZLNo4UyysnKZv2AWnc1tWCPbtfrZt+kDcqqXMSXPKxPVCiAd9wAj
      KKuX/R92ULFqMV4TQpEIGVnTcJqDX95AUQnG5pPEgzYDgRImeAaXe3JzCfQfJDjUTmSgiwPb
      9tIcqOK6WfnDK62UYuSsMEopbNu+gGsoxlsaB8Cmr34Px3OruGSCC0MplGngcjqHuy+Gx4Pb
      tlDKBo8H16mXOl14DQObwV3ckV3r6UjEmblyHp4R+zzLss74wtu2TTwevzCrJ9JC2gZAxfrY
      3RSk5uK5OIaWOQ2DaDiCpRROA+y+PkLefJweG2dvL2GlyDRAhcP0OEy8QByoWn4by/Oaeeut
      rTSV3cRUv4lhgNN5evVP7Q1kYiy9pN8YYEh3axMhVy5lEzMHFxiQnzuRnrbDdIeTWNE+9n7Y
      QFFlGS7fVIo99dQd7SeZTHDsQD3u4gJ8w60Z+CfN5splRWx8/W3aQglkOjwBabsHSHD00EHy
      ZlxPhmu4w0NW4TQqco/z5isvYtg2noJqrikd/JpX1Vay/v3XOKRMTE8eCy8rO6tV/+S5LCx7
      m207D3Hj8tk4ZCCsvTSdG1QRDYUwvX7cDuOM5XYyzsBACAsHvkAAn2uwg6TsJJFQiGjCwuX1
      4/e5MQ0DOx4mZnjxuUxAYSVihBMQ8J15yyKZG1Q/MjnuCBIA/cjkuEJ7EgChNQmA0JoEQGhN
      AiC0JgEQWpMACK1JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsSAKE1
      CYDQmgRAaE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1JAITW
      JABCaxIAoTUJgNBamt4lUlwoSimSx1tQSuEqKcZwOH7ziz5FJAA6U4rw5s30v/oaKEXmVVcR
      WHUFaHT7WOkCaSx+7Bj9//0KiaPHSBxrpu/V14g1NI53WReUBEBjVm8vVnBg+LEKh0l2nRzH
      ii48CYDGnLl5OHJyhh+bmZm4JhWMY0UXntwoe4iWN8pWivD2HfS/9nNQNplXXYV/xXJtxgBy
      p/gRtAwAQ0eBOjpAKZwFBRimPp0CCcAIugZAZ4ZhGHIYNAWUUgQjcfYf6SSetKkqyycv24eh
      Sdfi/xMJQApEYkn+7rn3OdzajVKKkolZPHDrQsqLJox3aeJjJAC/hcOHD1NXV3fOv7d0DrDv
      g4bhx03t8Fz8GBdPP/cRlqKiIhYsWDCmdYrfTALwW9i/fz9r1qw5599tpXBY9uADZYNhsndr
      HXXbz90FWrRokQRgHMggeMhYDoIbWrr5ix+9QyiawNn6Ps6pK7jvxnmsml8+BpWKsWIYhqHP
      Ma8LqLx4AvdeX0vtzEImZHq5c9UcLpk9ebzLEqNI2y5QMhqkq6uHqAUZWbnkZvlxmAorFqKz
      s4c4TnLy8snyuQBQVpy+7i76I0l8WbnkZmXgMA2scC9BI5NsnwOUIhrqI6I85AS8KT0qc0Xt
      NJbOKeXx1s3ccOlMHKYcAUpH6RmAZC871r9LW9TAYSh8k6ayqPZiMo1+9mzawKGeJB4VJ+ad
      wjXXXkK2A07Ub2fDruO4vG6iCRcXLVvB7KIsgg0b2Oy8gmuqAljJIB++9xbJsmUsm12YsvIN
      w8AwwOdx4TANnA7Z0aarNAyATVfdFloDs7n6inIynBCLx3G6FL3NjTRHs1h93VJyHFE+eucV
      djTWcMUMRd2uJiqW30JNoYeOfe+x4cBRqopqTjerbLrqd9Csyrl6ZoE2p/vFr5d+mya7l4/2
      hCiemODg7h1s+2APnQM2hgk9Pd3kTJpKts+J6Q5QMaecrsPNJCPHaLdmMKMkgMPhorh8GlbH
      SSLDjSpCHXvZuCfG8lXzyXaZyNdfQDruAeIx+iI9dB87yeQJGdiRLjauf4elq1aRROHN8A2n
      1szKwh+LkYzbWDnZ+E614fMxwVLEGEz4njef4aDhZN41N1E04iBPMpnEsqzhx5ZlEYmcjs1Y
      SEWbYuykXwAMA9OdT82SxUzzu0HFyHx3A0fbT1JoK2LxODbgAFQ4QtThwzQNCIeJw2AI4nFC
      qMHnANUrb6c6vpPtjc2Eyifhdw5u/x0OB44RlwDG43HcbveYro5pmni93jFtU4yd9OsCebIp
      DfTT0B4dGkyauNwuDMCfkUG4v4ekrQDFQGsLxqSJuPyTyI4cpzs6uDza00UkK4B/qEmHK4Op
      tcuochxh3Y4jRIfOUQ22b5xxNGjkMvn36f4H6RgAvFReWk3rhrfY3dRO67EGDp0YoDA/j/yi
      UhKtdexuOE774Z2s3WNRO2cipmMi5aVxtm7aRWvrMTZvradk2mTOuLzbEWDWkhV4Oz5g39Eu
      5PyfgHTsAmHgLZzPzVe62LRjPQfI4uIlKymflIFJKauvSvLuhi002pnUXr2aaf7BDM9ashpr
      x2bee6+B4qpFLKgsBsCdO5Uyx+C5AldgIksWz2V3Wzc2ueg1/4EYjfwUYkiqrgd49NFHeeih
      h8a0TTE2DEN+CiE0JwFIAaUUA+EYW/Ydpy8Uo7M3JGOONCUBSIFwLMGjz27in17aSmNrN3/z
      7Eaa2nrHuywxCglACmzd38LephOEYwmSlqKhpYe1O5vGuywxCglACvQMREdZJmeD05EEIAVq
      Kwrx+06fUfa6nSyYVTyOFYlzkQCkwLSiHL5yXS3zZhaRm+nlC1fWsLiqZLzLEqNIwxNhnw4r
      a6eytKaUx1vf54YlFYO/VxJpRwKQAoO/NRns+pimgUMuiElb8skIrUkAhNYkAEJrEgChNQmA
      0JoEQGhNAiC0JucBNPfxn2mPvD5aBxIAnSlFsqWF/tdeR9kWWddeg7u8XKtJwyQAKXDqDjF7
      G0/QF4rS2RsiPzsj7bauVm8vvc8+R+TDXYOPT54k7w8exJmXN86VXTgyBkiBcDTB3zyzkX96
      eSuNrT1875mNNLb2jHdZZ4kfP078yNHhx4njLcQb9bpuQQKQAlvrWth3pJNILEnSUjS2pucF
      MabHA84RnQCnE9On1yReEoAU6A2efUHMaMvGm2vKFDLmzxsMgdOJr6YG94wZ413WBSVjgBSY
      O6OQl311BCNxIH0viDE9HnLuvgtPzRywbHy1czFcrvEu64KSAKTAtKIcvnJ9LRs/OkZz0MeN
      q2tYPDs9L4gxTJOM+fPHu4xxIwFIkcvnTmXpnFIea3mf65dUYKbZESAxSAKQAqcuiPGcuiDG
      lKFWupJPRmhNAiC0JgFIAaUUfcEo63Y20TMQob0rKFMjpimZHXrIWM4O3ReM8vB/rqOlcwBH
      6yZyqq7kG5+9hOqpk8agUjFWZHboFNl2oJXmE/3YSqEUdPaG2bD72HiXJUYhAUiBcDQ+yrLE
      OFQifhMJQArUVhSR7T/dlfJ7XSySmeHSkgQgBUonZfHAbYtYVlPGxJwMvnLDPBZWFo13WWIU
      ciIsBQzDYHFVCYurSnj06AZWzZs23iWJc5A9gNCaBEBoTQIgtCYBEFqTAAitSQCE1iQAQmsS
      AKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNb+D2mOs1vnKll4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ExterQualKitchenQual' width='192'>
      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
      e8JvEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Exterior1st' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Exterior1st (2)' width='192'>
      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
      J+36O9IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Foundation' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Gr LIv Area Price' width='192'>
      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
      B/Doa/4/yzTUTJpcNXsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='LotShape' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deXAc133nPz03MIM5gBncN8AbIMFTPCWKpE5KsmzLsiTHtzdOUknVVnk3
      m6s2dlLe3YqddWLvOo7XsRMfis/IlkRdJCVSJMX7vkGCxH0NBgMM5p4+9g+QIMABQYIaEk3O
      +1SRVXjTjX7o6W+/33vvd0iapmkIBFmIJEmSYaY7IRDMJEIAgqxGCECQ1QgBCLIaIQBBViME
      IMhqhAAEWY0QgCCrEQIQQKSVX3/nH9jVKc9wR+Ls+fk/8Jv9XdytnggB3IzB/fz1F36PX565
      9VOS4QDtnf0kJ9lkV5Mhzuz4KX/6R7/PFz//Jf7wP/8ZP95yihFgYM/3+fznvsX5zPX+pqgJ
      P9t+8kNOeh5gRanxLl55MqzMWb6Q5lf/hV3nB1En3D4NTUkR8ndw9K3v8Yef/yJvXvzwVxQC
      uBmaQiIWI6Xe+indB37Jn371+/TK6ScFT73GN35wgI1f+Xu+/8N/5pt/9SUq5WFigKakiMWS
      KJnr/U1QGDi/n/danTy1sQGrQbprV54cifzyxSyvMbJj1yFGkhPvX8h/hi0/e5m3th/k4mCU
      SW7vtDF9+F+RpWgp/Oc+4D/e2ENfwsKsBx5l89p5xDr28KtfvE9fe4Jv/+3fUFi1iI89s5l6
      nxWAYE8nYXM5C+ryMAJ2bz3rP1IPgB/Q1ATtx7eya+t++pJ5PPzil1hXYycVaOa3r2yhuWsY
      xeRg3rqP8JEHZ2GJXOKVn7wKs5cTOrmb9oiZxU++xJNNxRiA4dZ9/Po379IZBd/sh/j0J9aQ
      d/W1l4rQfOwUppom6jz2K39XjNaD2/mPdw4TtfqYV2lHq32U5xoN7HztVYLVT7HK1cwrW7tY
      9exm5ntSHH33Nd472o6WV82GZ59lWbULNXmR33zvfeqefYFllbkMde9jy5vdPPDMZopjB/jV
      G834SvO5cOo0qncOj2x+ksYyOwark3mN9fz2F8foDK/FZc0du+VGWz5LHn2Rp+M72PM/3s7I
      1yhGgNtBU+k79hZ//73Xca98hpeeXEzXOz/gn7dexF22mIc3NpFfNJvnPvc5XnrqIcrc5rFT
      S2Y3UqYc5Z++/zYXeoNE4inG+yMmE5do93vZ+NyLrHNd5Mf/up0+INzbhbl+HS985rN8Ym0h
      O370j2y/JEMiwNH3t3OgzcjqZ5/n2aU2Xvu/32JnWwrFf4Dv/uPvyH3go3z6hSfIO/djvvXb
      5rFrpaIRLrT7Ka2twm41gJaibdev+Lt/eZ85T77Epz6xjOD+7exvDoI8wsUjuzl4+gSv/PBl
      LgzJSJLMwZ//b14+KvPgxz/FI3Pj/Ozb/4fdF0Mocj+HduyhPZgEIBpq5eCeo/jDMvHBi2x7
      Zy8DOfU8++LzVIU/4Mc/e52OkAoYKa6qozjh54w/Nu6mSzjcFcyZX4nDnLnHVgjgdkgGOLxn
      N8qcx3ly+QLqmzbw3MYaDr2xjWCOC6/XidnqoLSikvKiAnLGfWH2WY/zN3/7FSoG3uU7//Ov
      +fo//ph9Z3tJXvncmjOPtZsWU19dR125m5G+QWKAZ84KFhca6e3soB8HBUoP59uCAEiSxOwl
      K5lVVUPjYy+xwnmZXQfPcnbXOxzWPBQr/XR0hygucdK2ff9YX1KpJAPJKIUeFxYJiPXwwfuH
      cK39JE8srqemuhSH0QjjBDp49hyzvvRNvvGXn2FhQQevv93OiiefZ9X8eprWfZzV+X3sOnKW
      yE3ME0dBIfPmN1JTM4t1TzyB0nmYy72DaIDR7sBjGaa3L5WZ72sKhAl0OySTDA8nyalzYLxi
      N+fluTD2tOMH8qY82YCzahlf/rNFDPdcYP+Wn/Dtb/8b/+3rf0bZjS9I655f870326mcVUGu
      MUpEU8if9Fg3HrdKS3iA3uQwiSFovXwZCcDSwHNPLUo/Rbpi+8diDIRU8rx2JCafD+TOe4gN
      9Xmjn4b8BFUT+W4XAEajEafdRDAYIinbp7wL4y6Oxeom1xgjnEyhwZUrK6jKnffUFwK4HSxW
      PG4L0YEQiqoBCsFAALnURxEQveGJGrKsYjAYMBjMuMvm8+jmdfxq6y/oCjKFAAY4uOVdHKu/
      yheeqsZmCvDvZ/fQN9mhagdtHUa8y6soDtuxmdxs+sznqJhkrDeaTOQZLQyHI8iA2WQm16rS
      P5JEQ5tUAs68vGvt7iLyjSkGBoNQ50GWZQJDMQoqXFjMt7iQqamEQ22MyPl47bmjvzuRIJJy
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='MSZoning' width='192'>
      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
    </thumbnail>
    <thumbnail height='149' name='MasVnr' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodGrouping' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodGroupinga' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='OverallQual' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29R5Ak2Zmg9z0XoVVqnZWZlZVZWrRCzwBoATHTwMyssJXYWR6WRuMe9sQT
      lfFAMx5IHkgeaDzwsmMUxrUxzC4xxGCAngZ60OhudDe6ulSXSq21COUR4fLx4FlZPagodHhW
      VnZUpX9maRHh5f78RcX7/b33SyGllISEHEOEEEL5qjsREvJVEgpAyLEmFIAmwHMsblz9DVPz
      KzSyHjWMIrNzswBUSzt8/NHHbOyW65wpmZudO8yuPndoX3UHQuDzT94jMnCZyc9+SX7rJOdO
      DzAxu015d5WWnmGM9RlkIgtGGS3XTVer4LNrNxgeGubn7/yC19/6Pj/9yducPjVMd2uSsoyz
      MjdFa98I965dZ2h46Kv+ik1LOAM0AdWqSTqVIq7r4Bb4//7yHXa35pndqrKzvc3dyTkujvaz
      Va5x6+atv3OtIwXxWAxVSKanpyhsLjG3uIxhWdy6/vlX9I2eHUIBaAIuvfI1Jq59iNY2wKWL
      VyCa5PdeeoH2uKC9o53xM2dRBSBUBvt7icdT9Pf1A/C1K+f45Ts/o6akGOxuZ3G7RktCR9Hj
      9Pd109ff99V+uSZHHJUaVEqJEOIobnUMkaytbdDd3fVVd+SZQgghnroASCnxPA/XdVGUcMIJ
      aR50XRcH3gQ7lsHNm/cQ0QSdaZ2NnQIDI6MszUyjJ7NkEjq5hE7RTdDXmQVAVdVD63xIyGHw
      RI9k27FxHAfDkly5eIqFqRk6B8aICo9iYYvbM2v0dmQPq68hIYfOgZdA1cIa0+sWTnmbSFSn
      NRunaKm4jsQ2KySTMaLSJtI+SGc2geu64QwQ0lQ80R5ASsn2xipqPEs2obG2WaCnu4P89gZ6
      sgVNeMRiUQyjSjIZCkBI83Ekm+AHhAIQ0myEznAhx55QAEKONaEAhDyXSClxHYcvW+GHznAh
      zx3VisHizDSKouJ6Ln0nhkilM3XPDQUg5LlCSsn89CSjZ86jaRqu6zJ5+xZj5y/W9UQ4sAAU
      ttdZWttCi6XQHANLRBjq62ByapbeoXGwywjXJtHaRVwPtT8hR4NZqxKPJykXCxR3d0hlc6Qy
      GSpGue4scGAByLZ1oUiHvJdiY3aZdHsvK8trjF+4xNzkBNXyLlqijXOdCp7n4XneE32xkJBG
      UFSV9ZUlFFWhrbOb/O4OS/NztHf14LruI+cffAkkJcubRcbGe+hqeZmlmUnKlr/x8KQgGoth
      OTYSEELs/4WEPE0EAkVVcRwH27ZwbRt1b+lTb/wdWAA8z6GjqxdFwMrCHLYa5/SpTqYm7tM3
      MoZnGUSEh2E6pGM6QojQGzTkqWO5Lu1d3XR091DK52nt6EBRFFzXQVHij5wfWoJDniuklEx8
      fpOhU+NEYzFsy2L6/h3Gz1/kt+2+oStEyHOJadZYnJnee+qrDAyNEEskHjkvFICQY03oCxRy
      7AkFIORYEwpAyLEmFICQY00oACHHmgMbwmyrRrVmoUdi6IrEloJYRKdiGMSTSaTnIgApVFQl
      tACHNCcHFgDLrJHf3mCz5KG7NVwBHbk0JctDUaPowsKsVBk5fS4UgJCm5cACkEzn2Fxb58xY
      P0vLBTIRm5WdCpcunWV6YpLNjXmSHaNEVIHruriu+6XBCSEhR83BfYFcCxONeDSBWbzPoqdw
      oruV69euk23rorNvBGkZlGoOmbgOhImxQpqP0BIccmwJLcEhx55QAEKONaEAhBxrQgEIOdaE
      AhByrAkFIORYEwpAyLEmFICQY82BLcHV4hb3Z1fpHTjB6tw9IqlWurNxZlc2ae3sRXGruGaV
      rqFTJMLEWCFNyoEFYGluESUSpVAoEItGMYwKa67LpSuXmZ6YJL+5QKL9JHFNCX2BQpqWAwtA
      LpdGkMQq52lp7cLeWCOiwtLyMq7QaO8epFYpYjoesb0ZIHSFCGk2nqhE0s7WJqlcG1aliI1G
      SybJ1uYWre0duI6FKsBBI6qroS9QSNMRpkUJeW6R0sO2LDQ98tiMhEKIg9cJDglpVsrFAsvz
      c0SiUSzTpLt/gEyu5XBzg4aENCPS81iam2Xs/AUURUV6HhO3b5HKZOuuQEI7QMhzRa1WI55M
      oij+YBeKQiqToWoYdc8PZ4CQpmNl6i6Ld68DMHL5VToGhhu+NhKNYlarSCkRQiClpGoYdPb2
      1z0/FICQpmJ1+i759WVe+aN/hkRy892/QlFV2noHG7peVVVa2juYuXeHTEsrpUKBZCaLptUf
      6uESKKSpWLx3k9OvvolQFBRF5fSrb+7PBo3S3tVN//BJVFWld3CQ7r7+xxZnCWeAkKbji5p5
      z/Meyev/ZQjhVyiKxmJfeu6BZwDpOcxOTbBdMNheX2ZuaQ3XNrl/7x6G6VAsFjEKu9TsR+sy
      hYQ8jpHLr3Lzb/+KWrlEpVTg9q/eZvjSy0/tfgc2hK3N3GepZDM6PMDy0gYJ3cO0XHpHRlia
      XyCqeVSqLufOn0XgS3JYIimkEXbXlli4cw0hFIYvvky6rfOp3EdRlIMbwoxKlZNjZ1mauIWe
      7CCqOxSrLvFoFFXAzuYa0Wz//uAPneFCGiXT0cP513v2P9er7nhYHHgGsCoF7k7O09rZg1Pe
      xnAURvramZxZoHvwJNgVVGkTyXaRieuhK0RIw5TzOyzc+QyhqAydf5F4qn6V9ycl9AUKaToK
      m2vc//iXjL/6BtJ1uffxu1x4/fsksy2Hfq8wMVZI0zHx6a944Q/+Adn2LnJdvZx/7XtMX//o
      qd0vFICQpsJzXRRN3/+sR6O4tvXU7hcKQEhT0TNympnrHyOlRHoeU599SO+pc0/tfuEeIKSp
      kFIyd+tT1ucnAegfu0Df2PnHWnKfhHATHNKUSCmplYsIRSGaSD2VwQ9hQExIE+LYFtfe+RGR
      aBzPcxFCcOGN76OqjQ9Vz/PYWl+lXCySSKbo7O17fFRYOAOENBOfv/82fafO0dLVB/jeoZVi
      gZNXXm3oeikl81MTpDJZMi0tlItFdrc2GRk/88hM8kRqUM+xWF5aolCqkN/ZZHllDddz2Vhf
      x/UkpmlimzVs1zvoLUKOIUZ+h1zHQytwW98Qha3Vhq93bBvXdWnv6iYSidLa3oGqapi1Wt3z
      DywAxY0Fdmug6xpzc/PokQgb8zPUXJf7U3MsLy0wMTEJhAXyQhonnkpTzm/vf85vrJLKtTd8
      ved5KL+10lBUFc+r705x4D1APNdFytxgenaenu5uFmdn0OMpzg33Mj0xydbaAon2ETSFMDHW
      cWN9E4ol6OyAbDrQpadefp0bP/9LErk2pOdiVQ0uvvnHOI7T0PWqpmGZNUqFAvFkErNWxSgX
      6RkYrNvGgfcAxZ11FpbXiSSzCKtCvlxlqL+TxdUtWjv7UNwK2DVyvSOhL9BxQUq4cQcyKchl
      YWnVF4AT9cMRH9uM51Hc2URRFFIt7YG1QI7jsDg7jWXW0PUIA8Mn0SORR84L1aAhh8tuAdY2
      4Mwp/7OU8Jsb8OIFaMLfPvQFCjlcajVIJh5+FgJ0DZzmDYoKBSDk8Ghr8WeAB5q/ag0cByL6
      777uKyRcAoUcLju7MDkHigChwIVxiEa/6l7VJdwDhDwdpPT/hPD/mpTQFSLk6dDkA/+LhHuA
      kGNNOAOENB2lnU0/K4SiMnThRRLp3FO7VzgDhDQV+Y1V7n30LoNnr9B36hw33/0JRmHnqd3v
      wJvgWnGdW1PrDJ4YxNhewXBUPyvE7CJdAyMI20DaFrnufuJhhZiQBvnNT/6cK9/9B2i6b7k1
      CrtMX/s1F9/4/qHf64k2wTWjiqIIXKeKraRpTzlMza9z7tIlZicmyW+vkGgdpDsskhcSAH+c
      sO+3IxQF2zIb9gUKyoEFIJpp52J7H3fufI6mJal6HjHNT5hle4K2zm4Mw8CTD4vjhTNAyJfR
      d+os09c+JJHOIhSV/PoyA6cvPja785Ny4FZVVTA9NcXI2Dmc8jYlW+VEZ46Z6VlGRkdxzAoR
      RVK1HFKx5rUEhjQXbb0nuP/Je/v5/VVVY+zl157a/UJDWEhT8dnb/4GzX/8usWQKgPzmKisT
      tzn79e8c+r1CQ1hI02FbJtH4Q4e6RCpLrVIO1IZZq7E4O43rOCiqSv/QCPFEou65oRo0pKlo
      6e5nbXbCzwskJUuTnwcqkSSlZG7yPgMjJxm/cImh0THmpyaQXv3Q3HAJFNJUSCm5/f7bVEsF
      pJRkO3oYe/mbDQfF1KpVVhf9EN38zjaZbAsSSXtXN8nU341OC5dAIU2HEIJz3/gDPNcBBIqq
      BooI0zSN5YU5egeHGBg+SX5nm4XpKbr7BuqeHy6BQpoOIQSqpqNqWuBwSNd1UBSVaDRKJBol
      Go2hahqOY9c9PxSAkOcKx3H85U46w/L8HHo0SndfP44dCkDIMSCRTGGUiizNzSCEYHVxgd2t
      TdLZ+g51T7QH2F6dw4l3Ud1eoOqqjAz0MDU9Q//wGJ5VQfEcIplW4nq4+Q1pnM3FGRbuXEcI
      wfClV/azxDWGJBKNYVsW2xvr6HqEaDzuB+jU4cAC4JgVttZXcdoyGOvrdPSPsrq4xPD4Gean
      Z5BOBVfEON/avq/S8h6jigp5vhBGBWFUkLksMmA88ObiDKvT9zj/2ltIKfn8vZ9y8srvke3o
      buj6WrVKKp2mf/gkjm2j6TqriwsY5TLJ9KM5ig4sAMvzM1Qth531Td78vW8ye/8ORQt6VBVF
      SGpWDSJxgH0BCJ3hjgH3pxGOC5k08sYd5GAvdDae2W3u1qec++YfMnfrU4SqcuqlbzBz/WMu
      vvlHDV2vRyIUCwUmPr+JrkewbQvHtuno6ak7/g4sACfGznPCLLJmKExP3KMmdcZPdnP/1g36
      hseRdhs6LqWaQyauI6UM7QDPO8UyeB5cOA1CoJzog0+uQVcHNFgiV0qPm+/+mLGXX8NzHW6+
      +2NSLe0Njx1FUfBcBz2RINfaRjG/S7VioOuRuhmiHysAM/duMLVuMNzTzqmxsfonRTN0R4HW
      M/uHLl66vPcu3lCHQ54jymXQdfjslp8OJZkETQPbgeijmdnqIYQgkc6R6+hBSo9ILPFIrs/f
      hVmtkmtrp7uvn3KxSM/ACSLRGBWjTCr9aLXJx4plvlBgbf4ed2eWGr55yDEnk4Y7E/4Tv70V
      EnFYWQuYF0jQPTLOtZ//iBvv/pgT51/ADRALoEci1CoVNtfW2NnaZHNtlYpRJhqN1T3/sTPA
      yOgZ+kbOEGZ3DmkYowI1Ez78FJAgeTgDNCgEHQPDWFWDl976xwBMfvo+3cOPWYHUQVFVLMvE
      2d2hu6+fzbVVqpUKml7//o+dAe7cvkk0FuPWzVsN3zzkmON6MNAL/+j78Cd/4L9GI49VQdZj
      +OIrVMsl3v/hv+X9v/gztEiUnpNnvvzCPWzLIpnKMDw2juM4DAyfpLWjg1q1Uvf8ugJQKeUZ
      GOjnRz/8IZ2Dow3fPOSYY1p+gtydvL9wWFjx84W6jecGdW2L7eU5jPw2xu4W28vze35BARC+
      Qayrt6+u6vOL1F0CmdUy9ydmGRkbR5FPJxYz5DmkvQXiMfjgN/6SR9P8NOmxxlMj3v7gHYzC
      Lme/8V081+XOB3/DzPWPOfXSNxq6Xo9E8FyXYn6XVCZDxTAwazVi8frxAHUFoKWzn2zkGp/P
      LXE2+fRysoQ8Z8Rj/tNeU/0s0YWSbwMI4NC2uTDNN/7xvyKe8jU22fYubn/wTsMCIIRgZOw0
      y/OzzE9Nks7lOFmnPtgD6gqA65ho6S6+94enyKWTDXc+5JizvQvxOFRq/oZYUcA0A22ChaJg
      VSv7AmBWK4+t8Pg4yqUihmGQaWmhVqlQzO+Sa6tfaKOuAEzeuoqIt3D37n3e/GZj1flCQhAC
      DAPeegNs29/8/uKDQIrEvlPn+eDf/xn94xeRnsf8nWtcatAKDH6NsJXFBcbOXUBRFKSUTNy+
      Saalta4xra4AKIrk5mefUS7lcYXGd77x0iPnSOlx/9NfYnddRG7NUvMUBrtaWd7Kk2npRPUq
      2NUqA2NnSYTOcMeDShVKBvzwx/5TP5X0l0S24xvIGuDklVe59d5fc/v9t2HPKNY3dqHhLpi1
      GolEYn/WEEKQSmepGmVSmewj59cVgLFLX2fkzIts58tkHrMEWpu7x1q+hicX6W/toiPisLZb
      4dLlS8xMTrK1tUKidYB4mBjr2CAUBaVaxTszhkBCtYZYXMH1M1011MbNv/0JL33vn9I5NIoQ
      gvnPr3L/k18y/rU3Grpe1TSq1SpGuYRZqxGNxSmXirR3dddNrvVYQ9jVTz4kbwty8Rhfe/X3
      Hvn3nuGz9HR1MVvScbbnWa+qjPS3cev6DTp6B0mmEiiOte8LBGFirGZHSsn6/SV25jdRdZXB
      F0eJZwPsAU0L2lpRN7chlfBng0QCTUpfI9QAu+vLRBNJbr83BRJiqTSFrbVAibFSmQyf/fp9
      pOehKCr9wyNEotHG9wAAA319TH/4CZmzjy5/9km0MZwAuh5OUVdau/betTbc4ZDmYPnmHAgY
      //YlHNPm/i9ucua7l9FjjfnxkEw81ABZtq8BWl5tePkDkMq1UdreJJpMoSgqu2tL5ALEA7iu
      y+bqCq++8R3UvT3A55/9BvfEcF1rcF0BWJm5zbu/vg4oGIbR8M1Dnm12l7Y4+ftnWLg6RTQV
      p//yMGt3Fxm4crKxBlpzsLUDZQOyGZicgZZcIF8gs1Jm+tqv95fLiqIGSopV3XN6078w2LMt
      rZSKBVraHnXLrqtf6h05x+uvvkAkoqMqoS/QcaFaMJi/OkXHyR70eITpD+4EayBfgJNDflXI
      nTzEYpDL+BqhBrFqVXJdffSeOkfvqXOkWjtwLLPh62PxBIZR3g++klJSKhZIplJ1z3/sEmh5
      c5f29laEHc4AxwXpeqTa0sSzCbS9fK6qHiBkRNNgag5ODvoaoPUtv1j2K5e/9NIHVIq7VIp5
      4qk0Ukqq5QJGMd94F3Sd9s4ubnzy6714gDzZ1lb0SH1rdN1v51g1zp67xNLUTZz0YMM3D3m2
      SbSmiSSi3H/3JqquMfTyGMZ2qfEGyhXf7WGwDxIJUFR/JrDshjfBejROrrOX8VffRCC49s7/
      i/4YV+bH0Ts4RLa1jVJ+l/aublKZbDBL8MSdG3SeGOXe4g6pZI0Lo0GCkkOeVeK5JNFUjLN/
      8AKe63H/FzcYerlxV2QEkE7BLz8CVQFN/7uFsxtAURTW5yb56Ef/N0iJWTVo6xsK1Iav+8/U
      DYD5beoKQHdXBz/767d57Q//hM3F6UA3D3l2Gf7aOLMf3Wfx+ixCQM/ZQeK5AGrQdApW12H8
      JPR0wt0pKJUbjgYDiMQTpFraiSaSfoKsYp5ILJgQBaGuALT2jPCDfzECQF/bpad285DmQtVU
      Rr9x9uANlA2/KPbsAswvPawVbNkQb8wGpOoRVF3fX7NrkehTtR8dODGW9FwqlQquJ7HMGpVK
      1d+0VKt4UuK6Lp7r4oXW3+ODqu55g2qQjD8MhA+gSUyks6Syvg1JKArJbAux1JcvZQ7KgbNC
      VI0Sa5vblGsuXi1PS0cfcUw2yxZaNImOiVWpMnT6HDEtVKU+K0gpqRUraFG9cQPYAzzPV3km
      Yn50mBC+H1CAh6BQVCyzil2rIoSCFomgqE8vh/OBW44nUtRKE0TSvcQiHmsrKyTTac6cPc30
      xCSbG/MkO0aJqiL0BXpGMMtVpt+/SyyTwKlZxDIJBl9qPCJQWBYiFkXUTIQQeKqCEOAG0ALl
      N1aJROOcOPcCCIX5zz+lsLUWuEieWatSLhZJptLEHlMcA55AAEr5bTwtiV0pomoCiaQ1FeX6
      tetkWjvp6B1GWuXQF+gZYvI3U/SeO8H23DrJtgxOzaK8XiDX19ZYA5rmB8XHYoBEsV3wpO+C
      0KAAeK7DyJVXcSwTRVUZufgKO6uLgXyBNlZXKBXyZFta2VxbIRZP0N0/EMwX6MvItHVxvq1r
      //Opvdfe0GzwzLKzsIldsxl44SRmqcLyzVkUVWlcAGzHX/cn4776czcPRjVQTLCq6Vz96V8A
      vjrTc10GzzZuSHNdl/z2FqfOXUAIQVtnF9P37uA4Nrr+6JIuLJARso/nuCRakixdn0FRBMnW
      dKANLEg/LFLTfI3QA6e4AOhRX/sTTSSRnodZNQKpQS3T9JPhwn6NsHgigVmthQIQ8rsxDZOd
      +Q06x/qpFQw2Z9ZItNT3oalLOgWWBZs13yJcMnzv0Ejjm+ny7hZmpYxQFARgGmVKu1sNXx+L
      xykXi0zevoWiqLiei22Z9PTXX5qE9QFC9okkIkSSMZauT7O7vEUsnUCPB9AEPfDAjMf8vUBE
      941gauPDTNV0cp29eHvLpkx7F2rgItl+JnJFU5Ge5ytfgrhChBxPFE1le3YdPR7B3DVASrRI
      gCGyteO/Vmv+4K9U/eVQpQYNJlcwKwabizM8DCSWpFoazy5t1qqk0lkGT45iWxaarrOyMP/Y
      3KChAITsY2yXUHUV13LQIhrlrSLVQv2ManWJ6L7+vzXn2wTicSiVAs0AUkpUPUJLVy+u41Dc
      Xg9kR9D1CJZZo2oYFAt5UukMZq1KJBrAGzTk+DJw5SRCCPR4hKWbs8EuNi1/4D+YCR4QQAsk
      PY9EOksklkACZtXAk40XVlE1Dc/zuH3tU7p6+7k3N0M8kai7AYZwDxDyW5hGjVgmjqpruKaD
      5wao6lPPziNEoMRYqq4TTaRIt3WQaeskEkugao1HlLmOg6IonL3yIpFolPELl4jFE48tkhfO
      ACH7ROIRVm7N49QsasUq5e0i0WQAX/wvPqmF2Fu6BLP+D569wqc//SE7q4sAeJ7Lxde/1/D1
      tm0RicZIptL7hbELOzuYZg29jjbqwAJQKWwzs7hCrqMXWdmhbKuM9Ldzf3KG3qExsA2Ea5No
      7QqL5D0j6PEIVsVk7a5fE0LV1GBaIE/6e1eh+K9S+EuiAGv4c9/4LtvL88zf/gyAM6++ycjl
      xpOzRWNxqhUD13H85ZDrUi4W6B08Uff8g/sCpXNkU3kqpR2kjJCJOExMLzJ+4RJzkxNUy7to
      iTbOdSp4nhcWyHsGMHbLZHpayC9vE8+l8ByX0mYBt8E1vAAUiT8TqAp4HlIIPE82vA8Qisrr
      P/jXVEsFhKIQS/pP8Ub7ANA/PMLE7Vtouo5j2/SdGELueSj/NgcWAM/zyGRz7C4uoUdUXNVD
      EX6hYk8KorEYlm0j8U3aD/5CmhdV1zBLVQYun8QsV9maXUOLNF6tXWhfmOkf7B2EQFEVZIDf
      3nNdauUiQlWJJVKIgLlBE8kU4xcu4bnul5ZXOrg7dLnI0soaXb0nkLUCZVtn7FQfkxP36RsZ
      Q1oGuvAwTId0TEcIETjJacjR4jkupuX4PkCaiud4eI7X+O9WZ6kj9o41OoitWoWrP/sPtPWd
      QLou0599yAvf/YdoAazJD2ik3wcWgFSujXO5B05SD1Oonz1/3n+TCN7hkCdDShe3Mot0imjJ
      cYQWLLO3azkk29IU1/PEojqKpgRzYa+nMZIy0B7gzoc/59zXv4NR3EVRVFp6Bpi69iGnG0yN
      GJRQC/ScIKWHMfe/4hRvINQUSJvU6H+FGh9ouA0tqrO76PvdGFtF/1gQS/AhUCnm+fz9t+kd
      PYvnuqxO3yWaeHop+kMBeE6wC1dxCp+i576GUGI4xn2qS/8HqVP/dcNtWEYN8AXBc108x8Oq
      NJ6Uap8Huv8DKD6k5zF88RV6R8/sfy5srQXvQ4OEAvCc4BqTRNq/Q7zvP0IIBacyjTH9PwZq
      44GmznNdpCf33h9Aexdw2fNFVF1n5sbHzN78xE9uq2pEkwE8UgMS7kqfF4SCUJOIPScyoSZB
      BH2++dd6rvdw7X/EirtUto2Vyds4toVjmSzcuUauo/up3S+cAQ4Rx3OxHJe4rh+5yleND1Ke
      /h+wtv8WpIPnlNGSDSa13WdPYyPE/gwQ0JD7xOQ3V+gfv7AXECPp1TTyG6tP7X6hABwCUkru
      b20wtb1FXNOpODZvDo+SeowH4tNAjQ+B5+DZuyh6FmnvosbrWz8fh5TsPfHFnieDPHIBqJVL
      fOtf/htcxwKhYJs1rv7sL57a/cIl0CGQr1VZKhT4o/GzfHt0jG+fPMV7c9NHmgXDzn9MtPOP
      UOODICXxvj/FKX0erJG9Ab8fRALII5aATHsnU599gBaJoWk6E7/5FbnO3qd2vwPPAI5VY3Z2
      jvaeQSq7qxRNyejQALOzcwwMj+KYFVTposQzxPTnW86WCgVGv1CFMKFHUITA8Tz0I8qE4TlF
      PHub5PB/hlAi2PmP8aztQG3oscgjWp/AuYGekAuvfY+/+bP/hfufvIfnuURiCb71L//NU7vf
      gQXAdV0Gh4e4PzGDkd/gxKkLrC7M0TUwyMz0NDFdUqk6nDv/aGGy543WRILlQoGhFj+jmScl
      tuuhHqHlW9FyWNVfUZ74b/AcAzXajVCD5dR0zEddhusd+1IeeILue4Q2Tjyd5Xv/6X/O2uwE
      iqLQNTxet7LLYXFgAVCE5O69KcbOnEFXxpm+d5uqp9ETj6ErsL2xQrxlEAHPfWKsrkSSya0N
      3puZoiUeZ253h4s9fb4u/Yj64KHi1Zb3Pzv2NmriVKCEUvV+Hs/zGm5DeB7qFxvae3Vct+Ei
      eUjJ1PWP2F31PVKrFYOh8y82du0BOLAA7Kyv4QrY3t6mWtim6mmMDHRx+8YNugdGyOYyKJ59
      bBJjvT48yqZRpmjW+PboOIkD+K48CbZbAiWCEukEzwIk0skHSihVD0WIxtt4zO+rqVrDibFm
      b/2GeDLN6b//pwBMfPIem/NT9Jw83VgfAnLg/52uE6Psp8Xq7tw/fvnyA/+gp5fQtBkRQtCZ
      StO5F4RxEAyzzO21W0S1KOe6L6CpjU/9nlMEFKRTQqhJpJNHysZdiH0enQIOZ85uvJWN+Wle
      +f4/3d9PDV18mTvvv/3UBOD53p0+Q6yX1vh31/5PNsvrLOzO8X9d/TNqdrXh63AG21MAAA4v
      SURBVIVQQdrEe/8ZiRP/GiXSgQhsCHtCDmGJq2oa9hdqgllVI3CFmCCEdoAm4Sd3/pL5nTls
      18Z0aqyX1vho7gPeONVghUShgnSpLPzvDw9pX9EsrOuQTcP2bmChGH/lda7+7N8z/spreK7L
      5Kfvc/nbf/KUOhoKQNOwXFjk94e/yVpxhUwsS0eqi5XiUsPXK3oLAEJNIT3LD0TZO3bk2Paj
      mSEaJN3awZXv/D3mb19DUVVefOsfEYnFD7mDDwkFoEmoWAbzOzP8kyt/iuVY/G/v/88MtY40
      fL3nFACQbtk/IMGzG6+ueCjUqyipKA8LZTRILJlm/JXXDqlTv5tQAJqEiBoBIfjRrb8AJOlY
      NtAmGOngb+kehCL6S6KjpY7/U5NHwYYC0CToaoTrS1f3kkBJhFDozzYezCI9G75odZAuUh7A
      iPVESD8XaDQCVRMyKcgXj7gPwQgFoEnoy/bTnemhVCuSjmbYNDbozzUuAD5i7++g2pgnuRa/
      PgDs+RR5fqY4VT1QYMxREQpAk1C2ytxcuYaUHq7nkYll2CxvBGwleCKqR69/AhJxf9D39fgZ
      oje3wTTr7w2ahAP3zChsM7u4ihpNIqt5qq7KcG8bcyubtHT2orpVXLNK19ApEmFirC+lYhlk
      YzlycV9zs1pcDhRTIJphsf0g787M/MNjmuYnzGpSDiwAyUwrrZkCjqJQUzroizjMrRW4dOWy
      XyRvc4FE+0nimvLc+wIdBpvlDVaLy6wWVxCAJz02SusN++HUTTwmZeDico80EcQXyHVRkgmk
      oiAqFWQ6hbBsPyHVE/bjaXFgAdhanmHX0hjqbWdmcoZtBdqSURaXlnGFRnv3ILVKEdPxiO3N
      AM+zL9CToqs6nvSIalE8z8OVLhEt0rAfjqhXyiiIH89j21UabyMahUoVEdGhJYvYLYKqBCqS
      dxhIz2NrY51ysUAilaKju/exOYIOnheotRMrX8JyJKdODVFzFbKpONtb2wz09uI6NpoCdvjQ
      b4iaXUMg6Ex1U7UrbBtbgVwh6nPE//neXm3gVBJ2i5DLQLF8KC4SQZifmSKZStN3YphSscDs
      xD1Gxs8cbpXIWCJNb+Kh49cDb432jg4A1D1vyKMLCvxqkVKyUipSqFYZyOVIB/Rf8aSLEIJt
      Ywt3770bIC9+U+A4vgBUa/7Gt2z4iqUj1ALZloXrOLR3dSOEoLW9g1J+F7NWIxZ/1KIcOsMd
      AlJK3p2ZYqVYIKppfDA/y9xuMFeAqBbDkx4V28B0anjSI6Y9PSewp4Kq+k/7VBJSCb9KpJSB
      LcFPgud5qKq6/7QXQqCq2n7Nsd8mFIBDYLlYIB2N0pZIUqjVeKV/kFtrq3gBpn7TqT1yrFbn
      WFNj2/7TfmfXN4Tli+C4gSrEPCmRaBTLsqgaBuDXDKsYZeLJ+tnlmldB+wyRr1a5t7nBxe5e
      ulIprq4ssVkp43rel2YnfkDd4PNnTWuman5a9HjMtwaDXy3yCGcAIQQjY6dZnJ3Gskw0TWd4
      /PRjVcqhABwCiYiOAFZLBRbyu7TE49RsG+UJcwM9Y8Pff/p70i+OrWp+zeAnyBJ3UFRN48To
      KapGhVgi8TuzRIcCcAhUbJuKbVFzoiT0COvlEo7n4UlJo4rf+mPkGRMBda8yzIl+f/2/vgkb
      W4FqhB0G+Z1t1leWSaXSGEaZto5O2jq7DlcLFPIQVSi0J5K8NXYay3VxPY//58ZngWyz9c9t
      AutuEBTF1/cXirDru2ejqkcqAJ7nsbGyzPj5Cwjhp3efvHOLXFt7XXtGKACHgKYobFYM/qdf
      /S2m6xDTdD9FSoAfvv6z/hmbAXQNMmm/Rphd86PCHOdI9wBmrUY8kUAI/55CCJKpDLWKQSrz
      aIqeA/fMMSt8evUzXA/u37nJ3YkpjMI2169fZ227xPr6GmtLC1Tto/ZJP3py8TiLhTwt8QTD
      LW0oQmBYFuozVxLq0f4G+gZtrf76v1L19wPbeWjJ+QW0j4hoLEa1UkHu2R6klBilIvHH1Bg4
      8AwgFJ1UIopEUqvWUBMxVte2OXfpErMTk+S3V0i0DtLV94z4Anke7uYWSjqFSARLKDW9tYmm
      KKyU/GlfV1SWi3kqpkm0YReAOhkZAvjyyLq+QATzBaoz2r0AfRCmCd0dSECxHbxkHMVx8R4Y
      yI6Itq5u7t26QSqTwSiXaGnz+1TvexxYAFRd92c26XHy9AU2Fmep2B6Vag3bg7bObgzDwOOh
      D1Cz+gLZa2uU/vqn6H19uLu7aO1tpL71rYZ/NKEo2K5L295TxvFcSqaJqqkBfHHqPH0D+PLU
      rcElCOQLVC8aQAniC1Qs+xvgAT+XpwJw/TaK5/l+QkdEe2cXre0d1CoVegeHfue4eyJ36GrN
      YXl1E11WIZHlTE870zOzDJ8cxTUr6IqkajqkYkc3BQZFSkn5nZ+T+8E/R4nF/M9v/w3W4hKR
      wcYCUjzp4Xge6+XS/jFNUZ65JXx9RVSAL5FN+67Q/T0PK8SYpp8l4ohRFIVE6ssLaxzcHTrb
      xqVLbY8cHxvfS2AUeUYSY7kuQlFQYr7bgRCCyKlR7IWFhgXA3qui8uAJKgDX8/CeMQmoGw8W
      ZOmSTPhBMdc+h3TKT4syOnSkm+CghFogVUV6HsUf/SVuoeD/WFKSevONhpt4YMV9MPifrWH/
      EKEqj1R6VNQAg1cIODnkO8MVSjA0AFpzLnsf0LyieYSISARzchIRj+NVKlhz8yiZIDPYw6fk
      szr4AaTrPfwqe6+BaoRJCetbcOsurG3AZzd9YWhiQgFwXcx794iMjhJ/8QUSL7+M0DXM23cC
      NNKswz6Y5iXZnvEDYKI6qqaBEKTaAzwITAsWV+CVK3DlPLxwwReGJtb+hUsg/Bkg8yd/jNjT
      Fjibm0deGaUZEICiCDzPQ7oeWlQLNgPs5KG7/eG+Qdd9pzjLfugc12SEAgBI06T4479CzWYR
      uk71s2skXz+azGRPl2BCHE3Heemfv87G1ArxbAK7aj0sltcIyQQsrXzh9hJM+0jDIYPSvD07
      KlSVyNCQbwfo78Pd2QXHIXZ6/Kvu2ZGj6hrzn07QMdqLWaqyMblC13h/4w1k9tSOdyZ9leja
      hm8TCLKRPmJCAZASe2WF1OuvIW0bBgZw1jew19ZQWxpMLvu4h+RXvooKtgfoOTfoP/GlJNGS
      IpqM0X0mgAAIAWfHfGe4kgFnTvmxAU3MEwiAxCgbJJIpakaRqqvQkkmwsb5Be2cXjm2hIEGL
      oDfxEwDHQcTipN96C3NiArW1Fa9YxF5aJnbmTGNtPG6cBRh/zeA1NHB5hNXbC2zOrKFqKqPf
      PEckHtCCKwTksv7fM8CBBcA0inx67RZf//1XmZpZQFUkxWgENZnh/tQcMdWhWqkxdvb8Yfb3
      8NE0vFKJ1f/iv/RnAM9FzeZo+U/+46PtR10JeNLEWMHESghB7/kT9J4PVl/4WebAAhBNZunp
      bAHPIprMkdEdVncrXDzVw/TEJFtrCyTaR9CUJi+SJyWeaeKVSohYDOm4OJubeIryZEmpANdx
      cUSDzmx1/m+kbDwplV+e7otKfIkQ2hMnxnreeSJfoOXlVfRkG25li2VXYbi3jRvXrtPa1Ud3
      PAJWremL5HmmibOyjJrJoLa04FWruIUC7tw82rlzDbWhKo9+LwGBnOHqRSsJ0bgjmqrFebjp
      8F+FEg2cGEtKiV2zUTUV9RiktHwiX6A3v7VXvqe/e/94a2ffE3fqSBECPOlbgQ0DVBWhKIHy
      ctab1456rpOuwW/PAJ5rBGrDrllM/PJzVF3FtRxyfW30nj8R6P/iWePYa4EEgKLgrK0hIhGk
      4/hpPALNVocw3J84JnhP0SAU/710/MJ5AZj+4C7DXxsnkUsipWT6gzuUNwukO3OB2nmWaGL1
      zNEgJb5HqK6DAKFpoCjIILls9sapqijENO3h1jPA+H3cEqjxBlRAosb6URPDoET3hKFxHNMi
      kUvu96f79ABbs+uB2njWOPYzAEgQAhGLoXV1ISsGznqwvPwPBq/r+bn9YW9mCaIGrScAgZWj
      Kp61BULbK48U0P1ACFzbQd3L51/ayJNqe0bc2g/IsRcAIYT/1AeUWBTPtpGuixKg0nu8TsBH
      RNVQAzyBs7EcG6X1v+ODlI03vvRQot0IPYMQGtKzUKIdCDVY0e4TL45y92+u0X6yB7NUpZI3
      OP3tS4HaeNb4ygWgZjn85KNJdktVkvEIf/zqGKlEsCeXrBWx7/0YaZbQx95C5AYb37gpCkoy
      gVssYU5N+2siVUUkG48L1vaWPi3xBDvVCp3JFDuVSqDnt/5bBfEE4pFjv4tIy9eprf45CB1F
      z+GZ68R7fxCgB5DuzDH+rUvkl7bI9bUx+MLoc70Bhq9YAKSU/PkvbvOdl0bobU+zU6zy737x
      Of/q+5dRG4wiktU8tV/8d+gX/wkiksL69N+in/17qH0vNNwPEY2hJBy0jk68WhV3dzfQ+t3x
      PEbbOiiZNUZb23E8FxKJQFvYklkil2ghokbQFJ2dyjalWuMF5hQ9Q/r0f4+58VdIp4ze+wP0
      3KsBeuCjxyJ0jPYGvu5Z5SsVgIJhkojp9Lb7U3VrJk5fR4a17TJ9HY2tPe07PyJy+V/sD3jl
      jRFq7/y3xBsVAFVFSaeIXb5M9epVtK4u1FwLamvjRaZTkSgTWxtoioLluuxUDFLRaKC0KLqi
      c677IoMtJ9CVCB/OvRdoBgBQo10kBo7Ygv2M85UKgKYq+/G0D7BsFz1AGJ2s7sIX1spCj4MT
      oLCE6yJrJs7GOpHhIaTt4BULuFvbDTehKQoRVeNidw+m69KdSrNUyAer8SUEU1sTGFYZy7HY
      MbY52Xaq8e8RciD+f1QrYZWTobZSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='RoofStyle' width='188'>
      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
      AZDxAaUEE0TrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SaleCondition' width='192'>
      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
      HbiTdzb0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SaleType' width='192'>
      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
      0nCSw8dbCLvLmJPnBDzMW7mAwIl97DvVSOu5Rk4cOsQFYz6LZl/7IQ3OuV/kS8tCHNp5gt5A
      XEKQ5JI8AKBpUUIRB4uWluG6xnp7yd18dUMBXfu2sXXfGaK51ay9fT7pl7rstvwVfPmhSsKn
      9/LutgN0OuZz/wPLyb7UOVS9OeRkpOC49HqL6qC4Zj1Lvd209oYlAElOnhGWAPKMsOSgKIqS
      9C2AEJ+GBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJia
      BECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRA
      mJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJia
      BECYmgRAmJoEQJiaBECYmgRAmJp6s3dAiEmGYXzoOkVRElKmBEDMCIZhoBsGnf1j7DrRzsV+
      PznpHtYsLmZ2fjpWS2JCIAEQM8aF3lF+tPEg7b2jl5cdaezi2UeXsWhONtYEBEDGAGJGiGs6
      u060T6n8AF2DY+w71cF4KJqQciUAYkbQdYOOPv8113UNjhGNaQkpVwIgZgRFUcjwua65Li3F
      iWpNTFWVAIgZQbVaWF1VyKw095Tl6V4nNZX5eJz2hJSrGB819yQ+EcMwCIVCuN3uj3+xACY+
      s0hM43BDJwfrLzIwGiQtZaLyr1pQSIrL/pnPAimKokgAEkAC8MkYhkFc0xnyhwhF4zhsKhle
      J3abNSFToBKABJEAJAdFURQ5D5CkPuy4lagzprcqCUASMgyDaEzjxLkeDtV3EgjHqJqdxT1L
      Z+N22iQEN0C6QAmQ6C5QJBZny4Gz/HZ3I/5gBABFgVVVRXz78ZqEzZjcahRFUWQaNAm194xy
      pKHrcuUHMAw41dJLbVP3Tdyz5CMBSEIj42FGA+Fpy+OaTmf/tc+mimuTACQht8OGy2Gbttxq
      UUjzXvtsqrg2CUASKsr2UTU7C5fjyhyGApTmpnHb3Jybt2NJSGaBkpDP4+D+mjI8Tjun2/qI
      ROOU5KaxbmkpuRkpN3v3kkrSzwIZepzx3mYO7t5Pc28I3NksWnU7y+YV4rEB6Aw2bGfLjkZG
      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
    </thumbnail>
    <thumbnail height='192' name='SubClass' width='192'>
      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
      5Ml7k/5/cEtpW9P/ze4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='170' name='UnderDaHouse' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VnrType' width='192'>
      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
      zjJsr+HzX9xGTZYJUXCRn2ek/UI9LYMqNfcspciVTdW8SiyjZ9j+wTlEq4HO1jayV2xl25bV
      ZFtF5JCXAx+8SyBvLRuWlWOWrr303rM7eX3HEZoGoXxOMbH+JpqaRsmeV0G29dp7+u53v/td
      VJ27juBgk/qz7/2V+qM3TqiB2OWDg4fVv3t6q/r88Zv5REUNDZxXf/a9/67+284mVVV9atOZ
      U2r9xX41JkdVb+MO9W++8k31pVN9yfsSqqoOnPqF+o2v/Tf1QNsk5xreV7/3199Td1zwqrJy
      c58P+hDo7uPi+/z1P71D4fJH+NL987BcmbCLJtyZWThM0949BQJmTwVPPbuZHzz/NieW/BFZ
      Sg/v/OIFTrYNgi2DZU98la3Vk88hbhbJ6CA9w4NpYi1VBtj9xm7KHvtj1pa5+TTrcsIVJdyN
      KIqCIAgIU1gqdFKbu35TfCwWQ1Fm2XFLR9Pc1QLQ0bkeugB0UhpdADopjS4AnZRGF4BOSqML
      QCel0QWgk9LoAtBJaXQB6KQ0ugB0UhpdADopjS4AnZRGE+7QSixMe/1RGnuu7MSS8BSUU1NR
      iHX8RnBVJeIfoLmhga6hMLbMIqqrSnGbdR3r3ByaqDlyOEjT2aP4BCdOpxOn04HVYkzYaipH
      /Zzc9z513WGsdgsD9QfYdeAcIzcfFEAnxdFEDxCTh4iqpSxds4LCqfb/AaGBOi4OFLLxD9aQ
      ZZYIFqezfd9p2vqKqc133lDkHB2d8WhCAHKoh85uH9bTR+gRDbizCinMy8BiiK/SStiPnF5A
      usWAANgys8g3mxkcGkXJd3L9MEg6OvFoQgBGcw6V80YJDg0RUmI0X6invWYNqxYWYRk3SJMc
      2UjdJ2noLaAqy0Y0MILP60eVx0LbyrKMLF8Nc4ssyyiKQjSqj5F0JkdzWyJVJUZvw1H21PVx
      z4bNFI+LCqXIQS6d2MPuA3X0BWK48vKw+kQK1t3LxgVFiKoatwMsFoshiiKiqImpjo7GMBgM
      giZ6AEWWESQJARBECXd6JlZTL1E5fjujKFkpW7aZsmWbARUl0Mue3cdIuxyESRAEJOnaQEiW
      ZURRjDumozMeTTSN3ubjHKvvwB+RUeQwrU0NBBQ7Dmu8PhU5xkD32HWqHKb53BmGRRf5WS59
      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
    </thumbnail>
    <thumbnail height='192' name='YearBuilt' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
