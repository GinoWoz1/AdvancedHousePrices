<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SavingAnalyticObjects />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data (2)' inline='true' name='federated.1e28wd1067nyw519jd0ag0b6qhc1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0p0jbix0mchrew161fq3708ib2la'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0p0jbix0mchrew161fq3708ib2la' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.424023' measure-ordering='alphabetic' measure-percentage='0.575977' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data_45' inline='true' name='federated.16u29xf1clbpci18rk0yf131z7ft' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_45' name='textscan.18r6tei0pgmseb1dcukeu11o8qem'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data_56.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.18r6tei0pgmseb1dcukeu11o8qem' name='data_56.csv' table='[data_56#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/jjonus/Documents/My Tableau Repository/Datasources/data_45.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/12/2018 12:45:07 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='80' timestamp-start='2018-08-12 00:45:07.340' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>0</ordinal>
              <family>data_56.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>x</remote-name>
              <remote-type>5</remote-type>
              <local-name>[x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>x</remote-alias>
              <ordinal>1</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>y</remote-alias>
              <ordinal>2</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coord</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coord]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coord</remote-alias>
              <ordinal>3</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cos2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cos2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cos2</remote-alias>
              <ordinal>4</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>contrib</remote-name>
              <remote-type>5</remote-type>
              <local-name>[contrib]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>contrib</remote-alias>
              <ordinal>5</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.425562' measure-ordering='alphabetic' measure-percentage='0.574438' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='train' inline='true' name='federated.0je71i81w9fhsx19mepx11n8r32i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.1bo3rqi0xsc0ee1gb4xo211bmb2z'>
            <connection class='textscan' directory='C:/Users/jjonus/Google Drive/Kaggle/GitAdvancedHousePrices' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1bo3rqi0xsc0ee1gb4xo211bmb2z' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Id' ordinal='0' />
            <column datatype='string' name='MSSubClass' ordinal='1' />
            <column datatype='string' name='MSZoning' ordinal='2' />
            <column datatype='string' name='LotFrontage' ordinal='3' />
            <column datatype='integer' name='LotArea' ordinal='4' />
            <column datatype='string' name='Street' ordinal='5' />
            <column datatype='string' name='Alley' ordinal='6' />
            <column datatype='string' name='LotShape' ordinal='7' />
            <column datatype='string' name='LandContour' ordinal='8' />
            <column datatype='string' name='Utilities' ordinal='9' />
            <column datatype='string' name='LotConfig' ordinal='10' />
            <column datatype='string' name='LandSlope' ordinal='11' />
            <column datatype='string' name='Neighborhood' ordinal='12' />
            <column datatype='string' name='Condition1' ordinal='13' />
            <column datatype='string' name='Condition2' ordinal='14' />
            <column datatype='string' name='BldgType' ordinal='15' />
            <column datatype='string' name='HouseStyle' ordinal='16' />
            <column datatype='string' name='OverallQual' ordinal='17' />
            <column datatype='integer' name='OverallCond' ordinal='18' />
            <column datatype='integer' name='YearBuilt' ordinal='19' />
            <column datatype='integer' name='YearRemodAdd' ordinal='20' />
            <column datatype='string' name='RoofStyle' ordinal='21' />
            <column datatype='string' name='RoofMatl' ordinal='22' />
            <column datatype='string' name='Exterior1st' ordinal='23' />
            <column datatype='string' name='Exterior2nd' ordinal='24' />
            <column datatype='string' name='MasVnrType' ordinal='25' />
            <column datatype='integer' name='MasVnrArea' ordinal='26' />
            <column datatype='string' name='ExterQual' ordinal='27' />
            <column datatype='string' name='ExterCond' ordinal='28' />
            <column datatype='string' name='Foundation' ordinal='29' />
            <column datatype='string' name='BsmtQual' ordinal='30' />
            <column datatype='string' name='BsmtCond' ordinal='31' />
            <column datatype='string' name='BsmtExposure' ordinal='32' />
            <column datatype='string' name='BsmtFinType1' ordinal='33' />
            <column datatype='integer' name='BsmtFinSF1' ordinal='34' />
            <column datatype='string' name='BsmtFinType2' ordinal='35' />
            <column datatype='integer' name='BsmtFinSF2' ordinal='36' />
            <column datatype='integer' name='BsmtUnfSF' ordinal='37' />
            <column datatype='integer' name='TotalBsmtSF' ordinal='38' />
            <column datatype='string' name='Heating' ordinal='39' />
            <column datatype='string' name='HeatingQC' ordinal='40' />
            <column datatype='string' name='CentralAir' ordinal='41' />
            <column datatype='string' name='Electrical' ordinal='42' />
            <column datatype='integer' name='1stFlrSF' ordinal='43' />
            <column datatype='integer' name='2ndFlrSF' ordinal='44' />
            <column datatype='integer' name='LowQualFinSF' ordinal='45' />
            <column datatype='integer' name='GrLivArea' ordinal='46' />
            <column datatype='integer' name='BsmtFullBath' ordinal='47' />
            <column datatype='integer' name='BsmtHalfBath' ordinal='48' />
            <column datatype='integer' name='FullBath' ordinal='49' />
            <column datatype='integer' name='HalfBath' ordinal='50' />
            <column datatype='integer' name='BedroomAbvGr' ordinal='51' />
            <column datatype='integer' name='KitchenAbvGr' ordinal='52' />
            <column datatype='string' name='KitchenQual' ordinal='53' />
            <column datatype='integer' name='TotRmsAbvGrd' ordinal='54' />
            <column datatype='string' name='Functional' ordinal='55' />
            <column datatype='integer' name='Fireplaces' ordinal='56' />
            <column datatype='string' name='FireplaceQu' ordinal='57' />
            <column datatype='string' name='GarageType' ordinal='58' />
            <column datatype='string' name='GarageYrBlt' ordinal='59' />
            <column datatype='string' name='GarageFinish' ordinal='60' />
            <column datatype='integer' name='GarageCars' ordinal='61' />
            <column datatype='integer' name='GarageArea' ordinal='62' />
            <column datatype='string' name='GarageQual' ordinal='63' />
            <column datatype='string' name='GarageCond' ordinal='64' />
            <column datatype='string' name='PavedDrive' ordinal='65' />
            <column datatype='integer' name='WoodDeckSF' ordinal='66' />
            <column datatype='integer' name='OpenPorchSF' ordinal='67' />
            <column datatype='integer' name='EnclosedPorch' ordinal='68' />
            <column datatype='integer' name='3SsnPorch' ordinal='69' />
            <column datatype='integer' name='ScreenPorch' ordinal='70' />
            <column datatype='integer' name='PoolArea' ordinal='71' />
            <column datatype='string' name='PoolQC' ordinal='72' />
            <column datatype='string' name='Fence' ordinal='73' />
            <column datatype='string' name='MiscFeature' ordinal='74' />
            <column datatype='integer' name='MiscVal' ordinal='75' />
            <column datatype='integer' name='MoSold' ordinal='76' />
            <column datatype='integer' name='YrSold' ordinal='77' />
            <column datatype='string' name='SaleType' ordinal='78' />
            <column datatype='string' name='SaleCondition' ordinal='79' />
            <column datatype='integer' name='SalePrice' ordinal='80' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSSubClass</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MSSubClass]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MSSubClass</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSZoning</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MSZoning]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MSZoning</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotFrontage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotFrontage]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotFrontage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LotArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotArea</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Street</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alley</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Alley]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Alley</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotShape</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotShape]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotShape</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandContour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LandContour]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LandContour</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Utilities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Utilities]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Utilities</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotConfig</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotConfig]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotConfig</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandSlope</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LandSlope]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LandSlope</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighborhood]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Neighborhood</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Condition1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Condition2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BldgType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BldgType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BldgType</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HouseStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HouseStyle]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HouseStyle</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OverallQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OverallQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OverallQual</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OverallCond</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OverallCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OverallCond</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearBuilt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearBuilt]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YearBuilt</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearRemodAdd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearRemodAdd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YearRemodAdd</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoofStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoofStyle]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>RoofStyle</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoofMatl</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoofMatl]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>RoofMatl</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exterior1st</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exterior1st]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Exterior1st</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exterior2nd</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exterior2nd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Exterior2nd</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MasVnrType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MasVnrType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MasVnrType</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MasVnrArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MasVnrArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MasVnrArea</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExterQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExterQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ExterQual</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExterCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExterCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ExterCond</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foundation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foundation]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Foundation</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtQual</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtCond</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtExposure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtExposure]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtExposure</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinType1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtFinType1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinType1</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinSF1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFinSF1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinSF1</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinType2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtFinType2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinType2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinSF2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFinSF2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinSF2</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtUnfSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtUnfSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtUnfSF</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalBsmtSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalBsmtSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>TotalBsmtSF</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Heating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Heating]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Heating</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HeatingQC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HeatingQC]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HeatingQC</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CentralAir</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CentralAir]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>CentralAir</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electrical</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electrical]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Electrical</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1stFlrSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1stFlrSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>1stFlrSF</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2ndFlrSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2ndFlrSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>2ndFlrSF</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowQualFinSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LowQualFinSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LowQualFinSF</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrLivArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GrLivArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GrLivArea</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFullBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFullBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFullBath</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtHalfBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtHalfBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtHalfBath</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FullBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FullBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>FullBath</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HalfBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HalfBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HalfBath</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BedroomAbvGr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BedroomAbvGr]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BedroomAbvGr</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KitchenAbvGr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KitchenAbvGr]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>KitchenAbvGr</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KitchenQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[KitchenQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>KitchenQual</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotRmsAbvGrd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotRmsAbvGrd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>TotRmsAbvGrd</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Functional</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Functional]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Functional</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fireplaces</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fireplaces]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fireplaces</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FireplaceQu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FireplaceQu]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>FireplaceQu</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageType</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageYrBlt</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageYrBlt]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageYrBlt</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageFinish</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageFinish]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageFinish</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageCars</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GarageCars]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageCars</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GarageArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageArea</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageQual</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageCond</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PavedDrive</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PavedDrive]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PavedDrive</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WoodDeckSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WoodDeckSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>WoodDeckSF</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenPorchSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OpenPorchSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OpenPorchSF</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EnclosedPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EnclosedPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>EnclosedPorch</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3SsnPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3SsnPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>3SsnPorch</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ScreenPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ScreenPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ScreenPorch</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PoolArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PoolArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PoolArea</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PoolQC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PoolQC]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PoolQC</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Fence]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fence</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiscFeature</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MiscFeature]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MiscFeature</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiscVal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MiscVal]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MiscVal</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MoSold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MoSold]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MoSold</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YrSold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YrSold]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YrSold</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SaleType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SaleType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SaleType</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SaleCondition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SaleCondition]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SaleCondition</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalePrice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SalePrice]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SalePrice</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[1stFlrSF]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[2ndFlrSF]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[3SsnPorch]' role='dimension' type='ordinal' />
      <column caption='Bedroom Abv Gr' datatype='integer' name='[BedroomAbvGr]' role='measure' type='quantitative' />
      <column datatype='string' name='[Bldg Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[BldgType]' new-bin='true'>
          <bin default-name='true' value='&quot;2fmCon, Duplex, Twnhs and 1 more&quot;'>
            <value>&quot;2fmCon&quot;</value>
            <value>&quot;Duplex&quot;</value>
            <value>&quot;Twnhs&quot;</value>
            <value>&quot;TwnhsE&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
      <column datatype='string' name='[Bsmt Exposure (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[BsmtExposure]' new-bin='true'>
          <bin default-name='true' value='&quot;Av &amp; Mn&quot;'>
            <value>&quot;Av&quot;</value>
            <value>&quot;Mn&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Bsmt Cond' datatype='string' name='[BsmtCond]' role='dimension' type='nominal' />
      <column caption='Bsmt Exposure' datatype='string' name='[BsmtExposure]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[BsmtFinSF1]' role='dimension' type='ordinal' />
      <column datatype='string' name='[BsmtFinType1]' role='dimension' type='nominal' />
      <column datatype='string' name='[BsmtFinType2]' role='dimension' type='nominal' />
      <column caption='Bsmt Full Bath' datatype='integer' name='[BsmtFullBath]' role='measure' type='quantitative' />
      <column caption='Bsmt Half Bath' datatype='integer' name='[BsmtHalfBath]' role='measure' type='quantitative' />
      <column caption='Bsmt Qual' datatype='string' name='[BsmtQual]' role='dimension' type='nominal' />
      <column caption='Bsmt Unf SF' datatype='integer' name='[BsmtUnfSF]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='TotalSF' datatype='integer' name='[Calculation_328199863639736320]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[GrLivArea]+ [TotalBsmtSF]' />
      </column>
      <column aggregation='Sum' caption='Specialty Area' datatype='integer' name='[Calculation_328199863641300993]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[PoolArea] + [WoodDeckSF] + [MasVnrArea] + [OpenPorchSF]' />
      </column>
      <column aggregation='Sum' caption='Ratio of live to total' datatype='real' name='[Calculation_401664822191943686]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[GrLivArea]/[LotArea]' />
      </column>
      <column caption='Qual_Garage_Number' datatype='integer' name='[Calculation_401664822194020361]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GarageQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [GarageQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [GarageQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [GarageQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column aggregation='Sum' caption='Average Qual' datatype='real' name='[Calculation_401664822195130379]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='([Qual_Garage_Number (copy)] + [Qual_Bsmt_Number (copy 2)] + [Calculation_401664822194020361] + [Qual_Bsmt_Number (copy)])/4' />
      </column>
      <column caption='QualCombined' datatype='string' name='[Calculation_503840242685890562]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[KitchenQual] + [ExterQual]' />
      </column>
      <column caption='Central Air' datatype='string' name='[CentralAir]' role='dimension' type='nominal' />
      <column datatype='string' name='[Electrical (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Electrical]' new-bin='true'>
          <bin default-name='true' value='&quot;FuseA, FuseF, FuseP and 2 more&quot;'>
            <value>&quot;FuseA&quot;</value>
            <value>&quot;FuseF&quot;</value>
            <value>&quot;FuseP&quot;</value>
            <value>&quot;Mix&quot;</value>
            <value>&quot;NA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Electrical]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Enclosed Porch' datatype='integer' name='[EnclosedPorch]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Exter Qual (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[ExterQual]' new-bin='true'>
          <bin default-name='true' value='&quot;Fa &amp; TA&quot;'>
            <value>&quot;Fa&quot;</value>
            <value>&quot;TA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Exter Cond' datatype='string' name='[ExterCond]' role='dimension' type='nominal' />
      <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
      <column datatype='string' name='[Exterior1st (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Exterior1st]' new-bin='true'>
          <bin default-name='true' value='&quot;AsbShng, AsphShn, BrkComm and 1 more&quot;'>
            <value>&quot;AsbShng&quot;</value>
            <value>&quot;AsphShn&quot;</value>
            <value>&quot;BrkComm&quot;</value>
            <value>&quot;CBlock&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;BrkFace, CemntBd, ImStucc and 2 more&quot;'>
            <value>&quot;BrkFace&quot;</value>
            <value>&quot;CemntBd&quot;</value>
            <value>&quot;ImStucc&quot;</value>
            <value>&quot;Stone&quot;</value>
            <value>&quot;VinylSd&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;MetalSd, Stucco, Wd Sdng and 1 more&quot;'>
            <value>&quot;MetalSd&quot;</value>
            <value>&quot;Stucco&quot;</value>
            <value>&quot;Wd Sdng&quot;</value>
            <value>&quot;WdShing&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
      <column caption='Fireplace Qu' datatype='string' name='[FireplaceQu]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Fireplaces]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Foundation (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Foundation]' new-bin='true'>
          <bin default-name='true' value='&quot;BrkTil, CBlock, Stone and 1 more&quot;'>
            <value>&quot;BrkTil&quot;</value>
            <value>&quot;CBlock&quot;</value>
            <value>&quot;Stone&quot;</value>
            <value>&quot;Wood&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
      <column caption='Full Bath' datatype='integer' name='[FullBath]' role='measure' type='quantitative' />
      <column caption='Garage Area' datatype='integer' name='[GarageArea]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Garage Cars' datatype='integer' name='[GarageCars]' role='dimension' type='ordinal' />
      <column caption='Garage Cond' datatype='string' name='[GarageCond]' role='dimension' type='nominal' />
      <column caption='Garage Finish' datatype='string' name='[GarageFinish]' role='dimension' type='nominal' />
      <column caption='Garage Qual' datatype='string' name='[GarageQual]' role='dimension' type='nominal' />
      <column caption='Garage Type' datatype='string' name='[GarageType]' role='dimension' type='nominal' />
      <column caption='Garage Yr Blt' datatype='string' name='[GarageYrBlt]' role='dimension' type='nominal' />
      <column caption='Gr Liv Area' datatype='integer' name='[GrLivArea]' role='measure' type='quantitative' />
      <column caption='Half Bath' datatype='integer' name='[HalfBath]' role='measure' type='quantitative' />
      <column caption='Heating QC' datatype='string' name='[HeatingQC]' role='dimension' type='nominal' />
      <column datatype='string' name='[House Style (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[HouseStyle]' new-bin='true'>
          <bin default-name='true' value='&quot;2.5Fin &amp; 2Story&quot;'>
            <value>&quot;2.5Fin&quot;</value>
            <value>&quot;2Story&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='House Style' datatype='string' name='[HouseStyle]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Kitchen Abv Gr' datatype='integer' name='[KitchenAbvGr]' role='dimension' type='ordinal' />
      <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
      <column datatype='string' name='[Land Contour (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[LandContour]' new-bin='true'>
          <bin default-name='true' value='&quot;HLS &amp; Low&quot;'>
            <value>&quot;HLS&quot;</value>
            <value>&quot;Low&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
      <column caption='Land Slope' datatype='string' name='[LandSlope]' role='dimension' type='nominal' />
      <column datatype='string' name='[Lot Shape (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[LotShape]' new-bin='true'>
          <bin default-name='true' value='&quot;IR2 &amp; IR3&quot;'>
            <value>&quot;IR2&quot;</value>
            <value>&quot;IR3&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Sum' caption='Lot Area' datatype='integer' name='[LotArea]' role='dimension' type='ordinal' />
      <column caption='Lot Config' datatype='string' name='[LotConfig]' role='dimension' type='nominal' />
      <column caption='Lot Frontage' datatype='string' name='[LotFrontage]' role='dimension' type='nominal' />
      <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
      <column caption='Low Qual Fin SF' datatype='integer' name='[LowQualFinSF]' role='measure' type='quantitative' />
      <column datatype='string' name='[MS Sub Class (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MSSubClass]' new-bin='true'>
          <bin default-name='true' value='&quot;160, 190, 40 and 4 more&quot;'>
            <value>&quot;160&quot;</value>
            <value>&quot;190&quot;</value>
            <value>&quot;40&quot;</value>
            <value>&quot;50&quot;</value>
            <value>&quot;70&quot;</value>
            <value>&quot;85&quot;</value>
            <value>&quot;90&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;180, 30, 45&quot;'>
            <value>&quot;180&quot;</value>
            <value>&quot;30&quot;</value>
            <value>&quot;45&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;20, 75, 80&quot;'>
            <value>&quot;20&quot;</value>
            <value>&quot;75&quot;</value>
            <value>&quot;80&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[MS Zoning (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MSZoning]' new-bin='true'>
          <bin default-name='true' value='&quot;C (all), RH, RM&quot;'>
            <value>&quot;C (all)&quot;</value>
            <value>&quot;RH&quot;</value>
            <value>&quot;RM&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='MS Sub Class' datatype='string' name='[MSSubClass]' role='dimension' type='nominal' />
      <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
      <column datatype='string' name='[Mas Vnr Type (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MasVnrType]' new-bin='true'>
          <bin default-name='true' value='&quot;BrkCmn &amp; None&quot;'>
            <value>&quot;BrkCmn&quot;</value>
            <value>&quot;None&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;NA &amp; Stone&quot;'>
            <value>&quot;NA&quot;</value>
            <value>&quot;Stone&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Sum' caption='Mas Vnr Area' datatype='integer' name='[MasVnrArea]' role='dimension' type='ordinal' />
      <column caption='Mas Vnr Type' datatype='string' name='[MasVnrType]' role='dimension' type='nominal' />
      <column caption='Misc Feature' datatype='string' name='[MiscFeature]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Misc Val' datatype='integer' name='[MiscVal]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Mo Sold (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MoSold]' new-bin='true'>
          <bin default-name='false' value='&quot;Fall&quot;'>
            <value>9</value>
            <value>10</value>
          </bin>
          <bin default-name='false' value='&quot;Spring&quot;'>
            <value>3</value>
            <value>4</value>
            <value>5</value>
          </bin>
          <bin default-name='false' value='&quot;Summer&quot;'>
            <value>6</value>
            <value>7</value>
            <value>8</value>
          </bin>
          <bin default-name='false' value='&quot;Winter&quot;'>
            <value>1</value>
            <value>2</value>
            <value>11</value>
            <value>12</value>
          </bin>
        </calculation>
      </column>
      <column caption='Mo Sold' datatype='integer' name='[MoSold]' role='measure' type='quantitative' />
      <column datatype='string' name='[Neighborhood (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
          <bin default-name='true' value='&quot;Blueste, NPkVill, SWISU&quot;'>
            <value>&quot;Blueste&quot;</value>
            <value>&quot;NPkVill&quot;</value>
            <value>&quot;SWISU&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
          <bin default-name='false' value='&quot;BEO&quot;'>
            <value>&quot;BrkSide&quot;</value>
            <value>&quot;Edwards&quot;</value>
            <value>&quot;OldTown&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BlueSwis&quot;'>
            <value>&quot;Blueste&quot;</value>
            <value>&quot;Mitchel&quot;</value>
            <value>&quot;NAmes&quot;</value>
            <value>&quot;NPkVill&quot;</value>
            <value>&quot;Sawyer&quot;</value>
            <value>&quot;SWISU&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BNS&quot;'>
            <value>&quot;Blmngtn&quot;</value>
            <value>&quot;Gilbert&quot;</value>
            <value>&quot;NWAmes&quot;</value>
            <value>&quot;SawyerW&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BrMeadow&quot;'>
            <value>&quot;BrDale&quot;</value>
            <value>&quot;IDOTRR&quot;</value>
            <value>&quot;MeadowV&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;C3&quot;'>
            <value>&quot;ClearCr&quot;</value>
            <value>&quot;CollgCr&quot;</value>
            <value>&quot;Crawfor&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;NNS&quot;'>
            <value>&quot;NoRidge&quot;</value>
            <value>&quot;NridgHt&quot;</value>
            <value>&quot;StoneBr&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;STV&quot;'>
            <value>&quot;Somerst&quot;</value>
            <value>&quot;Timber&quot;</value>
            <value>&quot;Veenker&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Open Porch SF' datatype='integer' name='[OpenPorchSF]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Overall Cond' datatype='integer' name='[OverallCond]' role='dimension' type='ordinal' />
      <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
      <column caption='Paved Drive' datatype='string' name='[PavedDrive]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Pool Area' datatype='integer' name='[PoolArea]' role='dimension' type='ordinal' />
      <column caption='Pool QC' datatype='string' name='[PoolQC]' role='dimension' type='nominal' />
      <column caption='Qual_Exter_Number' datatype='integer' name='[Qual_Bsmt_Number (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [ExterQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [ExterQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [ExterQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [ExterQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Qual_Kitchen_Number' datatype='integer' name='[Qual_Bsmt_Number (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [KitchenQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [KitchenQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [KitchenQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [KitchenQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Qual_Bsmt_Number' datatype='integer' name='[Qual_Garage_Number (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [BsmtQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [BsmtQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [BsmtQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [BsmtQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column datatype='string' name='[Roof Style (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[RoofStyle]' new-bin='true'>
          <bin default-name='true' value='&quot;Flat, Hip, Mansard and 1 more&quot;'>
            <value>&quot;Flat&quot;</value>
            <value>&quot;Hip&quot;</value>
            <value>&quot;Mansard&quot;</value>
            <value>&quot;Shed&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Gable &amp; Gambrel&quot;'>
            <value>&quot;Gable&quot;</value>
            <value>&quot;Gambrel&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Roof Matl' datatype='string' name='[RoofMatl]' role='dimension' type='nominal' />
      <column caption='Roof Style' datatype='string' name='[RoofStyle]' role='dimension' type='nominal' />
      <column datatype='string' name='[Sale Condition (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[SaleCondition]' new-bin='true'>
          <bin default-name='true' value='&quot;Abnorml, AdjLand, Alloca and 1 more&quot;'>
            <value>&quot;Abnorml&quot;</value>
            <value>&quot;AdjLand&quot;</value>
            <value>&quot;Alloca&quot;</value>
            <value>&quot;Family&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sale Type (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[SaleType]' new-bin='true'>
          <bin default-name='true' value='&quot;COD, ConLD, ConLw and 2 more&quot;'>
            <value>&quot;COD&quot;</value>
            <value>&quot;ConLD&quot;</value>
            <value>&quot;ConLw&quot;</value>
            <value>&quot;Oth&quot;</value>
            <value>&quot;WD&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Con, ConLI, CWD and 1 more&quot;'>
            <value>&quot;Con&quot;</value>
            <value>&quot;ConLI&quot;</value>
            <value>&quot;CWD&quot;</value>
            <value>&quot;New&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
      <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
      <column caption='Sale Type' datatype='string' name='[SaleType]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Screen Porch' datatype='integer' name='[ScreenPorch]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Tot Rms Abv Grd' datatype='integer' name='[TotRmsAbvGrd]' role='dimension' type='ordinal' />
      <column caption='Total Bsmt SF' datatype='integer' name='[TotalBsmtSF]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Wood Deck SF' datatype='integer' name='[WoodDeckSF]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Year Built' datatype='integer' name='[YearBuilt]' role='dimension' type='ordinal' />
      <column caption='Year Remod Add' datatype='integer' name='[YearRemodAdd]' role='dimension' type='quantitative' />
      <column caption='Yr Sold' datatype='integer' name='[YrSold]' role='dimension' type='quantitative' />
      <group name='[Bsmt Qual, Garage Qual, Heating QC and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[GarageQual]' />
          <groupfilter function='level-members' level='[HeatingQC]' />
          <groupfilter function='level-members' level='[ExterQual]' />
          <groupfilter function='level-members' level='[KitchenQual]' />
        </groupfilter>
      </group>
      <group name='[BsmtFinType1, Foundation, Bsmt Qual and 1 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BsmtFinType1]' />
          <groupfilter function='level-members' level='[Foundation]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[BsmtFinType2]' />
        </groupfilter>
      </group>
      <group name='[Foundation &amp; Bsmt Qual (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Foundation]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
        </groupfilter>
      </group>
      <group name='[Garage Qual, Bsmt Qual, Exter Qual and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GarageQual]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[ExterQual]' />
          <groupfilter function='level-members' level='[KitchenQual]' />
        </groupfilter>
      </group>
      <group name='[Kitchen Qual &amp; Exter Qual (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[KitchenQual]' />
          <groupfilter function='level-members' level='[ExterQual]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.539797' measure-ordering='alphabetic' measure-percentage='0.460203' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Neighborhood (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BEO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C3&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;BrMeadow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BNS&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;NNS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BlueSwis&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data' inline='true' name='federated.055r1m20ncqq4z13lx9eq0aa278b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1gk7rvx0ffecon15kfsli1d46qc4'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1gk7rvx0ffecon15kfsli1d46qc4' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KitchenExterQual' datatype='string' name='[Calculation_503840242685714433]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([federated.0je71i81w9fhsx19mepx11n8r32i].[KitchenQual]) + ATTR([federated.0je71i81w9fhsx19mepx11n8r32i].[ExterQual])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coord]' derivation='Sum' name='[sum:coord:qk]' pivot='key' type='quantitative' />
      <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.424023' measure-ordering='alphabetic' measure-percentage='0.575977' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
        <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
        <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{99145fdf-f0b8-4ebf-8bad-2276ed643301}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[attr:name:nk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:coord:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1/2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.055r1m20ncqq4z13lx9eq0aa278b' />
          </datasources>
          <datasource-dependencies datasource='federated.055r1m20ncqq4z13lx9eq0aa278b'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{99145fdf-f0b8-4ebf-8bad-2276ed643301}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
            <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coord]' derivation='Sum' name='[sum:coord:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' field-type='quantitative' max='0.47714843519516992' min='-0.11356780768797037' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' field-type='quantitative' max='0.3873070829113201' min='-0.16410622865981084' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' />
              <text column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]' />
              <lod column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]' />
              <lod column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:coord:qk]' />
              <color column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]</rows>
        <cols>[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='3/4'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (2)' name='federated.1e28wd1067nyw519jd0ag0b6qhc1' />
          </datasources>
          <datasource-dependencies datasource='federated.1e28wd1067nyw519jd0ag0b6qhc1'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1e28wd1067nyw519jd0ag0b6qhc1].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[sum:y:qk]</rows>
        <cols>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='5/6'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_45' name='federated.16u29xf1clbpci18rk0yf131z7ft' />
          </datasources>
          <datasource-dependencies datasource='federated.16u29xf1clbpci18rk0yf131z7ft'>
            <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:x:qk]' field-type='quantitative' max='0.41871570542622416' min='0.021284078646205195' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:y:qk]' field-type='quantitative' max='0.35576301556811546' min='0.04486974733608428' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' />
              <size column='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' />
              <text column='[federated.16u29xf1clbpci18rk0yf131z7ft].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:y:qk]</rows>
        <cols>[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='BldgType'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Bldg Type (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[BldgType]' new-bin='true'>
                <bin default-name='true' value='&quot;2fmCon, Duplex, Twnhs and 1 more&quot;'>
                  <value>&quot;2fmCon&quot;</value>
                  <value>&quot;Duplex&quot;</value>
                  <value>&quot;Twnhs&quot;</value>
                  <value>&quot;TwnhsE&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Bldg Type (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline4' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bldg Type (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='BsmtExposure'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Bsmt Exposure (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[BsmtExposure]' new-bin='true'>
                <bin default-name='true' value='&quot;Av &amp; Mn&quot;'>
                  <value>&quot;Av&quot;</value>
                  <value>&quot;Mn&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Bsmt Exposure' datatype='string' name='[BsmtExposure]' role='dimension' type='nominal' />
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_550002142081282050]' role='measure' type='quantitative' user:unnamed='BsmtExposure'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550002142081282050]' derivation='User' name='[usr:Calculation_550002142081282050:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Exposure (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142081282050:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142081282050:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142081282050:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142081282050:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Exposure (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='Contour'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Land Contour (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[LandContour]' new-bin='true'>
                <bin default-name='true' value='&quot;HLS &amp; Low&quot;'>
                  <value>&quot;HLS&quot;</value>
                  <value>&quot;Low&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Land Contour (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Land Contour (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='Electrical'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_443604604340416512]' role='measure' type='quantitative' user:unnamed='Electrical'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Electrical (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Electrical]' new-bin='true'>
                <bin default-name='true' value='&quot;FuseA, FuseF, FuseP and 2 more&quot;'>
                  <value>&quot;FuseA&quot;</value>
                  <value>&quot;FuseF&quot;</value>
                  <value>&quot;FuseP&quot;</value>
                  <value>&quot;Mix&quot;</value>
                  <value>&quot;NA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Electrical]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_443604604340416512]' derivation='User' name='[usr:Calculation_443604604340416512:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_443604604340416512:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_443604604340416512:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_443604604340416512:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_443604604340416512:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Electrical (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column caption='Garage Qual' datatype='string' name='[GarageQual]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GarageQual]' derivation='None' name='[none:GarageQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]' direction='ASC'>
            <dictionary>
              <bucket>(&quot;Gd&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(&quot;Gd&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Gd&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Fa&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Fa&quot;,&quot;Fa&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Fa&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(%all%,%all%)</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]'>
            <groupfilter from='&quot;Ex&quot;' function='range' level='[none:GarageQual:nk]' to='&quot;TA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]</column>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk] / [federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)])</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQualGrouping'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Exter Qual (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[ExterQual]' new-bin='true'>
                <bin default-name='true' value='&quot;Fa &amp; TA&quot;'>
                  <value>&quot;Fa&quot;</value>
                  <value>&quot;TA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[ExterQual]' derivation='None' name='[none:ExterQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Ex&quot;</bucket>
              <bucket>&quot;Gd&quot;</bucket>
              <bucket>&quot;Fa &amp; TA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQualKitchenQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='QualCombined' datatype='string' name='[Calculation_503840242685890562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[KitchenQual] + [ExterQual]' />
            </column>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Max' name='[max:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Min' name='[min:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_503840242685890562]' derivation='None' name='[none:Calculation_503840242685890562:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Stdev' name='[std:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Exterior1st'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_550002142079111168]' role='measure' type='quantitative' user:unnamed='Exterior1st'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Exterior1st (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Exterior1st]' new-bin='true'>
                <bin default-name='true' value='&quot;AsbShng, AsphShn, BrkComm and 1 more&quot;'>
                  <value>&quot;AsbShng&quot;</value>
                  <value>&quot;AsphShn&quot;</value>
                  <value>&quot;BrkComm&quot;</value>
                  <value>&quot;CBlock&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;BrkFace, CemntBd, ImStucc and 2 more&quot;'>
                  <value>&quot;BrkFace&quot;</value>
                  <value>&quot;CemntBd&quot;</value>
                  <value>&quot;ImStucc&quot;</value>
                  <value>&quot;Stone&quot;</value>
                  <value>&quot;VinylSd&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;MetalSd, Stucco, Wd Sdng and 1 more&quot;'>
                  <value>&quot;MetalSd&quot;</value>
                  <value>&quot;Stucco&quot;</value>
                  <value>&quot;Wd Sdng&quot;</value>
                  <value>&quot;WdShing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550002142079111168]' derivation='User' name='[usr:Calculation_550002142079111168:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group) 2]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142079111168:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142079111168:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142079111168:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142079111168:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group) 2]</cols>
      </table>
    </worksheet>
    <worksheet name='Exterior1st (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_503840242688516099]' role='measure' type='quantitative' user:unnamed='Exterior1st (2)'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exterior1st]' derivation='None' name='[none:Exterior1st:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_503840242688516099]' derivation='User' name='[usr:Calculation_503840242688516099:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fintype'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Foundation'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Foundation (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Foundation]' new-bin='true'>
                <bin default-name='true' value='&quot;BrkTil, CBlock, Stone and 1 more&quot;'>
                  <value>&quot;BrkTil&quot;</value>
                  <value>&quot;CBlock&quot;</value>
                  <value>&quot;Stone&quot;</value>
                  <value>&quot;Wood&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation (group)]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Gr LIv Area Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664822185672708]' role='measure' type='quantitative' user:unnamed='Gr LIv Area Price'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Fence]' role='dimension' type='nominal' />
            <column datatype='string' name='[Functional]' role='dimension' type='nominal' />
            <column caption='Heating QC' datatype='string' name='[HeatingQC]' role='dimension' type='nominal' />
            <column datatype='string' name='[House Style (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[HouseStyle]' new-bin='true'>
                <bin default-name='true' value='&quot;2.5Fin &amp; 2Story&quot;'>
                  <value>&quot;2.5Fin&quot;</value>
                  <value>&quot;2Story&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='House Style' datatype='string' name='[HouseStyle]' role='dimension' type='nominal' />
            <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
            <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
            <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
            <column caption='Misc Feature' datatype='string' name='[MiscFeature]' role='dimension' type='nominal' />
            <column caption='Paved Drive' datatype='string' name='[PavedDrive]' role='dimension' type='nominal' />
            <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column datatype='string' name='[Utilities]' role='dimension' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BldgType]' derivation='None' name='[none:BldgType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fence]' derivation='None' name='[none:Fence:nk]' pivot='key' type='nominal' />
            <column-instance column='[Functional]' derivation='None' name='[none:Functional:nk]' pivot='key' type='nominal' />
            <column-instance column='[HeatingQC]' derivation='None' name='[none:HeatingQC:nk]' pivot='key' type='nominal' />
            <column-instance column='[LandContour]' derivation='None' name='[none:LandContour:nk]' pivot='key' type='nominal' />
            <column-instance column='[LotShape]' derivation='None' name='[none:LotShape:nk]' pivot='key' type='nominal' />
            <column-instance column='[MSZoning]' derivation='None' name='[none:MSZoning:nk]' pivot='key' type='nominal' />
            <column-instance column='[MiscFeature]' derivation='None' name='[none:MiscFeature:nk]' pivot='key' type='nominal' />
            <column-instance column='[PavedDrive]' derivation='None' name='[none:PavedDrive:nk]' pivot='key' type='nominal' />
            <column-instance column='[SaleCondition]' derivation='None' name='[none:SaleCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Utilities]' derivation='None' name='[none:Utilities:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664822185672708]' derivation='User' name='[usr:Calculation_401664822185672708:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Utilities:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PavedDrive:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MiscFeature:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Functional:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fence:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='LotShape'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_550002142082179075]' role='measure' type='quantitative' user:unnamed='LotShape'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Lot Shape (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[LotShape]' new-bin='true'>
                <bin default-name='true' value='&quot;IR2 &amp; IR3&quot;'>
                  <value>&quot;IR2&quot;</value>
                  <value>&quot;IR3&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550002142082179075]' derivation='User' name='[usr:Calculation_550002142082179075:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Lot Shape (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142082179075:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142082179075:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142082179075:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='671' />
                <format attr='maxheight' value='671' />
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142082179075:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Lot Shape (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='MSZoning'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[MS Zoning (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MSZoning]' new-bin='true'>
                <bin default-name='true' value='&quot;C (all), RH, RM&quot;'>
                  <value>&quot;C (all)&quot;</value>
                  <value>&quot;RH&quot;</value>
                  <value>&quot;RM&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Zoning (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Zoning (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='MasVnr'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Mas Vnr Type' datatype='string' name='[MasVnrType]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Max' name='[max:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Min' name='[min:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MasVnrType]' derivation='None' name='[none:MasVnrType:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Stdev' name='[std:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='NeighborhoodGrouping'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664821936644098]' role='measure' type='quantitative' user:unnamed='NeighborhoodGrouping'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
                <bin default-name='false' value='&quot;BEO&quot;'>
                  <value>&quot;BrkSide&quot;</value>
                  <value>&quot;Edwards&quot;</value>
                  <value>&quot;OldTown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BlueSwis&quot;'>
                  <value>&quot;Blueste&quot;</value>
                  <value>&quot;Mitchel&quot;</value>
                  <value>&quot;NAmes&quot;</value>
                  <value>&quot;NPkVill&quot;</value>
                  <value>&quot;Sawyer&quot;</value>
                  <value>&quot;SWISU&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BNS&quot;'>
                  <value>&quot;Blmngtn&quot;</value>
                  <value>&quot;Gilbert&quot;</value>
                  <value>&quot;NWAmes&quot;</value>
                  <value>&quot;SawyerW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BrMeadow&quot;'>
                  <value>&quot;BrDale&quot;</value>
                  <value>&quot;IDOTRR&quot;</value>
                  <value>&quot;MeadowV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C3&quot;'>
                  <value>&quot;ClearCr&quot;</value>
                  <value>&quot;CollgCr&quot;</value>
                  <value>&quot;Crawfor&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NNS&quot;'>
                  <value>&quot;NoRidge&quot;</value>
                  <value>&quot;NridgHt&quot;</value>
                  <value>&quot;StoneBr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;STV&quot;'>
                  <value>&quot;Somerst&quot;</value>
                  <value>&quot;Timber&quot;</value>
                  <value>&quot;Veenker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664821936644098]' derivation='User' name='[usr:Calculation_401664821936644098:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' z-order='1' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='NeighborhoodGroupinga'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column aggregation='Sum' datatype='integer' name='[2ndFlrSF]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='TotalSF' datatype='integer' name='[Calculation_328199863639736320]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[GrLivArea]+ [TotalBsmtSF]' />
            </column>
            <column aggregation='Sum' caption='Specialty Area' datatype='integer' name='[Calculation_328199863641300993]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[PoolArea] + [WoodDeckSF] + [MasVnrArea] + [OpenPorchSF]' />
            </column>
            <column caption='QualCombined' datatype='string' name='[Calculation_503840242685890562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[KitchenQual] + [ExterQual]' />
            </column>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Fireplaces]' role='dimension' type='ordinal' />
            <column caption='Gr Liv Area' datatype='integer' name='[GrLivArea]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Lot Area' datatype='integer' name='[LotArea]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Mas Vnr Area' datatype='integer' name='[MasVnrArea]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
                <bin default-name='false' value='&quot;BEO&quot;'>
                  <value>&quot;BrkSide&quot;</value>
                  <value>&quot;Edwards&quot;</value>
                  <value>&quot;OldTown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BlueSwis&quot;'>
                  <value>&quot;Blueste&quot;</value>
                  <value>&quot;Mitchel&quot;</value>
                  <value>&quot;NAmes&quot;</value>
                  <value>&quot;NPkVill&quot;</value>
                  <value>&quot;Sawyer&quot;</value>
                  <value>&quot;SWISU&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BNS&quot;'>
                  <value>&quot;Blmngtn&quot;</value>
                  <value>&quot;Gilbert&quot;</value>
                  <value>&quot;NWAmes&quot;</value>
                  <value>&quot;SawyerW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BrMeadow&quot;'>
                  <value>&quot;BrDale&quot;</value>
                  <value>&quot;IDOTRR&quot;</value>
                  <value>&quot;MeadowV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C3&quot;'>
                  <value>&quot;ClearCr&quot;</value>
                  <value>&quot;CollgCr&quot;</value>
                  <value>&quot;Crawfor&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NNS&quot;'>
                  <value>&quot;NoRidge&quot;</value>
                  <value>&quot;NridgHt&quot;</value>
                  <value>&quot;StoneBr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;STV&quot;'>
                  <value>&quot;Somerst&quot;</value>
                  <value>&quot;Timber&quot;</value>
                  <value>&quot;Veenker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Open Porch SF' datatype='integer' name='[OpenPorchSF]' role='dimension' type='ordinal' />
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Pool Area' datatype='integer' name='[PoolArea]' role='dimension' type='ordinal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Tot Rms Abv Grd' datatype='integer' name='[TotRmsAbvGrd]' role='dimension' type='ordinal' />
            <column caption='Total Bsmt SF' datatype='integer' name='[TotalBsmtSF]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Wood Deck SF' datatype='integer' name='[WoodDeckSF]' role='dimension' type='ordinal' />
            <column-instance column='[2ndFlrSF]' derivation='None' name='[none:2ndFlrSF:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_328199863639736320]' derivation='None' name='[none:Calculation_328199863639736320:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_328199863641300993]' derivation='None' name='[none:Calculation_328199863641300993:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_503840242685890562]' derivation='None' name='[none:Calculation_503840242685890562:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fireplaces]' derivation='None' name='[none:Fireplaces:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Id]' derivation='None' name='[none:Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[LotArea]' derivation='None' name='[none:LotArea:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neighborhood]' derivation='None' name='[none:Neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotRmsAbvGrd]' derivation='None' name='[none:TotRmsAbvGrd:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]'>
            <groupfilter function='member' level='[Neighborhood (group)]' member='&quot;NNS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Id:ok]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' />
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' value='40' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0je71i81w9fhsx19mepx11n8r32i].[none:Id:ok] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:2ndFlrSF:ok] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_328199863641300993:ok] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:TotRmsAbvGrd:ok] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fireplaces:ok] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotArea:ok] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_328199863639736320:ok] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk] / ([federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk] / [federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]))))))))))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='OverallQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='RoofStyle'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_550002142080327681]' role='measure' type='quantitative' user:unnamed='RoofStyle'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Roof Style (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[RoofStyle]' new-bin='true'>
                <bin default-name='true' value='&quot;Flat, Hip, Mansard and 1 more&quot;'>
                  <value>&quot;Flat&quot;</value>
                  <value>&quot;Hip&quot;</value>
                  <value>&quot;Mansard&quot;</value>
                  <value>&quot;Shed&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Gable &amp; Gambrel&quot;'>
                  <value>&quot;Gable&quot;</value>
                  <value>&quot;Gambrel&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Roof Style' datatype='string' name='[RoofStyle]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550002142080327681]' derivation='User' name='[usr:Calculation_550002142080327681:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Roof Style (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142080327681:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142080327681:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142080327681:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_550002142080327681:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Roof Style (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='SaleCondition'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Sale Condition (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[SaleCondition]' new-bin='true'>
                <bin default-name='true' value='&quot;Abnorml, AdjLand, Alloca and 1 more&quot;'>
                  <value>&quot;Abnorml&quot;</value>
                  <value>&quot;AdjLand&quot;</value>
                  <value>&quot;Alloca&quot;</value>
                  <value>&quot;Family&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Condition (group) 1]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Condition (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='SaleType'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Sale Type (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[SaleType]' new-bin='true'>
                <bin default-name='true' value='&quot;COD, ConLD, ConLw and 2 more&quot;'>
                  <value>&quot;COD&quot;</value>
                  <value>&quot;ConLD&quot;</value>
                  <value>&quot;ConLw&quot;</value>
                  <value>&quot;Oth&quot;</value>
                  <value>&quot;WD&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Con, ConLI, CWD and 1 more&quot;'>
                  <value>&quot;Con&quot;</value>
                  <value>&quot;ConLI&quot;</value>
                  <value>&quot;CWD&quot;</value>
                  <value>&quot;New&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column caption='Sale Type' datatype='string' name='[SaleType]' role='dimension' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Type (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Type (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 30'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 31'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_443604604344954881]' role='measure' type='quantitative' user:unnamed='Sheet 31'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column caption='Lot Config' datatype='string' name='[LotConfig]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[LotConfig]' derivation='None' name='[none:LotConfig:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_443604604344954881]' derivation='User' name='[usr:Calculation_443604604344954881:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_443604604344954881:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_443604604344954881:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_443604604344954881:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_443604604344954881:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotConfig:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='SubClass'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log([Sale Price])' datatype='real' name='[Calculation_401664822163374083]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='log([SalePrice])' />
            </column>
            <column datatype='string' name='[MS Sub Class (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MSSubClass]' new-bin='true'>
                <bin default-name='true' value='&quot;160, 190, 40 and 4 more&quot;'>
                  <value>&quot;160&quot;</value>
                  <value>&quot;190&quot;</value>
                  <value>&quot;40&quot;</value>
                  <value>&quot;50&quot;</value>
                  <value>&quot;70&quot;</value>
                  <value>&quot;85&quot;</value>
                  <value>&quot;90&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;180, 30, 45&quot;'>
                  <value>&quot;180&quot;</value>
                  <value>&quot;30&quot;</value>
                  <value>&quot;45&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;20, 75, 80&quot;'>
                  <value>&quot;20&quot;</value>
                  <value>&quot;75&quot;</value>
                  <value>&quot;80&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='MS Sub Class' datatype='string' name='[MSSubClass]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664822163374083]' derivation='Sum' name='[sum:Calculation_401664822163374083:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='UnderDaHouse'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Foundation]' derivation='None' name='[none:Foundation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;PConc&quot;</bucket>
              <bucket>&quot;Wood&quot;</bucket>
              <bucket>&quot;Stone&quot;</bucket>
              <bucket>&quot;CBlock&quot;</bucket>
              <bucket>&quot;BrkTil&quot;</bucket>
              <bucket>&quot;Slab&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='VnrType'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_646266584366424064]' role='measure' type='quantitative' user:unnamed='VnrType'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Exterior1st (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Exterior1st]' new-bin='true'>
                <bin default-name='true' value='&quot;AsbShng, AsphShn, BrkComm and 1 more&quot;'>
                  <value>&quot;AsbShng&quot;</value>
                  <value>&quot;AsphShn&quot;</value>
                  <value>&quot;BrkComm&quot;</value>
                  <value>&quot;CBlock&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;BrkFace, CemntBd, ImStucc and 2 more&quot;'>
                  <value>&quot;BrkFace&quot;</value>
                  <value>&quot;CemntBd&quot;</value>
                  <value>&quot;ImStucc&quot;</value>
                  <value>&quot;Stone&quot;</value>
                  <value>&quot;VinylSd&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;MetalSd, Stucco, Wd Sdng and 1 more&quot;'>
                  <value>&quot;MetalSd&quot;</value>
                  <value>&quot;Stucco&quot;</value>
                  <value>&quot;Wd Sdng&quot;</value>
                  <value>&quot;WdShing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
            <column datatype='string' name='[Mas Vnr Type (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MasVnrType]' new-bin='true'>
                <bin default-name='true' value='&quot;BrkCmn &amp; None&quot;'>
                  <value>&quot;BrkCmn&quot;</value>
                  <value>&quot;None&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;NA &amp; Stone&quot;'>
                  <value>&quot;NA&quot;</value>
                  <value>&quot;Stone&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Mas Vnr Type' datatype='string' name='[MasVnrType]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_646266584366424064]' derivation='User' name='[usr:Calculation_646266584366424064:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Mas Vnr Type (group) 1]' direction='ASC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_646266584366424064:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group) 2]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_646266584366424064:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_646266584366424064:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_646266584366424064:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Mas Vnr Type (group) 1]</cols>
      </table>
    </worksheet>
    <worksheet name='YearBuilt'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_503840242684461056]' role='measure' type='quantitative' user:unnamed='YearBuilt'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year Built' datatype='integer' name='[YearBuilt]' role='dimension' type='ordinal' />
            <column-instance column='[YearBuilt]' derivation='None' name='[none:YearBuilt:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_503840242684461056]' derivation='User' name='[usr:Calculation_503840242684461056:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearBuilt:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='93'>
    <window class='worksheet' name='1/2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]</field>
            <field>[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3/4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[:Measure Names]</field>
            <field>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='5/6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16u29xf1clbpci18rk0yf131z7ft].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='NeighborhoodGrouping'>
      <cards>
        <edge name='left'>
          <strip size='102'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='192'>
            <card type='rows' />
          </strip>
          <strip size='19'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;C3&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='NeighborhoodGroupinga'>
      <cards>
        <edge name='left'>
          <strip size='102'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='192'>
            <card type='rows' />
          </strip>
          <strip size='19'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:1stFlrSF:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:2ndFlrSF:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_328199863639736320:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_328199863641300993:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fireplaces:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Id:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotArea:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrArea:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OpenPorchSF:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PoolArea:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:TotRmsAbvGrd:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:WoodDeckSF:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearRemodAdd:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='OverallQual'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQualGrouping'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gr LIv Area Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fence:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Functional:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HouseStyle:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandSlope:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MiscFeature:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PavedDrive:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Utilities:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:LotArea:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Qual, Exter Qual, Kitchen Qual and 1 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Qual, Garage Qual, Heating QC and 2 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Garage Qual, Bsmt Qual, Exter Qual and 2 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='BldgType' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SubClass' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSSubClass:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSSubClass:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Foundation' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SaleType' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Type (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Exterior1st' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group) 2]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;MetalSd, Stucco, Wd Sdng and 1 more&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exterior1st (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='VnrType' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='RoofStyle' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MSZoning' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Contour' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Land Contour (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='BsmtExposure' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtExposure:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:FireplaceQu:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Electrical' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtExposure:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:FireplaceQu:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='LotShape' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtExposure:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:FireplaceQu:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SaleCondition' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Sale Condition (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtExposure:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:FireplaceQu:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:RoofStyle:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='YearBuilt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Mo Sold (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearBuilt:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearRemodAdd:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:YearBuilt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQualKitchenQual'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Exterior1st (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MasVnr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='UnderDaHouse'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[BsmtFinType1, Foundation, Bsmt Qual and 1 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation &amp; Bsmt Qual (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 30'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 31'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotConfig:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Fintype'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1/2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3/4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5/6' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='BldgType' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='BsmtExposure' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Contour' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Electrical' width='188'>
      iVBORw0KGgoAAAANSUhEUgAAALwAAADACAYAAAC+qQkRAAAACXBIWXMAABJ0AAASdAHeZh94
      AAATjklEQVR4nO3df1xUdb7H8Zc7smLIlSVCnVxCJOziDQ2mJDEtcbVlZWO1nZKbVtwu3myr
      fWTbQ1tdYHOLdfvhddt24T7Eh7rL3Sh1N6xLKkbYD+wCJelcs0IkHcRL3NH4Nc1M3D8GTGDO
      ADrnwHA+z8fDPzjfM+d8B9+c+Z7v+c73O6qzs7MTIXTiO0NdASG0JIEXuiKBF7oigRe6IoEX
      uiKBF7oigRe6IoEXuiKBF7oigRe6IoEXuiKBFz5g5bVHFrAg513sQ12VfkjgB2H/GhMmk4d/
      5nxqu/apzTdjMq1h/5DVspZ8c886XdbR+n0/To7nP87TZ5bw0i+TGOODc6pp9FBXwO9EZVJU
      lEmURqerzTdjzo8itzKXBRqdc1CsReQWnGXxpkxi/CBNflBFMThRZBZVkqnR2Syv/pWamBVs
      SPSPKEmTRnVOTpVkcU9yEiaTicR5d/BIfjW2i3exVZP/yB3MSzRhMiWRfM+zVLS4mybm/Fpg
      P2u6m09r3I2Li5satv1ZLE7q3rer6dWjSeOhDkVdpQ37yX1gKclJ7uPfk1XCKedA31sFu3ZZ
      ibv9dox93nMuDyzuPt/dPPHv60hP/7ZO39bRyfGCDOYlmuh6a9jrXifrnmSSTCZMifO4+4lX
      sFx0c9D3/Xne5okEXmUtZdncl/sF81/YS0VlJW9vW8Y3hat4rNDq3sFZw+aMVRR1LOX3pRVU
      VuwlL+NqOprdV+qizChgAbmVlVRWVlKZ26thU1vAqqxDhM1O4ZZrx3msg614NXdlH+a6J3fy
      bmUlb7+cw41jm92Fp0/D7evZvreCysoKvnlzHU92160/x6upbonAZArv+57X7Sfovm28XVFJ
      xd48ZtWVcNzDH1JLWTartpwnbmEKN0wCrIU8ePdTfBr/DH+vqKSi9PfMPfUcGfcX+OSexD8+
      h4aT2nzMpvye2xbk9g0iAGd5bXsJ/2AuJCMuCIDRkXeT+ePtZOwv42x6OhRtYnv9TNYUrMC9
      y2ii5y8jekCVsfG3gqOYX95D2mSl/8oKXnzuXcYvyWdN8kT3f/jEmSxP7So23csa07d7m02w
      wWKBXtdsj+rrqSeKqB43NO733JKUxW/ujMb9lsYz3tPdrLOGLcVRbHz9VeJDumq7IZ+a8HS2
      P3YTYQCj41i1IYMy83YKKzJYl9h/tbyRwA/WoG5aLVgsUF+Tjqmg93FaaAHqLRaIyrjwHz44
      zcSueNFL2IF6C5YWiIuP9/yf7TxFybPZ/Me+/+Hkua52w6DujkczuseBa6ipgYjM6Xj+vLm4
      +oH8sOCxi957PRZLC8TGEnvxflFRRNFCTU0tJF5ed4EEXlVOnE6IyChk16oYj3vUX9bxo4i5
      rK4RJxW597GubDpr8vaSFh1E2RoTawZ5DKeTS0tSeAwxl/SHfumkDa+qGGJioL6iAqVWsclk
      gtpqqm0KO1yuCBOmcKiprqZvE7qemhobEUse4s7ooMFnNiKCCGqp7dG4Dic8HM42NHg4X78H
      JDZ2HFgsWC7ebLFgYRxxcZffGSyBV1UES8yJjLa8xOPPv8cZO4Cdc8cOsPnZXdQD4xZnkm6s
      5E9PbKem1QnYOfPe3yjruvRHxcUxjkr2lzThBOz2wT7LjCMjM5HmXb8mt/QMdsDZ+hmvFlcC
      4UyaNJr6shIsdnC2nmbTwUEcOiae+HH1VFae7XG+tLQoWv7rD2z+oAknTlo/e539Rwd2yMSM
      TOLOFrLh+Q9ocoKztYaXNhRyNmYF6V3t9/DwcDh7nOM2wH6OYwfyea3X8d0PCc3kX/hjdPd0
      SeAHqzYfs5cnrb2FpG3i1Q2L+M7rv2BxkglT4kLMG0oIvOkm923h6Dge256POXAnDycnYjLN
      54GCUwSGdh0g8Wc8nxnLkaduJ9GUyMKNHwy6yiFpm3g1ewbHnl5KksnEnJR1fNAZCozjh79Y
      Q3Lby6xIMjHvrix+dstgjpzIkiVGakpKenyCRWW8xHNp3/D3R24nMTGZf9kB0QO7CwdjOn/8
      63qurV7LHYkmEpMfpnzyagq2Zly4b4rL+CV3hr3PugUmklIeouDUTGZPG9jhR8m8NOKyWAvJ
      WFJA1KYS1ik+fHJS8ngi6zrWUfZiWv83syqSK7y4PEYzazLC2fN8/oV+9oN/yuLVj07T6gR3
      E20z298ZTdKiBUMadpArvPAJK689soLNV+bwelYSze/l88JLOzn02Ze0OmHM+OtI+rcneeqn
      sUM+uEwCL3RFmjT9aGtrG+oqCB+SwAtdkcALXZHAC12RwAtdkcALXZHAC12RwAtdkcALXZHA
      C12RwAtdkcALXZHAC12RwAtdkcALXZHAC12RwAtdkcALXZHAC13xu6n2rMXZ5Oxp6LV1Eouz
      sklVmv/TdY5jb2xjx/5jNHVAYNh1/CjzQRZeE6B2dcUw43eBb2iwMefRPJbH9r+vmwtL4a/Z
      Yvsxj/32Ia4O/Ibm6r/y/O9ycT65npQBTJIrRg4/a9JYsVqNGAcTUlsZe46YWLlqHlcHGoAA
      QuOXs2qRi737juBSq6piWPKzwDfQ0B5J5GBmnLXZsE2NIcbQc7MxIYEQi4U6X1ZPDHv+1aRp
      bKTRVsrGlaXunwOCmBCTxNJlacy4yuD5NWPHMtZqxUpCzyn+jUaMtirUmrRXDE9+PRGTq6OJ
      Y/u2UVAWTHpOJgke53H7ktKNWbwX+SAP/WQ6oQHgaK3n+Lsl/GUnLM3LJKFrT6U5aFwuafiM
      FH4deDcXR7atZvdVa1mfMsHzLo6TlBVsY/fh03S4DASGTWHWwqmcKWxi3kWB96StrY0rrrhC
      lZoL7flXk8YjA6GhId6vwgHXcOvKX3HrxdusxWRPnsxklWsnhhe/umltb2nx0KviornZNsir
      sIvP33mfMbNmofCZIEYovwr8+fLNrH1hJ9X1rTgAHM0cLd7E1prrWThbuevmk7K+r8n75GaW
      J1+pUc3FcOFnbXgHZypeYUfxIU40deAyBBI2ZS7mzDRmjO/upbFSnJ1DVUIW2V2PXr88spO/
      /Gc5x7pec/WMH3H3Py8kZgCTlUsbfmTxs8BrTwKvjs7OTg5U1/HRZ2cAmBk9kfnxkYwaNUrV
      80rg+yGB973Ozk6e2n6Qqk96rm2YMM3I+hW3qBp6v2rDi5HhQHVdn7ADVH1i5cCHdaqeWwIv
      NNfdjPFY9qlymS9I4IXmvLWi1W5hS+CF5sYEKD/vDPyuus9CJfBCc187lZ+K2x3qjluSwAtd
      kcALzc2Mnqhcdq1ymS9I4IXm5sdHkjCt79fWTNOMzL8hUtVzy4OnfsiDJ3V0dnZy4MO6C92Q
      M6+dyPwb5EnrkJPAjyzSpBG6IoEXuiKBF7oigRe6IoEXuiKBF7oigRe6IoEXuiKBF7oigRe6
      IoEXuiKBF7oigRe6IoEXuiKBF7oigRe6IoEXuiKBF7oigRe6IoEXuiKBF7oigRe6IoEXuuJ3
      y1Zai7PJ2dPQa+skFmdlk9p3MqsuLRwvLmDb/mM0dbgwBIZx3YJ7yUiNYQDLPIkRxO8C39Bg
      Y86jeSyPHegrXHxe9DR5X9xMRtaDTA8NwNF8lJKteTxdtIqnzFNRWLRejEB+FngrVqsRo+KV
      3JM6qqqCWfREKtND3VsCQqeTet8ijmysos48lalqVFV4NVSLmvlZ4BtoaI8kWXlJVg/GMnas
      Hbu912a7HfvYsYz1Ye3EwHha1Kz88EnePfKF6oua+VfgGxtptJWycWWp++eAICbEJLF0WRoz
      rlJqmBi5LdXIr7cUEfXQTy40aXZvOYgx9VcM6sNC+ER/i5olx09R7dx+PZmqq6OJY/u2UVAW
      THpOJgle7kBbP/ozzxQc5H/twJiruCVjLffMDOqxT1tbm+fzuNRdlUJv/vD3D3nf0jfwADfH
      GnnojhtUO7d/XeF7MQSGMT3159zfvJrd5Y0kpEzwsJeLU288yx/rEln5zItEBAXgaK3nvW1P
      81vrgzyeMvnCTaunWYLb2toIDg5W9X3oTUBAgNcyNX/fI6Af3kBoaIjyVdhWRuHbEdy7ch4R
      Qe5fdEBQBPNW3kvE24WU2TSsqgBkBZABa29poW+sXTQ325TncLfbsWPA0LuJbzBgwMPNrFDd
      bTdcw/igwD7bxwcFctvMa1Q9t18F/nz5Zta+sJPq+lYcAI5mjhZvYmvN9SycrdB1M2EWs68s
      Z+uWCk53uP9cXB2nqdiylfIrZzPLUytIqOqtD09yrrWjz/ZzrR289dFJVc/tZzetDs5UvMKO
      4kOcaOrAZQgkbMpczJlpzBjffQm3UpydQ1VCFtndj14dZ6h4ZQfFh05ceNI6ZVYqy3+ayETl
      5iQgK4Co4bmX36f8sOdgz51xDavvulm1c/tZ4LUngfe9oQy8XzVpxMggN61CV2TZymFMmjTq
      kGUrhykJ/Mji109ahf8aqtGScoXvh1zhfc/TaEmAhGlG1UdLyk2r0Fx/oyXVJIEXmutuxngs
      +1S5zBck8EJXJPBCc/LgSeiKPHgaxqSXRh3y4GmYksCPLPLgSQwJefA0TMkV3vfcD57Kqfqk
      5wxyCdMmsX7FXHnwJEaW0qoTfcIOUPVJAweqT6h6bgm80Nyb//25YlnJB8plviCBF5qzfdX3
      +6wDKfMFCbzQXEhw3xkLun3PS5kvSOCF5hbdGK1YtvAm5TJfkMALzSUnRJIwbVKf7aZpRpLj
      I1U9twReDJG+XY9a9I9L4IXmZDy80BUZDy+ERiTwQnMyHl7oioyHH8Zk8Jg6ZDz8MCWBH1mk
      SSN0RQIvdEUCL3RFAi90xe++02otziZnT+9vy0xicVY2qZ5WGbYWk52zh77frwFIIDMvkwSf
      11IMV34X+IYGG3MezWN57ABfYEwlOy+1z2aXZQdr901hmm+rJwZoqL7E7WeBt2K1GjFe9nrx
      7Rwq/Zjrf5COl8W7hUo8zR5cfvgk7x75QmYP7qmBhvZIIhVWqBywujfY07KAlNjei7cKLQzl
      aEn/usI3NtJoK2XjylL3zwFBTIhJYumyNGZcNdDwtlO1t4ppqU9xpWoVFd70N1oyOX6Kauf2
      r8BPSGF9XsqFH10dTRzbt42C3C2k52SSMJD2yZcH2VuXwLLMvn8gbW1tHl/y1VdfXWqNhQcO
      h8NrmZq/b/8KfC+GwDCmp/6c+5tXs7u8kYSU/pbVdnFkz5uMW7yBSA+lnoYQtLW1ERwc7Ivq
      ii43/uP3ed/St0kDcGPs91X9fftZG94TA6GhIbhcrv53/bKMNz6bRcqssepXSygaytGSfhX4
      9pYW+sbaRXOzbQADvFx8XloGtyYzVe5Vh9SoUaNYt3wOPzBFER4SRHhIED8wRfHL5XNU75b0
      q8CfL9/M2hd2Ul3figPA0czR4k1srbmehbP76bppP8Qbh6JJuVVuVYdaZ2cnG3a8w77KWs7a
      Wjlra2VfZS0bdryD2oN3/Wx4sIMzFa+wo/gQJ5o6cBkCCZsyF3NmGjPGd1+2rRRn51CVkEX2
      hUevLj4vWk9RyGrWLhxc4GV4sO+VVp1g885DHsseuXOWqr00fhZ47Ungfe+5l9+n/PBJj2Vz
      Z1zD6rtuVu3cftWkEeJySeCF5mZMVe4+nhndX9fy5ZHAiyGg3BPT6aXMFyTwQnOHP1ceWnDY
      y7ADX5DAC8156ydRuw9FAi80NyZA+clf4HfVHe0igReaqz97XrHsZOM5Vc8t/fD9kH74gTGb
      zUNy3qKiokHtL1d4oStyhe+HXOF9b3/lCX6/69uhBWM+24U9egkADy+dxYIE9YYWyBVeaE6W
      vBE6JEveCJ2QJW+Ernz4qedpsQA+PK5c5gsSeKG5xv9rvaQyX5DAi2FF3aFjEngxBCZ8L0ix
      LNxLmS9I4IXmvjzvef4fgObz7aqeWwIvNPfFWeWJlryNs/EFCbzQnMOpPIeQtzJfkMALzYWM
      C7ykMl+QwAvNxU4JVyybHqVc5gsSeKE5h8OpWPb118plviCBF5qTB09CV8632i+pzBck8EJz
      rR3K88N7K/MFCbzQnLfhAzK0QIw4E69UXqrFW5kvSOCF5r4fPl6xLGKCcpkvSOCF5r720i1p
      l25JMdJIt6TQFemWFLryzTfKX9f2VuYLEnihuZBgL4PHvJT5gt+t02otziZnT+8v+k5icVY2
      qX1XQvyW4wwVf95CUVU9rQ4DgWHXsSjjX0mZKktYam20Qbm3PcCg7jXY7wLf0GBjzqN5LI8d
      xItcpyjO3czxmfey7oXphAY4aK3/mIrm84AEXmtD+QUQPwu8FavViNHbldyD9kO7ORh5H8+k
      xuKeqDmAoIh4kiNUqKLol3wBZMAaaGiPJLKfJVl7svHeO6cwze4Ouxhq44PGXFKZL/jXFb6x
      kUZbKRtXlrp/DghiQkwSS5elMeMqpThbsVojCD1XTN5v3uLj+lYchkDCrlvAvRmpxKj7JFt4
      YPc2Ht6h7hXevwI/IYX1eSkXfnR1NHFs3zYKcreQnpNJgsfwttPeXsvhY/+EeeXTPBAWiMHR
      zNHdf2DzS1eQ80Qy3UsVt7V5/jb9V18ptznF4J1r/dpLmV3V37d/Bb4XQ2AY01N/zv3Nq9ld
      3khCitKSh9EsuGse0d0fAgGhTDcv57Ynd3CoMZnul3maFrutrY3g4GBV6q9b/azxpObv28/a
      8J4YCA0NweVS+iiczOTJddTV9d4eSWRkO+3qToMiPDB8R7lb0luZL/w/s19ajwBUi3wAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ExterQual' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ExterQualGrouping' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ExterQualKitchenQual' width='192'>
      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
      e8JvEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Exterior1st' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Exterior1st (2)' width='192'>
      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
      J+36O9IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Fintype' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Foundation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gr LIv Area Price' width='192'>
      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
      B/Doa/4/yzTUTJpcNXsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='LotShape' width='192'>
      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
      4J/EPvV2+f/l/DQkxfguHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MSZoning' width='192'>
      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
    </thumbnail>
    <thumbnail height='149' name='MasVnr' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodGrouping' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodGroupinga' width='192'>
      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
      f2l016nBPh5BAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='OverallQual' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='RoofStyle' width='188'>
      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
      NMJa2MC5T47iNXcuFs4JwkU5VeC/Ld7KM6/u41hNC50AnY2cyn2N7RU3s+B2y103XxSZvifz
      i9tYEXOtg0oulMLJ2vCdXCx5m125pZxvaMfg7k3AtLvQJScwe3xvL42e3NQ0yiNSSO259frN
      yX28+b/FnO55z/Wz72XZvy4g1IrpyKUN71qcLPCOJ4G3D6PRyEfHqjl+9iIAc6ZPYn54MG5u
      bnb9Xgn8MCTwtmc0Gtmw8zDlXwxcDjBihob1iXfaNfRO1YYXruGjY9UmYQco/0LPR59X2/W7
      XaBb0nWM1Wne0Xr/PrP7vrxITPg0u323BF4hzJ3mi09c4MjJv9n9NK8m0qRRiLE8zTvanOmT
      LO+70fI+W5CL1mGM5qJVp9PZuDTWycnJGZPvtZali1btDA3P2/lsJk0a4XBubm6sT7yTjz6v
      5viXPdcrN05i/i3SLTnmHNUtWVh+nq37Svtee519h47pSwBY88Bcu17IqYm04RVifngwETNM
      H+XSztAw/5ZgxxfIRUmTRiEGn+ZLz3bX7I44zauJ1PAK4ubmRkz4NNb+9DYAYsKnSdhtTAIv
      VEUCL1RFAi9URQIvVEUCL1RFAi9URQIvVEUCL1RFAi9URQIvVEUCL1RFAi9URQIvVEUCL1RF
      Ai9URQIvVEUCL1RFAi9URQIvVEUCL1RFAi9URQIvVEUCL1TF6SZi0uemkpZXO2jrZBanpBJv
      OnFXj2bO5Gazo+A0De0G3L0DuCl2JUnxoVixzJNwIU4X+NraJu54MpMVYda+w8C5nBfJ/Ntt
      JKU8zkx/TzobT5G/PZMXc1azQXcDFhatFy7IyZo0evR6DRqLNbk51ZSX+7HwkXhm+nsC4Ok/
      k/hHFuJXXk61PYp5lYxGI4Xl59n01lGge4JVmevWtpyshq+lti2YGMtLspoxjnHjOujoGLS5
      o4OOceMYZ8PSjcbgOdO9gK37SmUFEBtzrsDX1VHXVMgrqwq7X3v6MDE0iqUPJTD7OksNEw13
      x2v49bYcQp74SV+TZv+2w2jiX2BEJws7Gm4FEJku2zacen54Q3sDpw/uILvIj+VpyUQMcQXa
      cvyPvJR9mL93AF7XcWfSMzw8x2fAMa2trea/x2C64L2tvf7e5xytvBL4/vPD3xam4Yn7b7F7
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SaleCondition' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='SaleType' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQEklEQVR4nO3dyW8cZ3rH8W9VV+/sbpJNiqS4ajFFWZblsWJ77IE9M5ZncRIgg0FOQS45
      5v/INZdcBjkFmCQYJEEwMZDEgZMMxokTKbIta5dJiRLFpbn13s3eastBory1ZqgS6erX9XwA
      gYJEEg+K/NVbb9X7PqW5rusiREDpfhcghJ8kACLQJAAiIBw+Ov8B5z+68uhfyhuLEgARFA4r
      yysMDQ+zsXyHv//bv+be2jqaTIJFIDgWG1sF3n/vPRLZNFY5R3r8pARABITrsrZ8DzOUIJsM
      sV2qkc1mDz4AjuOg63KlJXrTgf9mygAjepmcmkWgSQBEoEkARKBJAESgSQBEoEkARKBJAESg
      SQBEoEkARKBJAESgSQBEoEkARKBJAESgSQBEoEkARKBJAESgSQBEoEkARKAZXr6oXimyur6B
      rUXRzTpEU2QisF2uMz0+hB0bpJLPc3RmYr/rFWJfed4Uv7m8SCSTIV9yCJkVTGBqJM3yUo6F
      rSY/+v6rGJqLbdtomrbPZQuxPzwFwHUd5udvc+LEEa5evgWGQdwAx7HoS8QxwwOYVodnZsZx
      bJtQKHQQtQvx1DwG4MGZ3TAM2q0mhMKEdZdm2yIRDeNoBo5tYoTDEgDR0w68L5AtARA9TO4C
      iUCTAIhAkwCIQJMAiECTAIhAkwCIQJMAiECTAIhAkwCIQJMAiECTAIhAkwCIQJMAiECTAIhA
      kwAoznVdLNuRt3F6JAFQ3MpWlT/983/hPz6+53cpSpIAiEDztCPM7uxwa2GJsYkp8rmlR10h
      tkp1Zna7QhS2mZkalx1hB8x1XWzHJaRr0nzAA08BWP70GiXXoD9h0HHS6FYVC5gaSbG8tMFi
      vsmbb7xCREe6Qoie5ikApdw9ts0odrOE2QFNh0gIwiEwDIOOkQHg2NSobIoXPc1zV4hKqUgi
      PYDVqoMRIxpyqe60yfTFcPQIVqdFNBaTAIieJl0hFNcxLX51aYkXZ8c4NJD0uxzlyF0gxd1Y
      yvOzdz7in88v+F2KkmQEUJxp2bx/5T7fOj5KNpPwuxzlSABEoMklkAg0CYAINAmA4vKVBn/2
      8//ik9vrfpeiJAmA4rbLDT65vcHCStHvUpQkk2DFua5LodpkIBUjpMv57ElJAESgySlDBJoE
      QASaBEAEmgRABJoEQASaBEAEmgRABJoEQASa4eWL7EaRywvrTM9MUt5YgWiadNRls1jnyPgQ
      VnSAanGbqYnD+13v1yKfz2Pbtt9l7Ellp81fvXuZH750jGenh/wuZ89SqRSJhP/7FzwFoNVo
      oulgNku40Sy6VaNkwbHJAVaX17lbuMvrr72E4zg4jnpdy27evEmr1fK7jD2p7LRZvvUx12M7
      mOWs3+Xs2ezsLBMTE36X4W0pRKNWwXRheXkJjRhgYejQFzewbZdWKEUkEmZm/JBsij9gruvy
      4aXL/M63XkDXpf3Mk/I0AsSTSYpr68ydPE2zWoJIkkTYpVBpMNbfh6NHMduN/a5VPEY8YiCt
      l7zxNAnWdIOJyUnCIZ30QJZ0MoYRiTMynCUUjhIOQSKRQH4mB291u8pf/OP/8atLS36XoiS5
      C6Q4x3Gx7AcdosWTk+XQinNdlytXr3Hm+dPSgtIDGQEUp2maNMZ9ChIAxTXbJudvrLKWr/pd
      ipIkAIqbXynw7oXb/PuHd/0uRUkyB1CcZTv88t/e5wfffZX+vpjf5ShHRgDF7bQ63FktslGs
      +12KkiQAilverHDx1hoXb635XYqSJACKsx0XlwfPA8STe2wAzE4L07KVW8gWNCFNQ9OQdUAe
      dQ2AY3X4p5//jEuf3GS9rsay4KBqtE1Ao9Ey/S5FSV0DoOk6mewQ1z9dIBWVq6RedvbEYf74
      B6f5o7dO+12Kkrr+dru2RXbmDG+/fJRKS9aY9LLV7Sr/euE252+s+F2KkroGQDci2I0CV5Yq
      jPbJPfxetrpVpVBtSnNcj7ruB7hy5TJbGxvsWDrVlsNgQkLQq05ODzGQivPSnJrbT/3WdQQ4
      /dxzOOEkb547R1rmAD0tV6hRrre4vSojgBddf7urxS2KxSK3bt6kaclt0F52amaYP3n7BX76
      3Tm/S1FS10ugT67e5OTUIabOvkEq2u0zXDbvL+CkJ2lu33/UFWKjUOfIxBB2dIBqYYuJ8bGD
      rV6wtFHhH359Ez01wu+/Out3OcrpGgCnU+dOvsLCxt/xez/5w6/MAcxmjWq1ik2RkDGA3qlR
      6MDR8TSrK2vcL9zl26+8qGxXCJUYOli2TTikYVmW3+Uop2sAzv3uT9mplSGcINFlDlAqlbGs
      DoVilbRmo0UiJMIuq+sFYrEIExODFEtl+saG0F1XVoMeoLV8nWbbYnGtzI9e9tTjINC6jwBm
      m3f+5i+ZfuEtJk4+z3R/+Av/f+jwFIfGJnn8eV2D3/C/Yv/Eo2F0TSMRC//2TxZf0f1JsBFm
      5pmTLOe2GE095qyiPdiG1/3Pg616sjrl4Lnuw8VwcpnpSdcAXHj/PVYKTXSryk5bngT3stFs
      HzOj/cxNqdMWsZd0DcC3X3+LJDvUZRlEz0slokyNpBkd7PO7FCV1Xwvk2gyPjOB22rRtGVp7
      2cVba7x/+T6//O9P/S5FSV0DcGv+DpMTUxixKImIXMn3suTDyW9SJsGedJ3hbizf5sOSzffO
      HKHWdsl0fRgmekEkbDz8KLeavegagDd//AcAOI6DLm8f72lHxvp5cXaMV06O+12KkqQtyjfA
      tWvXOH1aNsR4Iad3xe20Ovz6kyWWNsp+l6IkCYDiri5u8Z+X7vHuhdt+l6IkCYDiQg+7QYRk
      ruaJHDXFnZwe4rXnJvn+izN+l6IkWT7YxcLCAqapRpuRyk6b23fucuXqIJ2KOsshxsbGGBwc
      9LsMCUA3iURCmdekNi2N733nZTLpJH196iyHCId748GdBKALXdeV2cQTCoXQdJ1QKCTPbDyQ
      I6Y4++G7wWxHFi56IQFQnBHSv/BRPBk5aopLxMKEDZ1UQhZseeFpDtDaqXBveY1IIk27kodo
      inTUJV/eYepwFieWpVzIc/zI5H7XK76kY9qYlkOzrcZdq17jKQDRRBrdXsTuaITThwmZFXZM
      OHFslOW7Oea37vP2udeU7Qrhui6OItfUsahBfzJKfzKqTM3wYKFlL3Sx8BSAZq1MONnPTqOJ
      VV1FC0dJhl0W7+YYyCQ5MzzF4tIqJ45OKtkVQtM0Ze6otJomlZ026UaH/lTc73L2TNd1DMP/
      m5CeKoj3ZTgciROORHFtC3QdXQPTcogYIVxNx3X697tW0YVl2biAaanx3KLXeAqApuvEYg/f
      SKh/9kAjGnlwptcAFDvri2BSY5wXj2U9fDfY7vMA8WQkAIp7tGNbk73bXkgAFGcYD36EYXkQ
      5okcNcXtvh7VltekeiIBUNxuAKQ1ojcSAMUNpuMMpGIczqqzFLqX+P8kQjyVyk6LUq1FPGLI
      eiAPZARQnGk5X/gonowEQHG7m+J1XW6DeiGXQF0Ui0XMTsfvMvZku9wgv51HtxoMxtQZBWKx
      GKlUyu8yJADdVMpl2u2232XsSb3WpFQqkQhZlErqDOjDw8N+lwDIJZDyOg8XwXVkMZwnEgDF
      7d7+l8cA3kgAVOd+5S/iCUgAFLe7FsiQ5eeeSABEoHm6C/Tb9/g+eE+wJkt0D9zuz0K1fde9
      wlMA2o0q95ZzuJpOq1aFaIJ0xKW202J0KIMZzdJsNDhxdGK/6xVfsrsIThbDeeOxK0QfYc2h
      fyhNKTZIyCxjAnOzww+7QmxJV4ivyaND66JMzfCgk52yXSGKq/cotBxSxGmX70O0j3TUZf5O
      jsmxLAPTJ7h7b5nZY9PSFeJr4oJSNYdU7gqRnTxO9mHPq5Ghz1pcT33ucw71Tz9NXb5qNBo0
      m02/y9gbu4PZbqK7Yer1ut/V7FmvtJ/3P4I96PkzZ5S5nPjf6yvc+OAu0ew0P3n5Rb/L2bN0
      Ou13CYAEoKuRkRG/S9izTK6Ja8SJpwYYGxvzuxzlqHPRKLra7Qodkk3xnshRU5y1+34A6Qvk
      iQRAcfJ+gKcjR01xrjwIeyoSAMV9thxaAuCFBEBxiWgYDUjEIn6XoiQJgOLSySiappFJSksU
      LyQAigvpGmgyCfZKjpriGm0Lx3GpN9XoYtFrJAAi0CQAipubynLu7BF++NIxv0tRkgRAcWv5
      GhdurHFpYd3vUpQkAVBcMhahvy9GNq3OGyJ7iQRAcW3TotE2qckk2BMJgOJy+RqlWpO7ayW/
      S1GS7Afo4p133qHRaPhdxp5UdtqEWtvk71zkF7+443c5e3b27FlmZ2f9LgPN9bCIxGzV+eDi
      Fb77+itcvXQZIknSUZdKvcnh4X7MaJZGvcbs0Uls21ZuT7BKXNdleavK2GAfkbAc5yflKQAA
      8/Of8syRURZz5qOuEFOj6YddIRq8fe41QrjYti39gUTP8hSAVr3C+Q8/5pmTpyjmVh91hShV
      G0yMDGDFhqiUipw4Po0jI4DoYZ5HgL2SSyDRy+QukAg0CYAINAmACDQJgAg0CYAINAmACDQJ
      gAg0CYAINAmACDQJgAg0CYAINAmACDQJgAg0CYAINAmACLR92xOcu3+X7XKd6fEh7FiWSn6b
      ozPyomzR2/ZtBNjp2MweGWEzt8X5Cx8zMTm+X99aiAOzbzvCFm7dwHVtkvEonfAAlmXyzMy4
      bIkUPW3fAuDYJo2WSSIWwdUMHNvECIclAKKnHeieYMdxsG0bXZe59kFyXVc6b3h0oI2xdF3H
      dV0ZAUTPOvCuEMJ99CK7x52lP/8j+PLn7J7dv3iW/+x7Ps5vGhE+/z1BI8iDh7RGPGClzRzL
      WyXGJ6Zw2jUSmWHcdo16x2X00BAasL68SLHeYWrmKPXSNtnRw+yUtnGMBPnNHHNzc8zPzzM3
      NwfA1tp9NssN0jGDcP8IC1ev8MKpaXIbRSp2jFQ8zKm545Tzm1h6jL6oTqFUY3x8lLWVZXY6
      Dsenx7l44X849fKbpCIO25sbEArjECKbirJVqnMom6FaaxKL6tSbDoeGB/imZUUCcMAK5SrP
      PnsKs7ZNrqOzfW8R1zYxIjFGh4dAg0rD5NSpZymsLuJEB1m8vYhttYlEu7/4rlhtcurZk2hu
      h2uXrzM6NsSdtTozQ3EGB+ao5RZwgUJ+m/ubFcaH+xlI6Fy51WB6cozW1iahcJTpicMAuJbJ
      drlOq14jnU5R3DYZTMVZmM9h9E9Qmf+UHVNj6I3vEPqGDRcyOz1go4ey3LhxnWrTpl7cIhSJ
      kekfIJmIUyoVcFyX4f4k16/fwNKj5HOrxJJ9DAwMkojHsTtN7txbJhyJUC4WsFwYzWa4fuMm
      pbqNZbaZnJrGsk3CRpjlxVto4Tga0Gi2iMdjJFNpUqk+kokYuZUV0A3MdoPVtQ1y6+ugafRn
      MgwMDpCIx0lEDTYLVTLpDGOHhsj0Zxg7fPgb+csicwAf1Ws1kn2pPV+D12o1UqnUwRYVMBIA
      EWjfxFFNiD2TAIhA+3/h1V4vtWNkGwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 30' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 31' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SubClass' width='192'>
      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
    </thumbnail>
    <thumbnail height='170' name='UnderDaHouse' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VnrType' width='192'>
      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
      0cSWSf3/+2bUjzVEIyQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='YearBuilt' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
