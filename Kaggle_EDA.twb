<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SavingAnalyticObjects />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data' inline='true' name='federated.055r1m20ncqq4z13lx9eq0aa278b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1gk7rvx0ffecon15kfsli1d46qc4'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1gk7rvx0ffecon15kfsli1d46qc4' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coord]' derivation='Sum' name='[sum:coord:qk]' pivot='key' type='quantitative' />
      <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.424023' measure-ordering='alphabetic' measure-percentage='0.575977' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{99145fdf-f0b8-4ebf-8bad-2276ed643301}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[attr:name:nk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:coord:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields>
          <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[AdhocCluster:1]' />
        </result-fields>
      </analytic-model>
    </datasource>
    <datasource caption='data (2)' inline='true' name='federated.1e28wd1067nyw519jd0ag0b6qhc1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0p0jbix0mchrew161fq3708ib2la'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0p0jbix0mchrew161fq3708ib2la' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.425562' measure-ordering='alphabetic' measure-percentage='0.574438' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data_45' inline='true' name='federated.16u29xf1clbpci18rk0yf131z7ft' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_45' name='textscan.18r6tei0pgmseb1dcukeu11o8qem'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data_56.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.18r6tei0pgmseb1dcukeu11o8qem' name='data_56.csv' table='[data_56#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/jjonus/Documents/My Tableau Repository/Datasources/data_45.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/12/2018 12:45:07 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='80' timestamp-start='2018-08-12 00:45:07.340' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>0</ordinal>
              <family>data_56.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>x</remote-name>
              <remote-type>5</remote-type>
              <local-name>[x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>x</remote-alias>
              <ordinal>1</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>y</remote-alias>
              <ordinal>2</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coord</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coord]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coord</remote-alias>
              <ordinal>3</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cos2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cos2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cos2</remote-alias>
              <ordinal>4</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>contrib</remote-name>
              <remote-type>5</remote-type>
              <local-name>[contrib]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>contrib</remote-alias>
              <ordinal>5</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.425562' measure-ordering='alphabetic' measure-percentage='0.574438' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='train' inline='true' name='federated.0je71i81w9fhsx19mepx11n8r32i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.1bo3rqi0xsc0ee1gb4xo211bmb2z'>
            <connection class='textscan' directory='C:/Users/jjonus/Google Drive/Kaggle/GitAdvancedHousePrices' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1bo3rqi0xsc0ee1gb4xo211bmb2z' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Id' ordinal='0' />
            <column datatype='string' name='MSSubClass' ordinal='1' />
            <column datatype='string' name='MSZoning' ordinal='2' />
            <column datatype='string' name='LotFrontage' ordinal='3' />
            <column datatype='integer' name='LotArea' ordinal='4' />
            <column datatype='string' name='Street' ordinal='5' />
            <column datatype='string' name='Alley' ordinal='6' />
            <column datatype='string' name='LotShape' ordinal='7' />
            <column datatype='string' name='LandContour' ordinal='8' />
            <column datatype='string' name='Utilities' ordinal='9' />
            <column datatype='string' name='LotConfig' ordinal='10' />
            <column datatype='string' name='LandSlope' ordinal='11' />
            <column datatype='string' name='Neighborhood' ordinal='12' />
            <column datatype='string' name='Condition1' ordinal='13' />
            <column datatype='string' name='Condition2' ordinal='14' />
            <column datatype='string' name='BldgType' ordinal='15' />
            <column datatype='string' name='HouseStyle' ordinal='16' />
            <column datatype='string' name='OverallQual' ordinal='17' />
            <column datatype='integer' name='OverallCond' ordinal='18' />
            <column datatype='integer' name='YearBuilt' ordinal='19' />
            <column datatype='integer' name='YearRemodAdd' ordinal='20' />
            <column datatype='string' name='RoofStyle' ordinal='21' />
            <column datatype='string' name='RoofMatl' ordinal='22' />
            <column datatype='string' name='Exterior1st' ordinal='23' />
            <column datatype='string' name='Exterior2nd' ordinal='24' />
            <column datatype='string' name='MasVnrType' ordinal='25' />
            <column datatype='integer' name='MasVnrArea' ordinal='26' />
            <column datatype='string' name='ExterQual' ordinal='27' />
            <column datatype='string' name='ExterCond' ordinal='28' />
            <column datatype='string' name='Foundation' ordinal='29' />
            <column datatype='string' name='BsmtQual' ordinal='30' />
            <column datatype='string' name='BsmtCond' ordinal='31' />
            <column datatype='string' name='BsmtExposure' ordinal='32' />
            <column datatype='string' name='BsmtFinType1' ordinal='33' />
            <column datatype='integer' name='BsmtFinSF1' ordinal='34' />
            <column datatype='string' name='BsmtFinType2' ordinal='35' />
            <column datatype='integer' name='BsmtFinSF2' ordinal='36' />
            <column datatype='integer' name='BsmtUnfSF' ordinal='37' />
            <column datatype='integer' name='TotalBsmtSF' ordinal='38' />
            <column datatype='string' name='Heating' ordinal='39' />
            <column datatype='string' name='HeatingQC' ordinal='40' />
            <column datatype='string' name='CentralAir' ordinal='41' />
            <column datatype='string' name='Electrical' ordinal='42' />
            <column datatype='integer' name='1stFlrSF' ordinal='43' />
            <column datatype='integer' name='2ndFlrSF' ordinal='44' />
            <column datatype='integer' name='LowQualFinSF' ordinal='45' />
            <column datatype='integer' name='GrLivArea' ordinal='46' />
            <column datatype='integer' name='BsmtFullBath' ordinal='47' />
            <column datatype='integer' name='BsmtHalfBath' ordinal='48' />
            <column datatype='integer' name='FullBath' ordinal='49' />
            <column datatype='integer' name='HalfBath' ordinal='50' />
            <column datatype='integer' name='BedroomAbvGr' ordinal='51' />
            <column datatype='integer' name='KitchenAbvGr' ordinal='52' />
            <column datatype='string' name='KitchenQual' ordinal='53' />
            <column datatype='integer' name='TotRmsAbvGrd' ordinal='54' />
            <column datatype='string' name='Functional' ordinal='55' />
            <column datatype='integer' name='Fireplaces' ordinal='56' />
            <column datatype='string' name='FireplaceQu' ordinal='57' />
            <column datatype='string' name='GarageType' ordinal='58' />
            <column datatype='string' name='GarageYrBlt' ordinal='59' />
            <column datatype='string' name='GarageFinish' ordinal='60' />
            <column datatype='integer' name='GarageCars' ordinal='61' />
            <column datatype='integer' name='GarageArea' ordinal='62' />
            <column datatype='string' name='GarageQual' ordinal='63' />
            <column datatype='string' name='GarageCond' ordinal='64' />
            <column datatype='string' name='PavedDrive' ordinal='65' />
            <column datatype='integer' name='WoodDeckSF' ordinal='66' />
            <column datatype='integer' name='OpenPorchSF' ordinal='67' />
            <column datatype='integer' name='EnclosedPorch' ordinal='68' />
            <column datatype='integer' name='3SsnPorch' ordinal='69' />
            <column datatype='integer' name='ScreenPorch' ordinal='70' />
            <column datatype='integer' name='PoolArea' ordinal='71' />
            <column datatype='string' name='PoolQC' ordinal='72' />
            <column datatype='string' name='Fence' ordinal='73' />
            <column datatype='string' name='MiscFeature' ordinal='74' />
            <column datatype='integer' name='MiscVal' ordinal='75' />
            <column datatype='integer' name='MoSold' ordinal='76' />
            <column datatype='integer' name='YrSold' ordinal='77' />
            <column datatype='string' name='SaleType' ordinal='78' />
            <column datatype='string' name='SaleCondition' ordinal='79' />
            <column datatype='integer' name='SalePrice' ordinal='80' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSSubClass</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MSSubClass]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MSSubClass</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSZoning</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MSZoning]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MSZoning</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotFrontage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotFrontage]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotFrontage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LotArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotArea</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Street</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alley</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Alley]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Alley</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotShape</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotShape]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotShape</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandContour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LandContour]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LandContour</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Utilities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Utilities]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Utilities</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotConfig</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotConfig]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotConfig</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandSlope</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LandSlope]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LandSlope</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighborhood]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Neighborhood</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Condition1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Condition2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BldgType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BldgType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BldgType</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HouseStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HouseStyle]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HouseStyle</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OverallQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OverallQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OverallQual</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OverallCond</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OverallCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OverallCond</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearBuilt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearBuilt]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YearBuilt</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearRemodAdd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearRemodAdd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YearRemodAdd</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoofStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoofStyle]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>RoofStyle</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoofMatl</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoofMatl]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>RoofMatl</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exterior1st</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exterior1st]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Exterior1st</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exterior2nd</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exterior2nd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Exterior2nd</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MasVnrType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MasVnrType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MasVnrType</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MasVnrArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MasVnrArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MasVnrArea</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExterQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExterQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ExterQual</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExterCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExterCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ExterCond</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foundation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foundation]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Foundation</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtQual</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtCond</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtExposure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtExposure]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtExposure</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinType1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtFinType1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinType1</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinSF1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFinSF1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinSF1</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinType2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtFinType2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinType2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinSF2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFinSF2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinSF2</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtUnfSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtUnfSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtUnfSF</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalBsmtSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalBsmtSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>TotalBsmtSF</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Heating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Heating]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Heating</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HeatingQC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HeatingQC]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HeatingQC</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CentralAir</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CentralAir]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>CentralAir</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electrical</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electrical]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Electrical</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1stFlrSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1stFlrSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>1stFlrSF</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2ndFlrSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2ndFlrSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>2ndFlrSF</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowQualFinSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LowQualFinSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LowQualFinSF</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrLivArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GrLivArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GrLivArea</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFullBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFullBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFullBath</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtHalfBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtHalfBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtHalfBath</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FullBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FullBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>FullBath</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HalfBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HalfBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HalfBath</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BedroomAbvGr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BedroomAbvGr]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BedroomAbvGr</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KitchenAbvGr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KitchenAbvGr]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>KitchenAbvGr</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KitchenQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[KitchenQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>KitchenQual</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotRmsAbvGrd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotRmsAbvGrd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>TotRmsAbvGrd</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Functional</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Functional]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Functional</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fireplaces</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fireplaces]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fireplaces</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FireplaceQu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FireplaceQu]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>FireplaceQu</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageType</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageYrBlt</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageYrBlt]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageYrBlt</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageFinish</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageFinish]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageFinish</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageCars</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GarageCars]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageCars</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GarageArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageArea</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageQual</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageCond</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PavedDrive</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PavedDrive]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PavedDrive</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WoodDeckSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WoodDeckSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>WoodDeckSF</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenPorchSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OpenPorchSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OpenPorchSF</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EnclosedPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EnclosedPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>EnclosedPorch</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3SsnPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3SsnPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>3SsnPorch</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ScreenPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ScreenPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ScreenPorch</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PoolArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PoolArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PoolArea</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PoolQC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PoolQC]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PoolQC</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Fence]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fence</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiscFeature</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MiscFeature]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MiscFeature</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiscVal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MiscVal]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MiscVal</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MoSold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MoSold]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MoSold</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YrSold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YrSold]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YrSold</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SaleType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SaleType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SaleType</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SaleCondition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SaleCondition]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SaleCondition</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalePrice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SalePrice]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SalePrice</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Bedroom Abv Gr' datatype='integer' name='[BedroomAbvGr]' role='measure' type='quantitative' />
      <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
      <column caption='Bsmt Cond' datatype='string' name='[BsmtCond]' role='dimension' type='nominal' />
      <column caption='Bsmt Exposure' datatype='string' name='[BsmtExposure]' role='dimension' type='nominal' />
      <column caption='Bsmt Full Bath' datatype='integer' name='[BsmtFullBath]' role='measure' type='quantitative' />
      <column caption='Bsmt Half Bath' datatype='integer' name='[BsmtHalfBath]' role='measure' type='quantitative' />
      <column caption='Bsmt Qual' datatype='string' name='[BsmtQual]' role='dimension' type='nominal' />
      <column caption='Bsmt Unf SF' datatype='integer' name='[BsmtUnfSF]' role='measure' type='quantitative' />
      <column caption='Ratio of live to total' datatype='real' name='[Calculation_401664822191943686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[GrLivArea]/[LotArea]' />
      </column>
      <column caption='Qual_Garage_Number' datatype='integer' name='[Calculation_401664822194020361]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GarageQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [GarageQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [GarageQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [GarageQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Average Qual' datatype='real' name='[Calculation_401664822195130379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Qual_Garage_Number (copy)] + [Qual_Bsmt_Number (copy 2)] + [Calculation_401664822194020361] + [Qual_Bsmt_Number (copy)])/4' />
      </column>
      <column caption='Central Air' datatype='string' name='[CentralAir]' role='dimension' type='nominal' />
      <column caption='Enclosed Porch' datatype='integer' name='[EnclosedPorch]' role='measure' type='quantitative' />
      <column datatype='string' name='[Exter Qual (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[ExterQual]' new-bin='true'>
          <bin default-name='true' value='&quot;Fa &amp; TA&quot;'>
            <value>&quot;Fa&quot;</value>
            <value>&quot;TA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Exter Cond' datatype='string' name='[ExterCond]' role='dimension' type='nominal' />
      <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
      <column caption='Fireplace Qu' datatype='string' name='[FireplaceQu]' role='dimension' type='nominal' />
      <column caption='Full Bath' datatype='integer' name='[FullBath]' role='measure' type='quantitative' />
      <column caption='Garage Area' datatype='integer' name='[GarageArea]' role='measure' type='quantitative' />
      <column caption='Garage Cars' datatype='integer' name='[GarageCars]' role='measure' type='quantitative' />
      <column caption='Garage Cond' datatype='string' name='[GarageCond]' role='dimension' type='nominal' />
      <column caption='Garage Finish' datatype='string' name='[GarageFinish]' role='dimension' type='nominal' />
      <column caption='Garage Qual' datatype='string' name='[GarageQual]' role='dimension' type='nominal' />
      <column caption='Garage Type' datatype='string' name='[GarageType]' role='dimension' type='nominal' />
      <column caption='Garage Yr Blt' datatype='string' name='[GarageYrBlt]' role='dimension' type='nominal' />
      <column caption='Gr Liv Area' datatype='integer' name='[GrLivArea]' role='measure' type='quantitative' />
      <column caption='Half Bath' datatype='integer' name='[HalfBath]' role='measure' type='quantitative' />
      <column caption='Heating QC' datatype='string' name='[HeatingQC]' role='dimension' type='nominal' />
      <column datatype='string' name='[House Style (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[HouseStyle]' new-bin='true'>
          <bin default-name='true' value='&quot;2.5Fin &amp; 2Story&quot;'>
            <value>&quot;2.5Fin&quot;</value>
            <value>&quot;2Story&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='House Style' datatype='string' name='[HouseStyle]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
      <column caption='Kitchen Abv Gr' datatype='integer' name='[KitchenAbvGr]' role='measure' type='quantitative' />
      <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
      <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
      <column caption='Land Slope' datatype='string' name='[LandSlope]' role='dimension' type='nominal' />
      <column caption='Lot Area' datatype='integer' name='[LotArea]' role='measure' type='quantitative' />
      <column caption='Lot Config' datatype='string' name='[LotConfig]' role='dimension' type='nominal' />
      <column caption='Lot Frontage' datatype='string' name='[LotFrontage]' role='dimension' type='nominal' />
      <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
      <column caption='Low Qual Fin SF' datatype='integer' name='[LowQualFinSF]' role='measure' type='quantitative' />
      <column datatype='string' name='[MS Sub Class (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MSSubClass]' new-bin='true'>
          <bin default-name='true' value='&quot;160, 190, 40 and 4 more&quot;'>
            <value>&quot;160&quot;</value>
            <value>&quot;190&quot;</value>
            <value>&quot;40&quot;</value>
            <value>&quot;50&quot;</value>
            <value>&quot;70&quot;</value>
            <value>&quot;85&quot;</value>
            <value>&quot;90&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;180, 30, 45&quot;'>
            <value>&quot;180&quot;</value>
            <value>&quot;30&quot;</value>
            <value>&quot;45&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;20, 75, 80&quot;'>
            <value>&quot;20&quot;</value>
            <value>&quot;75&quot;</value>
            <value>&quot;80&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='MS Sub Class' datatype='string' name='[MSSubClass]' role='dimension' type='nominal' />
      <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
      <column caption='Mas Vnr Area' datatype='integer' name='[MasVnrArea]' role='measure' type='quantitative' />
      <column caption='Mas Vnr Type' datatype='string' name='[MasVnrType]' role='dimension' type='nominal' />
      <column caption='Misc Feature' datatype='string' name='[MiscFeature]' role='dimension' type='nominal' />
      <column caption='Misc Val' datatype='integer' name='[MiscVal]' role='measure' type='quantitative' />
      <column datatype='string' name='[Mo Sold (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MoSold]' new-bin='true'>
          <bin default-name='false' value='&quot;Fall&quot;'>
            <value>9</value>
            <value>10</value>
          </bin>
          <bin default-name='false' value='&quot;Spring&quot;'>
            <value>3</value>
            <value>4</value>
            <value>5</value>
          </bin>
          <bin default-name='false' value='&quot;Summer&quot;'>
            <value>6</value>
            <value>7</value>
            <value>8</value>
          </bin>
          <bin default-name='false' value='&quot;Winter&quot;'>
            <value>1</value>
            <value>2</value>
            <value>11</value>
            <value>12</value>
          </bin>
        </calculation>
      </column>
      <column caption='Mo Sold' datatype='integer' name='[MoSold]' role='measure' type='quantitative' />
      <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
          <bin default-name='false' value='&quot;BEO&quot;'>
            <value>&quot;BrkSide&quot;</value>
            <value>&quot;Edwards&quot;</value>
            <value>&quot;OldTown&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BlueSwis&quot;'>
            <value>&quot;Blueste&quot;</value>
            <value>&quot;Mitchel&quot;</value>
            <value>&quot;NAmes&quot;</value>
            <value>&quot;NPkVill&quot;</value>
            <value>&quot;Sawyer&quot;</value>
            <value>&quot;SWISU&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BNS&quot;'>
            <value>&quot;Blmngtn&quot;</value>
            <value>&quot;Gilbert&quot;</value>
            <value>&quot;NWAmes&quot;</value>
            <value>&quot;SawyerW&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BrMeadow&quot;'>
            <value>&quot;BrDale&quot;</value>
            <value>&quot;IDOTRR&quot;</value>
            <value>&quot;MeadowV&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;C3&quot;'>
            <value>&quot;ClearCr&quot;</value>
            <value>&quot;CollgCr&quot;</value>
            <value>&quot;Crawfor&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;NNS&quot;'>
            <value>&quot;NoRidge&quot;</value>
            <value>&quot;NridgHt&quot;</value>
            <value>&quot;StoneBr&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;STV&quot;'>
            <value>&quot;Somerst&quot;</value>
            <value>&quot;Timber&quot;</value>
            <value>&quot;Veenker&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Porch SF' datatype='integer' name='[OpenPorchSF]' role='measure' type='quantitative' />
      <column caption='Overall Cond' datatype='integer' name='[OverallCond]' role='measure' type='quantitative' />
      <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
      <column caption='Paved Drive' datatype='string' name='[PavedDrive]' role='dimension' type='nominal' />
      <column caption='Pool Area' datatype='integer' name='[PoolArea]' role='measure' type='quantitative' />
      <column caption='Pool QC' datatype='string' name='[PoolQC]' role='dimension' type='nominal' />
      <column caption='Qual_Exter_Number' datatype='integer' name='[Qual_Bsmt_Number (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [ExterQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [ExterQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [ExterQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [ExterQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Qual_Kitchen_Number' datatype='integer' name='[Qual_Bsmt_Number (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [KitchenQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [KitchenQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [KitchenQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [KitchenQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Qual_Bsmt_Number' datatype='integer' name='[Qual_Garage_Number (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [BsmtQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [BsmtQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [BsmtQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [BsmtQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Roof Matl' datatype='string' name='[RoofMatl]' role='dimension' type='nominal' />
      <column caption='Roof Style' datatype='string' name='[RoofStyle]' role='dimension' type='nominal' />
      <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
      <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
      <column caption='Sale Type' datatype='string' name='[SaleType]' role='dimension' type='nominal' />
      <column caption='Screen Porch' datatype='integer' name='[ScreenPorch]' role='measure' type='quantitative' />
      <column caption='Tot Rms Abv Grd' datatype='integer' name='[TotRmsAbvGrd]' role='measure' type='quantitative' />
      <column caption='Total Bsmt SF' datatype='integer' name='[TotalBsmtSF]' role='measure' type='quantitative' />
      <column caption='Wood Deck SF' datatype='integer' name='[WoodDeckSF]' role='measure' type='quantitative' />
      <column caption='Year Built' datatype='integer' name='[YearBuilt]' role='measure' type='quantitative' />
      <column caption='Year Remod Add' datatype='integer' name='[YearRemodAdd]' role='dimension' type='quantitative' />
      <column caption='Yr Sold' datatype='integer' name='[YrSold]' role='dimension' type='quantitative' />
      <group name='[Bsmt Qual, Garage Qual, Heating QC and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[GarageQual]' />
          <groupfilter function='level-members' level='[HeatingQC]' />
          <groupfilter function='level-members' level='[ExterQual]' />
          <groupfilter function='level-members' level='[KitchenQual]' />
        </groupfilter>
      </group>
      <group name='[Garage Qual, Bsmt Qual, Exter Qual and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GarageQual]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[ExterQual]' />
          <groupfilter function='level-members' level='[KitchenQual]' />
        </groupfilter>
      </group>
      <group name='[Kitchen Qual &amp; Exter Qual (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[KitchenQual]' />
          <groupfilter function='level-members' level='[ExterQual]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.53869' measure-ordering='alphabetic' measure-percentage='0.46131' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Neighborhood (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BEO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C3&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;BrMeadow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BNS&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;NNS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BlueSwis&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1/2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.055r1m20ncqq4z13lx9eq0aa278b' />
          </datasources>
          <datasource-dependencies datasource='federated.055r1m20ncqq4z13lx9eq0aa278b'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{99145fdf-f0b8-4ebf-8bad-2276ed643301}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
            <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coord]' derivation='Sum' name='[sum:coord:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' field-type='quantitative' max='0.47714843519516992' min='-0.11356780768797037' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' field-type='quantitative' max='0.3873070829113201' min='-0.16410622865981084' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' />
              <text column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]' />
              <lod column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]' />
              <lod column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:coord:qk]' />
              <color column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]</rows>
        <cols>[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='3/4'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (2)' name='federated.1e28wd1067nyw519jd0ag0b6qhc1' />
          </datasources>
          <datasource-dependencies datasource='federated.1e28wd1067nyw519jd0ag0b6qhc1'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1e28wd1067nyw519jd0ag0b6qhc1].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[sum:y:qk]</rows>
        <cols>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='5/6'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_45' name='federated.16u29xf1clbpci18rk0yf131z7ft' />
          </datasources>
          <datasource-dependencies datasource='federated.16u29xf1clbpci18rk0yf131z7ft'>
            <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:x:qk]' field-type='quantitative' max='0.41871570542622416' min='0.021284078646205195' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:y:qk]' field-type='quantitative' max='0.35576301556811546' min='0.04486974733608428' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' />
              <size column='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' />
              <text column='[federated.16u29xf1clbpci18rk0yf131z7ft].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:y:qk]</rows>
        <cols>[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='BldgType'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BldgType]' derivation='None' name='[none:BldgType:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]' direction='ASC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column caption='Garage Qual' datatype='string' name='[GarageQual]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GarageQual]' derivation='None' name='[none:GarageQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]' direction='ASC'>
            <dictionary>
              <bucket>(&quot;Gd&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(&quot;Gd&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Gd&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Fa&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Fa&quot;,&quot;Fa&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Fa&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(%all%,%all%)</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]'>
            <groupfilter from='&quot;Ex&quot;' function='range' level='[none:GarageQual:nk]' to='&quot;TA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]</column>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk] / [federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)])</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQualGrouping'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Exter Qual (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[ExterQual]' new-bin='true'>
                <bin default-name='true' value='&quot;Fa &amp; TA&quot;'>
                  <value>&quot;Fa&quot;</value>
                  <value>&quot;TA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[ExterQual]' derivation='None' name='[none:ExterQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Ex&quot;</bucket>
              <bucket>&quot;Gd&quot;</bucket>
              <bucket>&quot;Fa &amp; TA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Gr LIv Area Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664822185672708]' role='measure' type='quantitative' user:unnamed='Gr LIv Area Price'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Fence]' role='dimension' type='nominal' />
            <column datatype='string' name='[Functional]' role='dimension' type='nominal' />
            <column caption='Heating QC' datatype='string' name='[HeatingQC]' role='dimension' type='nominal' />
            <column datatype='string' name='[House Style (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[HouseStyle]' new-bin='true'>
                <bin default-name='true' value='&quot;2.5Fin &amp; 2Story&quot;'>
                  <value>&quot;2.5Fin&quot;</value>
                  <value>&quot;2Story&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='House Style' datatype='string' name='[HouseStyle]' role='dimension' type='nominal' />
            <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
            <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
            <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
            <column caption='Misc Feature' datatype='string' name='[MiscFeature]' role='dimension' type='nominal' />
            <column caption='Paved Drive' datatype='string' name='[PavedDrive]' role='dimension' type='nominal' />
            <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column datatype='string' name='[Utilities]' role='dimension' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BldgType]' derivation='None' name='[none:BldgType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fence]' derivation='None' name='[none:Fence:nk]' pivot='key' type='nominal' />
            <column-instance column='[Functional]' derivation='None' name='[none:Functional:nk]' pivot='key' type='nominal' />
            <column-instance column='[HeatingQC]' derivation='None' name='[none:HeatingQC:nk]' pivot='key' type='nominal' />
            <column-instance column='[LandContour]' derivation='None' name='[none:LandContour:nk]' pivot='key' type='nominal' />
            <column-instance column='[LotShape]' derivation='None' name='[none:LotShape:nk]' pivot='key' type='nominal' />
            <column-instance column='[MSZoning]' derivation='None' name='[none:MSZoning:nk]' pivot='key' type='nominal' />
            <column-instance column='[MiscFeature]' derivation='None' name='[none:MiscFeature:nk]' pivot='key' type='nominal' />
            <column-instance column='[PavedDrive]' derivation='None' name='[none:PavedDrive:nk]' pivot='key' type='nominal' />
            <column-instance column='[SaleCondition]' derivation='None' name='[none:SaleCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Utilities]' derivation='None' name='[none:Utilities:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664822185672708]' derivation='User' name='[usr:Calculation_401664822185672708:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Utilities:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PavedDrive:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MiscFeature:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Functional:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fence:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='NeighborhoodGrouping'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664821936644098]' role='measure' type='quantitative' user:unnamed='NeighborhoodGrouping'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighborhood]' derivation='None' name='[none:Neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_401664821936644098]' derivation='User' name='[usr:Calculation_401664821936644098:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' z-order='1' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='NeighborhoodGroupinga'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
                <bin default-name='false' value='&quot;BEO&quot;'>
                  <value>&quot;BrkSide&quot;</value>
                  <value>&quot;Edwards&quot;</value>
                  <value>&quot;OldTown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BlueSwis&quot;'>
                  <value>&quot;Blueste&quot;</value>
                  <value>&quot;Mitchel&quot;</value>
                  <value>&quot;NAmes&quot;</value>
                  <value>&quot;NPkVill&quot;</value>
                  <value>&quot;Sawyer&quot;</value>
                  <value>&quot;SWISU&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BNS&quot;'>
                  <value>&quot;Blmngtn&quot;</value>
                  <value>&quot;Gilbert&quot;</value>
                  <value>&quot;NWAmes&quot;</value>
                  <value>&quot;SawyerW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BrMeadow&quot;'>
                  <value>&quot;BrDale&quot;</value>
                  <value>&quot;IDOTRR&quot;</value>
                  <value>&quot;MeadowV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C3&quot;'>
                  <value>&quot;ClearCr&quot;</value>
                  <value>&quot;CollgCr&quot;</value>
                  <value>&quot;Crawfor&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NNS&quot;'>
                  <value>&quot;NoRidge&quot;</value>
                  <value>&quot;NridgHt&quot;</value>
                  <value>&quot;StoneBr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;STV&quot;'>
                  <value>&quot;Somerst&quot;</value>
                  <value>&quot;Timber&quot;</value>
                  <value>&quot;Veenker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' direction='ASC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' value='40' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='OverallQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Rooms'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Bedroom Abv Gr' datatype='integer' name='[BedroomAbvGr]' role='measure' type='quantitative' />
            <column caption='Kitchen Abv Gr' datatype='integer' name='[KitchenAbvGr]' role='measure' type='quantitative' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column caption='Tot Rms Abv Grd' datatype='integer' name='[TotRmsAbvGrd]' role='measure' type='quantitative' />
            <column-instance column='[BedroomAbvGr]' derivation='Sum' name='[sum:BedroomAbvGr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KitchenAbvGr]' derivation='Sum' name='[sum:KitchenAbvGr:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotRmsAbvGrd]' derivation='Sum' name='[sum:TotRmsAbvGrd:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:BedroomAbvGr:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:TotRmsAbvGrd:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:KitchenAbvGr:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>([federated.0je71i81w9fhsx19mepx11n8r32i].[sum:BedroomAbvGr:qk] + ([federated.0je71i81w9fhsx19mepx11n8r32i].[sum:TotRmsAbvGrd:qk] + [federated.0je71i81w9fhsx19mepx11n8r32i].[sum:KitchenAbvGr:qk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664822199062540]' role='measure' type='quantitative' user:unnamed='Sheet 12'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Mo Sold (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MoSold]' new-bin='true'>
                <bin default-name='false' value='&quot;Fall&quot;'>
                  <value>9</value>
                  <value>10</value>
                </bin>
                <bin default-name='false' value='&quot;Spring&quot;'>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                </bin>
                <bin default-name='false' value='&quot;Summer&quot;'>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                </bin>
                <bin default-name='false' value='&quot;Winter&quot;'>
                  <value>1</value>
                  <value>2</value>
                  <value>11</value>
                  <value>12</value>
                </bin>
              </calculation>
            </column>
            <column caption='Mo Sold' datatype='integer' name='[MoSold]' role='measure' type='quantitative' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column caption='Yr Sold' datatype='integer' name='[YrSold]' role='dimension' type='quantitative' />
            <column-instance column='[YrSold]' derivation='None' name='[none:YrSold:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_401664822199062540]' derivation='User' name='[usr:Calculation_401664822199062540:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822199062540:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822199062540:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822199062540:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822199062540:qk]</rows>
        <cols>([federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:ok] / [federated.0je71i81w9fhsx19mepx11n8r32i].[Mo Sold (group)])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Pool QC' datatype='string' name='[PoolQC]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[PoolQC]' derivation='None' name='[none:PoolQC:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PoolQC:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Foundation]' derivation='None' name='[none:Foundation:nk]' pivot='key' type='nominal' />
            <column-instance column='[Id]' derivation='Sum' name='[sum:Id:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Yr Sold' datatype='integer' name='[YrSold]' role='dimension' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YrSold]' derivation='None' name='[none:YrSold:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]' />
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Electrical]' role='dimension' type='nominal' />
            <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
                <bin default-name='false' value='&quot;BEO&quot;'>
                  <value>&quot;BrkSide&quot;</value>
                  <value>&quot;Edwards&quot;</value>
                  <value>&quot;OldTown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BlueSwis&quot;'>
                  <value>&quot;Blueste&quot;</value>
                  <value>&quot;Mitchel&quot;</value>
                  <value>&quot;NAmes&quot;</value>
                  <value>&quot;NPkVill&quot;</value>
                  <value>&quot;Sawyer&quot;</value>
                  <value>&quot;SWISU&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BNS&quot;'>
                  <value>&quot;Blmngtn&quot;</value>
                  <value>&quot;Gilbert&quot;</value>
                  <value>&quot;NWAmes&quot;</value>
                  <value>&quot;SawyerW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BrMeadow&quot;'>
                  <value>&quot;BrDale&quot;</value>
                  <value>&quot;IDOTRR&quot;</value>
                  <value>&quot;MeadowV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C3&quot;'>
                  <value>&quot;ClearCr&quot;</value>
                  <value>&quot;CollgCr&quot;</value>
                  <value>&quot;Crawfor&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NNS&quot;'>
                  <value>&quot;NoRidge&quot;</value>
                  <value>&quot;NridgHt&quot;</value>
                  <value>&quot;StoneBr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;STV&quot;'>
                  <value>&quot;Somerst&quot;</value>
                  <value>&quot;Timber&quot;</value>
                  <value>&quot;Veenker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[Electrical]' derivation='None' name='[none:Electrical:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' value='81' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]' value='61' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='SubClass'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log([Sale Price])' datatype='real' name='[Calculation_401664822163374083]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='log([SalePrice])' />
            </column>
            <column datatype='string' name='[MS Sub Class (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MSSubClass]' new-bin='true'>
                <bin default-name='true' value='&quot;160, 190, 40 and 4 more&quot;'>
                  <value>&quot;160&quot;</value>
                  <value>&quot;190&quot;</value>
                  <value>&quot;40&quot;</value>
                  <value>&quot;50&quot;</value>
                  <value>&quot;70&quot;</value>
                  <value>&quot;85&quot;</value>
                  <value>&quot;90&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;180, 30, 45&quot;'>
                  <value>&quot;180&quot;</value>
                  <value>&quot;30&quot;</value>
                  <value>&quot;45&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;20, 75, 80&quot;'>
                  <value>&quot;20&quot;</value>
                  <value>&quot;75&quot;</value>
                  <value>&quot;80&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='MS Sub Class' datatype='string' name='[MSSubClass]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664822163374083]' derivation='Sum' name='[sum:Calculation_401664822163374083:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='93'>
    <window class='worksheet' name='1/2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]</field>
            <field>[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3/4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[:Measure Names]</field>
            <field>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='5/6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16u29xf1clbpci18rk0yf131z7ft].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='NeighborhoodGrouping'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='240'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='NeighborhoodGroupinga'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='240'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='OverallQual'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQualGrouping'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]'>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;TA&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SubClass'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSSubClass:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gr LIv Area Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fence:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Functional:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HouseStyle:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandSlope:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MiscFeature:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PavedDrive:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Utilities:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:LotArea:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='BldgType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Qual, Exter Qual, Kitchen Qual and 1 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Qual, Garage Qual, Heating QC and 2 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Garage Qual, Bsmt Qual, Exter Qual and 2 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Mo Sold (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PoolQC:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Rooms'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Electrical:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1/2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='3/4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5/6' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='BldgType' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ExterQual' width='192'>
      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
      XCaJhAGrKZ8tGItGkUITTGSL2HhD8EolGZknGE1itDgp9rggJ+Kf9SMYLNjsdmy3UT7ZNzrO
      f7oLiDBFTpLJaLDYF1sGlyU+OUE6IwJgdJfi8OTLHXOZOLJiwGQxkImE0NsL0GoF/OfeJlt1
      H6UlWmIz00iygqWoHKvDRNI3STqdxVFeg9GkJZuMEPHNobW6cXqL0CwyCiRF/EQCeakTjc6K
      u7Yqn9qhSKRiGcwuB7lkmIjPj8bsxuV1MfHJhzg23I+VMNFgJH8hjYXCmjISU2PIqgFneSV6
      vYAUCxKbm0dnL8JZXMB/fWT397EmWEXOiGiMpm9d5eFucYA7ASmVRG+5Pcb124Kq5pAzEnqz
      +bbs+n8f/l4ywQJ60+11fl/ynQSwfJHuyvcQFoPjqw+649CC8eulu3wPHeDOQRAEXIuWIvkB
      dyOWnQPkE90+K0TX6Q3otBqysgRa/R9FLPIsoiRJN3J2BI0Oo0GHquSQswp6g/6umtb/FNRc
      FlkUUQGN3ohepyUrZcgpeVnBxa61P4WSlVDQotNpyUkZstmFzFKNDr3RgCJLKKqAzqD/jM1V
      VXJZiWxWQb+gR6rmskiihNZgRKfToqoK2Uwm/3vo9YvOBs1fXiErZdEbDYBKTpbJylm0eiNa
      vRZVlpBlecFG402MvkJWFFFVAb0pv5/LiRlyiorWYESryWuPfrre1xmXaRg05h/jWu8Ig4NT
      1DY10LSmlapCI6fe/TVq/cPcu67slgeuZOJcv9bOaO8g2tJKqqoa2bK6luDIJd49F+LZHz+E
      /e6WhLuBYPcxrp6Zwllsx7N6J17DLJdOd2EgjaF2N5v3rF60Mydn+rjy+iuw5sfs2dfEXNc5
      xkcCqFIC3yzc99I+Og6fIJNM0/T4y1SUORCAbGqei6++hmowoveuYfO96+l++x+JynrSool7
      XnqKYNsRensCoCisfuxZij2L4ylUKU7X4XfpGozxwl//c7KJIJdefx3VbCed0bL1maeZ+uQP
      RJJaxFiIyr0/or4hL4M8332armvjIEbxbHqMlga4+OYpNCYN6YzA+gf2M3HxJBkJIgPXKH/q
      fwWWoQO4yhrZV1wGajs79uWZYDE4iKHhXqT5YVRKEW56DbRmJ1t27MWNFt2qjdQ6LahKlvEZ
      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
    </thumbnail>
    <thumbnail height='192' name='ExterQualGrouping' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Gr LIv Area Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodGrouping' width='192'>
      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
      PEBYTR861QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodGroupinga' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='OverallQual' width='192'>
      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
      8wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Rooms' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      /xZbS/gXvnaC9PwEx44cXNaCtRIXqD7kw+WUaAz7TN93Y2Nj9fdfbGvjbFeArk5rH43KuDTd
      WDPtcGp+8Yk9/NibZ3dfC45beHPXiwv0xoUpLoxEGZ3LsKfP2grQ1VJHnd/Ntu6IqbFZGr3H
      5URu6KTBpaCKPgrJGQa3re5cOrqzk5GrnVVuhhU4HRL/9z/5IONjI7ZeYEEQ8LmdtvXX545v
      ZXJEMOUEuxE7eyL8zmce5MjBbbb6XgtSWSNjXzJnL3Pf7t5m9OwWW1SGteKTj+4gTIodPRHL
      ba9MxEhki7xzZZZjJkiAlhRyXzBMS6QBh9uH2ynR1tGJx8SL0dMS5pljg7ZTk3jdjg0Piqng
      iUN9HNrebsuUKQgC/jtkBq0868a7MJ3Km5em+P5bV03r8Uvh8zgRBYGA15y/adOHGqmaxhe+
      +jrffu3yHUkQ9f/+3Zt845ULyIq64X3nSzK5omyrraxoiz/tjftbr17iP3/7FCkbK4iu67x9
      eZqZWMZW30OTMeaTeaZttN+1pYmnjw3yjEnay4b4AfJFmatTcbbvUC0vqboOmXwZp2zPHKjr
      OvmSbMurCJDMFsjky9yJ5Gy//zevMnzFcCBGFvMpmUXFbKvYTCYQTeSIJnIoijmzQ7FY5IUX
      XgCgLKt857WLdDTXVdWQzs5OHnnkEVPXci1qFXbUznevzvKPb1xB8DfzT547sOr5GyIA3z05
      xN987z1aOvs4brFYtSQK/NrT+4nNTdrq+61L03zxa2/w285GHt3XY7l9saxSUlR0Nl4CBEDV
      9KoJ1ArKi1/+smxvBUjnSiiqRr4k07j66Xg8niolWdN0pLqfsndHP3sHrQfjPHm4n2J8iq1d
      Znp+P+oDXvxeFy31flPnb4gKpGr6omnK+kskqxr/7suv8dffP2Or75GZBCVZZWQmaav9fDJH
      MlOoqhRWoOs6sqrZVt3WInIelwNh8aetvvXrnByrEEWBB3d10t9ujw16+soMJy9O2VKhgn4X
      kbCPFpMZSDZEAI5s72BbV6MtKxC6sZwrqmbrhQj7DTqx3cDyX/zwHp48MmA5GgxgeCrBH/7t
      CX749jVbfW/tbKA9EiDgtZ6TyOd2wiIXyQ4qUWx2V5C1oD7oJex3G/dgEZfGFhidTXLivDmN
      YUME4N2rs1yZjDM0GbPc1ukQ2d4dYeeWJltUiMomMlewt5lsrvdTH7RHw3A5Jbxup62JBCOY
      Zz6ZJ1+y7mxqrvcTCXnZ1m1djQCqIZiStPEWrHxJplBWqmqcFVSshZuKDLe3v4UDW1vpb7ee
      DVpWNC6PL+BUUraoEI7FCbQaU1vBH3/zTTILk3zokaOWv6bdLWH+548fZs8ee6Gj/9svHOfs
      2aCtiLCx2STzqTzvDs3y4YPWiYAelwNBEGyrUGtBNJElni7Y4kF1NoeRJJGe9cgLdPHsu4gu
      v8EFEmHk4ilyjnZ2rxLz2tdez8ce3k6kzpolA4wV4OeO9COWEra+wpVsdK0N5jZFmwmxVJ5o
      ImfLglXZb9lNKXlwWzvRqcgdScuezpXf99MKUtkiqqoRS+dNnW9JAOrr65mdi1IoqxQysySK
      GoqQXZUL9O7QLP/t26f4Zw3t9LRYC9GTFY0fvjWMS0nxyScfxqolc3wuBcBENGWLt/I/PLOf
      0WEfLodgmQsEa+PL/Om33mboykWOHNxPfdBaaGS+aLw8hZJsq//zI1GuTSdIpPM03eLDtdK9
      DU/FcXiC1VSNVhDwOhc9+JLlsaeyRna5TK5knwuk6zrFQg5dcOD1eKovnaqqIIiopRwOfwP9
      3QKTMbVKl70V9yKVLxPPFMiXFMvcEUnS+dWn9pNNzOJwWOcC7R9s5WuSyP7BNlu8lYPbO3DJ
      8Vu2Xa1E0lr4Mj//oV2806jSGPZb9iaHA8aXO+Q3n18nnU5TXCx6GIstUCrkmF9YQNKMVbSx
      sfF9CXZvdW/zyRx/9p3THNiV4V/9mvU8qsd2dXJ1qIm+9gbLz27fQBv97fU8/sAWe1wgTZV5
      /ac/RhHdCLqG5vDx6PGjSCJ09PTRsdSU7vMSNrHHenhPN9nYLksp65aiuyXMvJa21fb0lVkU
      VeP0lRl2W6TW3mns6WuBXKstKoUdK04ikSAejwPQH3HQ/NBOkrF51IKxiobDYVMZpismVNVi
      NrsKXj49wvmRKBfG5i2n0x+dTXJtJsnpoVlTVOqbBEAQHezctYtT75xBE908sG8HdqgsMzMz
      TEwYdbkuj8c4eXYIXZGrcbmDg4PU169uJy7JKr/7X36Mo5zk8IF9llWgysbVriVmNpYlkSna
      9iTfKXQ2hYzoKAvJAAKBQDUR72xGQ5OKNDY2VuMJzCbpbQx5ObS9nYf2W3c8ApTKhtCWbJhg
      E5kCuq6TSBdMnX+TAOiqzNhUlEc/+ASiJnPuwmUa9+3HqjXM7/dXSyQ5fWH84Qa2djdWg7TN
      6oaSaNiy3Q6X5ZcfDBoGYIlTc/78+Wqm4m+8coFiLo1D0HA5JURR5MCB1V3sYHwFU9kSqqrZ
      skIVSjL5oj0ah6xqFMsK+ZI9869rkbLiclpngyZzBhtTdAd57ID1VDT+Rb9HwEZNhuvmW5tm
      ULWcZ2xshFKpBMDMzBTbd+/HuwaPQSTss8xlWQpBsB+PWgnodrvMT2RjYyOybLw4h/caGcpa
      W1twWtyDnL0W5Ytff4NfKHptpSb5D199nUsXL/CnO3aarhJTwehskoVUnveuzvKJR3dY7ltW
      r5PprJpC/R4XTodoO6fRpx7bQYgku3vXPyP3TXfm8Ib5yEc+yomX/4Hm/kPseuAQnjWagnVd
      R1Y0W18TSRLpaanDo9qTwMrkmaFtLwdV09EsUALS6TRXr14FDDNmq19FTk5x+rTxQWlra6uu
      jKtBFAR0TTed0aJcLjM5aXhA5UwaQc7i1bNcu2Z4okOhEJGIOY59b2sdjSGvLS90NJGjUFIY
      m01ZbgvQGPaxu7f5loE4K6HyrMzyp27eAwgCuqoSnRpmJKbxgaefJbjGkNCZWJaRmSQ7eiKW
      YwJkRTUcYbJ5R1g8HmdsbAyA2PQ8YUeR5Nwo77xjqDVdXV2mXwSnVCkEbu6BulwumhZrCbh8
      RR49foSe1jBNi+k9fD7zK6HLIS1avsydr+t6deVySgIf/dBR6gKe6rGKydYMfB6nbRpFa0OA
      g9vaOLTH3h5gLXhgsJXnjm/l2Ye3mzp/2c+iIIpsO/wEgqYRcK+dLWFUVsGWDq/rxnKsKypm
      JcDtdldf8D7NxZMuP93NISIRwztopUTrzt4mVFW3FZCj60ZwumaTDJfIFinJCvmSUtWLV4Ig
      CFUBU5FwubMEA/7qMadzY5KSuZwSn/3Q7mpss1WMzSb52ZlxW4nUNE2nVFZRTAr78nqBDqPD
      QygKNPfvtDSA5dDS4Kcx7LUVXieJAkGvC5fLbUuAmuv9yKpqmh14I0amE5QVlb39LZaTa1WC
      UewwScHIsKyoGgUbG1lh8UtxJwxXuq4TTeYI1cn4TTrgp6enmZ+fB+DF169w7tJVImEv27oa
      EQThlunNwXBC5vOG5/fty9P86M1LaK4Qv/rUPsBYlW/10VtWAM5fOAdqmWwRBP36E0wszBKN
      ZegbHETSZUaujRBp66o6XW6FTL7M5Hya3rZ6y2nGVU0nky/hkEvouvUJdTpEmuv81c2wVeSK
      MoqqGRx3i4tAReCdNuv0hvxuoqKI32R431JIkrHqOmxWhpxP5llI5dna2WDZghVPF/iDr73B
      wd0x/sWvfMBUG5/PV60D9uD+QXq729m2pcmUypzP57l48SIAar7Ek0cGaPaXqsfa29vp6lo+
      DmXZt3HXzt0IDg9P73i/HjU2OkZD+xYcAmiqTntnO0PDY+zZZQR938h7r/w/ky8RSxdoaQjg
      WWKNWYknf+nSJRRFoSSrKJk5NDnLuXPnEARDorduXTntd+Xac4kcQ5Nx+trraG8M3vT31dp3
      NYeRVRWHJFbNkcu1XXqs8nvFCVWW1WX/vhryRRl1cUk326bat6Ki60atYSt9V/4eTeaIpwt0
      NgXftxG+1RwvRTjg4bF9PRzY3W0pFuKma8OKz7wCl8tVNSyEizKxooPOtroqDywYDN6y/S0/
      xxfefo2hK5d5/Oeeo85rvLT7Dh5hbuQC0VwjLQEX0YkxXG4Xuq6jadr7Nlmadj0QJOR3E/a7
      8Xsc1WM3nn8jgsGgkQdI1/n0EwcREAiHjY2kw+FYsa2qXn9hSks8opVjqqqu2H7p2CNh7/vS
      9Om6/r62ld8rTqKlfbsWv/wuh2T6vpeirTFIfNaJ37Py/S533y6HhIBhBjbb99L7Vishlar2
      vue21Ax8q+spqoaiqCjKys/5Vn37PS6cUgGPS3pf32buuyQraJpOoaSYuu9lBeDkqy+juep4
      4tmP4l9yxvTECMmigz6xQCqlkS8pBMLhZblAlWNgpKtL5UrkCjKesLP695W4GoIgGOn4dJ22
      xmC1RGnl+EptJUmq9i0s2TVXjq3E3blx7GeuzSIrKge2tiEtpgdc2vZGLpCiKNeFYfGjoy2m
      FzRz3xcuXCCZNKLXnPkpusIi75x+u+qYOnr06C3pCJqmVfsplEvoQL6kmO576X1XTNZup+OW
      z23p9WRZ5uzZs4BRpujsxStE5xcICkZmh3A4TH9/v6m+S7JaDYKqHFtp3EufubL40Je2Xem+
      lz26EFvAKWf41ne+x3NPPUF4cQXo6O6jwszwLt6UGbQ3Bgn7PaZTVdwIt9Nhi44BVGN57YYX
      yoqKrGim/QD5fJ7hRT9AplBm5NocQqEeNWcsx1u2bFnxuUUikWoG5ozqIZUr0tPVXrWJb1Y6
      hiiKVfOvN1Dmw48cIeC9bhI2WxQEjNTsOvaoEBX+kVke0rIC8KGnPlq1YPhvhxlUFAj6rDtU
      wPh6jswkAMOis9HY0lqHrGjmA9MX1UEwUkmqqkqpLFePWTGJFkoKiqpTVjTrTiG9Mhx7ot/e
      GMTjcuCxURutkojYTjA/XDcaOG1t4IUbfq6MZd9uj9fH8PlTJDJlZJsBFUuRyhU5dy1qy5zH
      ov/AbnZnUVhcvi20r+wRVFVleiHN9EIKWVFW3Tsshwoz0g6ur17258DuehFLF5iL55BtfIWd
      DhFREKpp1a0i6HPjcoi2ChNafU2WjwdQy0xeO8dUQkF86DG6wva+3hUsJPMkskUSmaJlx4au
      g/HxtPkSVTZCFl7CyclJcllDd708ZOwBAnoWSRIRJYmeHmseTrtqi1MSKQr2igGdZDYAACAA
      SURBVHtoNiLCMpkM8cXM1NfGoqSyRRo8apXT09zUBCacaaqqoaOj2EzKlcqVKCsa+aJsmYdk
      9Vuz7NVHh4fQvU3MLyzQsFYiEIZrXNV1GsPWw+sEwVCh7Kq+a12/GkNeyopqi5NfeffshiU6
      JONLakeVsNNjPperbsCz6RTJdIFsxgOKESRjVq/2uJ30tIRtk+Eq6redoHjLMePLHQyG69m+
      cx/5Yum2eBKzxTKxVIGWOr/lbF+6bv7BLwdhmd+sYCaWRVE1elrClj3ZFTOoXSfcYGcjRVmx
      5UFfazKAitBqNoS3WFYYnU1RHyzZCkKqqLt21N7Kh8rsB2vZt7Ex0sRL3/4bcp4ttPTvwuey
      /hCTiQTDw8OAEVRybSaBo5SoxrZ6PB5LxDDB5gtcDYixuZI5HSI6ur3kuAi4HJLt5LiXxhfI
      FMoc2tpmWZ+uvLi6zdUn6HNRKMm2hNftlGiqs0+Br2yCzbKHNU2r0vfL5RKlUolyyVE9ttJ7
      tuxTlRWV4x96ln/84Ul8TntfkIoXD4xsXU1hH74ljjAryppxqr2JLC7m1CmW7QWmq5q2WLPK
      etuAz8Wh7W22N/AVB5zZrsvlctUEG88UGR6J0hDy4l0MJ21vb6/SDVZDT0uYruawLfWrJKss
      JPOoqm5LCNyLWe1cJle+UqnE+CL7dzaeZXwyTiHlw6MZ+zhBEN5Xd2Epln27z5w7S2I+Rk9H
      hFz5uvoxMXqVy5eHkDUjcObSxYuMTc6uOsBYKs9MPEsqWzJ1QzcNcg0BMWszqRk1EVxOaQ0v
      sa1mwPV7Nt31oglW0zR0Ta3+Xv1nYTCCzb0HLFFhLHw7NU1DkWUUWSaTKxgFx/MF45iNrBZm
      b/XmkEhNpbk+TF5r5kjvIJIoo+nOxZdQpJhPUlI0/E4PIb8b3eFYNi1K5Rgs1SeXHls5Xch8
      NIqiKKiaTjQaRQDm5pzGl8HtrjpYlkM6nWZkMQhkPJpmfC6FnF2glDbo0EJ//4qUaH3JOB2S
      gKqJi3QPg5eydNw3pkVRl7RN5UpcGo/R2RSkYzEWerU0KfoSP4JBQzCsKpqkVfvTbrEnWtp3
      BcJin2b61pZp/77rq+pNc1z5/9K2kijQ0RQk5HOb7nthfp7x8XHAYODOxnP49AzJgAdRFG9J
      ZquMq9JPRWRFYcl93zDupbhJAJRSjtPvnaG+oYm5KYgnEjzz/MfxOBYfpqpQzGcpFZJcmVxg
      sC+0KhUi5HPjczvwe13X3eqruOUzmQyyLKNqGulUClEQSKdSCIKA1+tdNeVF5YYVWUaWZRRZ
      qR4TWNm1LiwZeyZfNtiguo5TkhBuGPdyaVHKZSMnj6ooTE7P0hRyUS4bUUW6ppmigFR+F244
      tpTmcSOkJeNWLVICKn9fKfB9JSrE+/hRmlHYUNP06p7vRgrJSn0v/VmpTmma+lJdNa8/M3EF
      6stNRyWnh/7BHezevRtBVzl37hyVbYCRFmUxzV5diMfbzKX8awh5bVeHERfT89ndSFbUB7vW
      LI/LQUlWTdvim5qaeObZZwF469IUX351nAfbdvLMk/ss960t6v92MzQv/bneUFW1uv9QVI2R
      4TlSIS9azlh1I01NK67aS+FeJPLZoZGLSwTADG4SAFFy0h4J8uLfv4AmOjn+yOOWdLnlEEvl
      uTaTZHt3xDIlQtcNe7BdHVxbgzkPqMYC6Lr1zKT7+lv55GM7efbBlanbt0SFgWrDALAWUyIY
      hLZYKs9Ah/V4AFE0ajvbiScGKMoGF6gsq/gtuhLWzgUSBH724x8wm4EtvX34fD7b7vQKMvky
      xbJCrli2xQlaS/+ONQal+DxOyrJqaxNeLCtEE1lSuaLpFTAei5FKGcHkszOz5Ioys0Ed76IZ
      tL293dR1KhteuzSM2biRD6ktErRcJzhfkJlayJDKlWxZgaQNXL2WfSue+fhnOXZgN7MTI5Rs
      hvMtRXO9n7qA25YapOkGGcwOMxC4aSNuFYpSqU1gvf3VqTivnp0wnasejFJDuVyOXC5HOp0h
      m82SSWeqx8y+0FqVAmJ52Ab0G35awFrVTq/bicshmjaDLoV0O9Kj//3X/oqUGqA50mTbFLYU
      sXSeZLZEKlu6ZaLV1WB3FIJFnRCgWCiQy+UAKJeKlBWVfD5v0BIsmFP3DbTwG88d4HGTGQpu
      hHtx/2EnnYxlE+pNF6hcx3rT66uPva7j6QJlRSOdK1nmjjmXBCGZwbICsPfAUeYSOfx1TYQ8
      a6dDK0uii+xAEOwLgLbEBGsWO3burKYS+fLJHyBn4nz8mQ8S8rstCZKAgNsp2f6IqJqx8qia
      juVIiqrD0VbXOCURQbBHaXY7HXjdDkJ+e3uA6iO2o3YuOj7NZsRbVgB6BnbQrqhMXX6HqdQA
      XXVrY4NWXhrbm2kddJsSUJlAK4zK5ubr/BWHtw61lKe9vd1ydrYzw3P88QtvMa8E+IUP7rbU
      FhZrq+nmN/CyojA9MwMYefIzyQSU3Ux7F2M7AuYzY7hdDsNUbXLFq5inAbxe2NldJhgM4lpk
      j7pc5t+h6yuHSXVP0ygsZrVOZLLMzM4h6I0Umo37Xcn/sKwAXHzvLSaiKQSHlycP2OPQZLNZ
      pqenARBUjaBUQs6lmC4YbvnBQXM5IwXB0OvsLuVrLRTxix/ezeSYp5rT1Ap6WsMc3t7OgVUK
      iNwKVT6PSV2ivr6ez33ucwC8fm6CH/7FC+zp3sPnPmcuM8NSZAuG/6NYVkypYE6nkwePHwdA
      UVT+6Mvf52B7Bw8eGLDcd9jvJp4uEPSae+aNjY08u2h6HpqM8dK5r/DkoYd51kRKyOXZoJEO
      Hu7s4AdvnEdWddyL959JxYklsnR2d+MQIZfN4vX7lzW17dy5kx07jAFkC2X+8aXX+NiTj1Yf
      5mqqhMPpNLyiisqVyTiCWuT4ni2IAkirOMGWOmiSuTLXxmfwed0MLh4TLKwGTx8b5Ky/aMsi
      kcmXGZtNMpfI2Sr5uZbdV5UCYsH6FQyFqubDqfdmGbo6ydF9W6tZ7czuf1K5Eq+dnaCoe3jM
      pAAsdVYNTacYm5iho7mOwU6vpflKZouomkbMbnZogOmxId5OlHhkTxeJgkpgMZXJ6LURGlq7
      kATQ5CJnzp5h/6FjeJ03T1UlgB3g+29d46svn6erd5CHTNbLevDBBwGDmPf1UxlcSorHHnvU
      lA7e0tJCS0sLAPNc4JXzUdr7d/PoY7dOrnQrjM+liCbtlSkqKyrFsmIvEo41GWKuF4uz8PJ0
      dXVVKQfOk/NorhgdWwaMOgUWoC2S+Kysun19ffT1GU7Wy+kgZ8bTHDp2nH391vrOLhZDNFtf
      7OYCGUoZyenl2NF9QJnJS+/RfvgwkgiD23cwMzZELNRIxO+hvcVIP7haiaT6gBtREAj5XJaJ
      TYqiIasagmKk2rCqClXSe6iqvVJF/+7Lr5JZmOTIgX3LWiRWKpG0pSXE5z9xhH37ekz3vZTP
      s5DKk0gk2DfQct2cazIks7godKUlFBArqPhrAh6n5fJPdX4Xn3x0B7u399nqe29/M8NDEdoa
      /JbbV56P2dJUN3uCHS4OHTrImydPIoseDh48WM2IFpufJac4aCZPJgMLsQSaM0pvV+uKPBNZ
      MWr8Kppuq0TSBw/0IhbjtkokVYq81Yd8tkoVGXwcAUlyLNt+pRJJum6kQ3FI5sd98ODB6u9R
      4SynTr/Lc888ZTk3aUVdEcWVeTS3QsVip+q35k2tNOeHtrfTYaPEEcDh7R1IxZ001fktz3df
      u+G5HuhsNNX3sk/V5XYTiy+QmRvjOz94GXnRgtjR3cfu3bvw+4MEg0EOHj5Kb9fqCVCLsgro
      1cofViArGi+fHuGnZ8ZtqQLJnEHBTmWLNlrD//GLD/GrT+2zFaB9dbFQ9g/eslco+82LU4zO
      pogmcpbbrpUKoSj2TdfJbJEvfPV1vvTDM7b6/ttXLvAHX3uDKzbqSs/EMqiqxmTUXEmtZQVA
      EB2EQ2EkT4h9OwbXTIWoD3gQEGzFiGq6TrGkGJVebEiAnaD4pagLeGyndHE7JXwep63cnmDs
      f3RdR7aYiQKMumoNIa9l/b2CrV2NtgubxNMFFlJ5rk4lbPXtXQyIsRo+C1SLmtebZB3csgdJ
      FNBFBwODg9ik0VQxOptE03XG5lJs7zGXl78CI8GrgFMTbZlFKmV27BKzfu+/vkIqOsH/t2eP
      5QwF3S1hfnsNhbKffXArpz0FOiIhy23T+RKpbJGphYytvj/74T3sbsGWANQFPDgkybbXfzqW
      oVBWSKQLbDFZ8LqCTN7IiJfOmQu+Wj4tiqaSL8n4JZ1MSbUdFllBRySIz+20VaxaFATcTgcu
      0WFrJQouFnizSuiq4NH9PUyPKbbJdGvBz86Mce3aHIlMgaY6a89O0wwrjN3UJNFkjqtTcXbv
      tm79qg96+Je//DC93bcOYlkJA50NvOZ1VgsqWoHV2mbLzurZ0ycplkrMZ2Q8NrMKLMWHDvbx
      2x8/zF6LJi0wNqHN9X6abAZYZxa/BOm8vXDMp48M8OCuTlu5edYKTbNPZquYXvM2Y6H/+/ff
      46+/f4bJeesrSLGs8OUfneNHp+ztfa5MxMjmy0zMWy+N294UpC7gYWunudjnZVeAbXsO0r/T
      2Px4b0NqxB++fY2//Oab+COdlsp2gqGK/frT+1mYm7LV91rzAv2bv/4pyblx/mDnLtuZzuyi
      Yk+3s3+psGdLNgXgow9vJyykaWu0XlhEVjSiiZytzTssaro2N+/DUwlSuRJnr0VN+ZyWnVGP
      135Fx+WQzBYolRXTetlSyIrG73/pVVxKiqOH9llWg37ucB9q5gGeshmUEk3kyGWKyKrGGkul
      WUYlxaCd8kyVPY/dDfxARwOFHR22+q7CpvXkl5/cR0+wzAOD1kssyYvp3M0m1dqQT9rzx7fh
      Ksd4cFenrfYVfdYOHJJId0vYtg7vckqUJGHDQguXolhWjHgIG7EQfe31fOCBLfzcMZvRaGuA
      0yHSXO+n2eK+pYKA10VXc8iW2hkJeXE5JFpMJlK2JADJ2BxzC2n6BgdxCjpTE2M0tHZWo5Vu
      BZ/HyUBHg60MZ6IoEPK78WgeWx+Us9ei/Mevv8Hn3REObTcXTbUUv/OZB7l6pX7Ve1wPVPIR
      2bHgup0SH3igl+3d1jlIa4XX7eS3PnLQdpG8tWDnliZ+5+cf5PBBc7XtLInY2OgYgXAdThEy
      0Qk0Xx2j10ZsDdQsNE0nnS+RzBRt6fOiKFT/2YGiamtKzbgWrKW65kQ0zb//ymt86Ydnb//A
      NjmshIFa+qzt3n+QuZGLRLP1iCWVQHOAUmJhVS4QmOdm3Ahd1+lqDuEs62iqitVXcXtXA//L
      J4+wu6/JdP/f+973qklif/zOGMVCnujkcDWVy6c+9anquStxgcD+fQP8048e5N0zLprCXhsc
      KgVV1Sjb5AKBuTxCK933jXmEzOIfTwzxze+9we82tNPTYq4ISwUXxxb4wlff4FNpJ59+fPVV
      wJIAzE6NkSw56BULCM1tjFy9SGNb97J5gW7Ean9faYD/6pcfZeTasK32uq5TUjQkC3yc5557
      rvr7rqOz5IplHtrdtWz7lbhAYP++AYJ+DyGf29LYK3A5nSiaflMeIytYy5yKorhqKapbIZkr
      k15MkW61fVskxPaeRnb0NJtqa+nqS0skAezcvcfS4OxA13VmY1nS+bItSvKbF6f44tdO8NvO
      Rh7dZy2vP2DLElFBtlDmJ++OUd/SQ2ezdW/un7zwFpcvXeTIoQeqpD6zCPpd9LfXM9Beb7nf
      Ow0jCYG9IKZI2McvfHA3e0zO28bv7CxCVjT+r7/6CS4lxeEDey1vhOcSOUqywmw8uy7juxEz
      MzO88sorgEFnfuX0MAszo2xbDIjZvXs3e/aY+3A8/9A2Ov1FwlaT4wBhv4dfemIPe/ZYF/o7
      jQd3dTI81ESvRRqEHaybACiKUg0svzad4Ks/eo9wU3vVo+tyuUxFGKmaRq4oUyqXDa+WRQlY
      KyvSKtra2vjsZz8LGGnh347/iKeePcQxGybgty5Oce7qLIWSjN8ml+luxMkLU1wcnWd0LsWu
      LeayyVVQKiu8dWma5o5eWhpWd+KtmwCMjIxw/vx5wBCAS0MTfP9736tyWo4cOWIqyZPH5eCZ
      Y4MIxbgta4h/sT6AXUbmWjCfzJHOlZi04dIHGJlNEk3kyBbLlgVgaV1jO0m91tp+LSjJRn1o
      O/XJzo/O8+3XLiMEWvj1p/evev66CcDg4GA18F3TdH4plae5zmf5YcqKxk/fG8OlpPjcx6w7
      FxOLcQDJjL14gLVgd18zf/bPn7NVGgqgrSFA1OuyReSLpQr88Tff4rmMm+ePW3eGffOnl/jh
      T97i/+kdtF3qyC4+9dgOQiTZ3Wvt6w+wp6+Zz3xgF089tM3U+RvC8BJFgZZ669E9lbatDQGa
      6/22HGHViDCLm8jbgQqRzy6RzudxEvS6bDnCZhNZ5hJZLo0t2Or74tg8s/EsC8m8rfZrwZlr
      UX52Zpz5lPW+o4kcPzszzrmRqKnzN/0m2CGJ/O6vGmZQOwIUTxsP0WyWgM2E33z+IGd7XdUy
      T1awrauRjz60jQ89ustW35VgFDtZ6daKTL5EtlC2lQ6zJKtGTiST7N9NLwC6rjMbz5KxaQat
      JLOqC2w0lW3tEEXB9ubd6ZA4tL2dbouOpAo+9sg26sSULU7+WvHc8a10+oqWnWBgGE1UTUc2
      mdPW0tqsawpnzp4DQC5kOH/+HDMLScuDtAJZ1fg3f/VT/vK779pqX2FF2o0Iu5Oo1Ce7Exjs
      bOTYzk5bbFBN0zl5YYqRGXvvhlEUxFZTpuYzlGSFsTlzfVtYAXSmJ8arleNj0ShNHT3MjI3R
      0hBak8t/OZw7dw5FMdiQQm4GQctz6tQpANxudzXp1nIYHR3lxIkTAIzNpRBzM7zyg+8wcc5w
      Ch06dIiBAesZy5bDalQIqxgeHiaTMYJQfvLuGNdGRviVYrGa9Xjv3r0rVnFZirXOiRUqRLFY
      5Fvf+hZgqCHfPXGFEydCHNlhuE47Ozt5+OGHTfX73ZPD/N13T/J7zV10WXQgVgRHvKGU1a1g
      SQByuTyJ+VnSuUGa2jsZHxtDl5ymqBBWEQqFUFUjKHxLZxtOh0goHDYqhzidK/Y1MDBQfcGL
      ZYWTF6c4vK3dli69GlajQlhFIBCovuCBYBB/YxehcPh6oiuHw7QArHVOrFAhAoFANS2jruvs
      fXCajkjIlgrl8zhxOx24XSvP83LYP9jKsV2dPHlkwFRbQbdYQSGfz+EQdBTByez0NF09PTgl
      kXQ6TShk3d1/t6NQKCBJkqXkrxuFs2fPmvY634i5eJafnXibTz792C33Xes552sZu5W2lhU8
      n8+PyxvA53HT19eL8zbEDNew+fDff3CGL/3gjG0n3p2CruvkS7LpvdOmtwLVcGfwiUd30OjI
      0N648VagteDyRIwvfu0En8l5+ORjt5kOXcP9g772enLb2i0XyLsTmJub4+WXXwYMAqKSmuLd
      N35Eefo9AHbt2sXevcsnRq4JQA13PVpaWqoERFXVeHQkSn9HgynTd00AatgUMCLYDJPyuZEo
      3/7xOVo7eggtJjZzu805MiVJZJ+F1Ds1AahhWbx5cYofvX6Frdt2WM6HJCsqf/HiaXb3NfPI
      XnPxCBcvXmRoaMj4fWye80OzvPgPRrUYURT52Mc+ZvkezKAmADVUceLECUZGjCQHZ4bnuDoV
      5ytfLeBe5AM999xzBIOrb4rT+RIvnRohlSuZFoA9e/ZUTZeKqhFPF2iywR62Cst+gFuh5gfY
      XH6AYlnhT7/8Dzz5+HF2WgwqqbSPpQu0NwYs+wEq/K2w37MuzsfbCUsrgFzM8tMT7/Chxx8h
      H5/l0uQCXq+fHYO96zW+GiwgmUzy3e9+F4BcUea1E1eYnxplT59R9XJgYIDDhw+bupbH5aDD
      JhFOEATa7hLzqSUqxJXLQwQDHsqyiiRJyGUZj2f1Ekn3Mm43F2gtCAQCfPrTnwaMZFrHHlug
      syn0PmvI7RznvTDnllaAto5OhkdGKObT5LNFPB43uqauCxfobsHt5gLdTuzuW9/MbPfCnFsY
      vUBDpImGiKFPhsL1tHas0qSGGjY5Nr+br4Ya1hE1AajhvkZNAGq4r1ETgBrua9QEoIb7Gpve
      hqXrOvPJPKIo0BjybniWshrubWz6FUBRNf7ln7/E7/6XH9/podRwFyCeLvAfvvIaZ6/NmTrf
      4gqgE4vFaWxspJhLMz41SyDcSHvL+pXhcUgiTx8dsFVeqYb7DzOxDK+dm6CzKcSevtXL8loi
      w6Vjs5y+NMrjDx1D13XUUo6RmSSDvZ01MtwmI8NtBDbjnOu6zlwiRyTsM5XTyMIKoHFlaASl
      kCWdKxLye5iamqGru7/GBWJzcIE2Gpt1ziMhD+gaionscBYEQOTQsQeZm5vBIyoUZA23P4jH
      aUjZvcALsYPNzAVab9wLc2559C0tbdXfvXegDGYNNdxObHorUA01rCdqAlDDfY2aANRwX6Mm
      ADXc16gJQA33NWoCUMN9jZoA1HBfw2KJJJVz5y8Yv+sqQ5cuEo2l1mVgNdRgB8WywouvX2E2
      njV1vqW0KDOTYxRlw/WdmhohXtLwlMs1KgT3HhViJpZlaCrBI3s6b0lB34xzfu7aHH/+4mmi
      iSy/8uTyGaGXwpIAZDI5kgtzpHNFHC43Tc0N5FJRxLame8Itbgf3KhXiqy9f4NWz4wx0NNyy
      0uRmnPN9A638s08fY29/y/qUSMrlsjhFUB0+knMT+BtaCfncm5IZuBG4V9mgk9E0lycW+MAD
      vYjixpdI2ijUcoOuEfeqAJjBvTDnNStQDfc1NkQAdF2nWFa4TYtNDTXcNmyIAPz0vXH+xy+8
      yMWxhY3oroYaTGNDBMDjduB1O6qFFmqoYbOgtgleI2qb4Lt7zmub4Brua9QEoIb7GpYEQCnl
      ePknrwKglxK8fvJdZhcS6zKwGmrYCFiiQgwNDRMK+ZAVFUGTCAVcpFJpmhvCm5IXshG4V7lA
      ZnAvzLklIkck0kRy5Br5bBoEAUkAVamVSLoXuUBmcC/MuaUSSU2tbTS1Xk+LEg7XrcOQaqhh
      41DbBNdwX+O2rV+6rpNOp1f8+0qpzdfy9/W89mp/L5fLK6oCd3Js6913Pp9ft2uvdl/Abbnv
      2yYAgiCsySmiqkbtYbttRVG0XTtgLX2v1RG2lr51XUfXdUTR3kK+lr4rsDvna+lb04ycn7fj
      vtdVBSoV88QTSVTNkFhdU5FVFVlWbzq3MiC5VCSdyd5EnJNl+ZZkOkmS0DWFZDKFZsOxLUkS
      mqqiqhrFYhFd15HLJcrKzeM0A0UuEY/Hr7fXdWRFQZZvtphU7ltT5GXHr6kKsrp8kldBEBAE
      SCWTtzxnJRh968iyQrlUQtN1ZLlMWZYtXwtA1xQS8TiFYrl6TJZl5GWuV7lvXdNIJZMoN45f
      1ygv87zAePEFdJLLtTMBSZLQdcOCta5b+JGrw4SbWynlM0zNLtATcTNalCCpsnX78kWGL144
      T0NLO4KqEI3H6ehoJ7kQR5OchINe5ufmaGrvIr0wgyp56WxrBmDo8iV8oXoQRDw+D3KhSCYV
      R9FFNEQaQ16isSQOSaCptYP43BTBSBtKLo7D14BfKjC2UCY2domtu3eQTJYINDRQiM3jCgS4
      evkCgzv2Us4mCEXaUApJRHcIt+PmVWd6dBQ9EMYjlxgfmaKjvZWxuRhiWWHr9oFl7/vKpYsE
      6hoQBZGFWJTmtg5KmRS6ICC5vaRiCwQbmhDlLPGsTN+WLgRgemSIosNPowCi5EHQZEqFDJmC
      gqaqtLY0MTc3i9PlJBCOoOQT6K4gHlGlrIlEGsKMjIyg5BJEuvtJJdLUN9ShlXIUNSfxqWHq
      OgfwC2VwB3FLGiUFmhrrb7qHcm6BkaksW/u9jA0PEW7uYHZmElGDrdu3Lnvf0yNDFJw+kBwk
      52fxN7TgokxZVpF1KGWz1DUb85QpCWzpbkcAxq5eAW8QURQQHV50pUQhlyRf1tE0aG4MMze/
      gNMpEW5spZCM4gw0IKkFNNFDfdDDyOjk+gpA5asmyG6yyRkm9QgElw+vq6Czo43RqSgln4/m
      jgjXxq6hK36czixqKUNDcwOTV0dw1oUppxKwKABdXZ0MD4+Qz+doaGkjMTWL7nJSKqQIB/zM
      RfO4XTqSO8TE2BWisSL1BQWlkGHv/jZEwY2cfJfG9g6uXBpnz452xnMZKDmQtTRNTS0EpAKn
      p2PUFxTKxRz79rVQKhZvvgldJZlI4HMIFPJpro7qOL0rq0hd3Z1cuzZKKVsi1NnK1MQwhSwM
      doeYSxVQxRDJhSiqKoMGGiABLZ3dXBm6SlovUFBDCOUUiFAul2gNeRmbmqOz2cdoQkKeG2Fy
      No0/GMQlKGzfvQ8QEAUdX7iB6PgokY4eFhJJBFnB5SwTrGukI+LnjZNXjXaiyradt461zaRS
      lIp1pLJF5lLDhALuFe+7ubOLoaFhkpKAqntYmJtGLhTYvrWXdy8P09a+hdjMLJqgoikqOiAA
      7V1dDF0dRtTylMUmtNw8ughyuUhj0M/kzDyt9Q5my2GUyYuMzZWor88iqkV27X0AQQT08voK
      QKixifauLmYnRnB7/LjdHlwuF7rv1stWNpvD6XCgqzLXxqZob2tG1P3kCwncbhdej5dQXZhY
      Yp5sUVnSLovkcOL3B5gZH8XjCREKBlDcDtwuBy5NwO3UkZxeBDFCqTBHpLER1ADi4t5BkiSa
      W7tIp/N4nG58LgFn2AMUKeZSpIsCIZ+TxsZGdC1UbXcj3P4w21vbKCbnEJ1u3B43Lq8bwXFr
      lcoYvwNR0BkfGaatpYVw0IHkUvHqIDl8aEWZdHKBuViW/sV2+VwWQXQgOn0UYjNIbh+RuhCK
      LOPxOvCLAl6Pm7qgA5daT6So4auP4HGAc7GARNClo/jbEDIZ6utDlBUFzJidhQAAAIpJREFU
      l09EQEPXikzPp4nU+fHXN+FygMuxvOYsSm62bt9GnU9lQnQQ8Djxed0IK2ilhVwWQZSQRIGZ
      mXGau7qpC4VxOp2EgiGCfh8OTSYZnyOWLjG42C6XyyJKDhzuALHpcdy+APUhP4rsxetxoDgE
      PD6JkNOL6GgiUligLhLBKahIiyGeXlHm/wc3HQXsHHVuiwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='146'>
      iVBORw0KGgoAAAANSUhEUgAAAJIAAADACAYAAADvPTpyAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKDklEQVR4nO3df0zU9x3H8Re72Z6/JuhMUTeExlX0sOXQFV1m1qjD6NrMNM7fP6q2Oo1R
      EmZcikro0DVDV6ipG1O0jsmUrEYrhdX4o5lT0Hl3MIYehcHNVtHWCoh3XJTjsz/g4Lg74Izv
      Q7/4evzH9z73/X6PPHPf7x0J7xCllALRI/rW4z4B6hsYEolgSCSCIZEIhkQiGBKJYEgkgiH1
      EofD8bhPIagYEolgSCSCIZEIhkQiGBKJYEgkgiGRCIZEIhgSiWBIJIIhkQiGRCIYEolgSCSC
      IZEIhkQiGBKJYEgkgiGRCIZEIhgSiWBIJIIhkQiGRCIYEolgSCSCIZEIhkQiGBKJYEgkgiGR
      CIZEIhgSifj24z4BkqeUwhmzDSVVNxE7JhzT4iIREhIS1GOGcIRE73A4HBgwYEDQj6OUwm/+
      fA6mihvt2yaOHYmty6YGNSZe2vqYM2Zbp4gAwFRxA2cstqAel+9IveRR3pHmzZsnfDY9y8vL
      e6j1fEciEZp7R3pw6xKOHspHUdUtNLl06P+cAa+9uRrTI/p5rsKtS4exP+8SbI33oev/HAyz
      V2BVQhT07iX2KhR+eAAF/76N+898Fy/OXoE3Zo3BwPZ9lGD/mj/g4oCp2LhzCcbrvM/EhSt/
      +RUyzzkwak4qts0K7/a8e+se6bSpBu9/dNFn+4a58ZgeFxW042rrU1vVEWzddwtTFq7FuxtH
      QK97gLqrJ7AnfS8Gpa9DvB4AXLhR+Du8XxGH5cm/x7iwfnhg/xJXLtehEWgL6SZOZmTC/FIS
      0n8ZiX4PbCjctQsZumQkJ3gEMWoOFv7gPMwVLoz3LslVAbN1Iua9Vo3zvfX6AzAtLhLn//NF
      p/ukSWNHYpoxMrgHVlpSe11db/bdbMlerbItbT80FasPNueqq37WuTWX56ik3RfUPc+N9y6o
      3Uk5qrz9eRaVnVqgaq/mqqRsi/LeXXN5jkrOKVfXC1JVakFtj6dut9t7XCOlpaVFnTJVq52H
      L6hTpmrV0tIS9GNq6x4pfCRG+lxi7LjXOBShQ1p/aij+J754eTKifdZ1uGYtR+REo8dlDMBA
      IyZGlsN6zWtx9GT8qNqMMpfnRhcqzFYYJo1/Im8yQ0JCMD0uCknzp2B6XFTQv0MCtHZp82FH
      1dEM5A+ej61tl//a2i8xeuhdFO77LU6X2tB4v/U+auayNzBrTGs6DfVODBuv99qXHmHDnLja
      4H2MKBjjsnG2zIXY2LY6XRUwWw2YtARATRBfnoZoNiTX3TL87b1slL+wCm8vn9D+7uJscqDK
      YkXMvNVIWzGs4z4q84/on5qEV4YCQBhCQ333GRoa5vdYUcY4ZJ8tgys2FjoAqCyF1WDEEgA3
      /azvau5IY2PjQ79OrdBgSC7cLcvDzuzPYVj1DlImfAfeV7EXfjoXP37evbUfwsa9jqUztiDn
      8td4JWE4gDrU1wPw+qBVX18HjPBzyKhJ+OHBfFx2xiJeD1gt5TAYF3Z5hv4+nTkcDgwePPgh
      Xqe2PImX+G7ZSw5ix8fPYtn2FMz3E9Go70Wg5n/eNzpAxOjn0eRoAgAMCdXjmzqn1won6r7R
      t99reT0bRuNXMJU6AVhhqYzD5GiBF9OHaCskexEOHAYWJL6OMQP9LxkeHQPdufO44uq8vaa6
      EmFtlUREG2AzWWDvtG8LTDYDoiP87zfCaMRXplI4rRZUxhgRvG9ktElTITX86wLu/GQ2YruI
      CAAQMQNzJ5Rg/+7TsDldAB6g7upR5F4ai4TJrSHpxs9AQkMuMvJtcLoAl9OG/IxcNCTM8PPF
      o3u/8YivM+HwhUrEGJmRN03dI12z/RfXi1Kw5pjvY/Frs7AyFgAGInb5NuhO7MPeTXm4fV+H
      /t+fgqWblmJC+we1cCQkboTrw73YtM79zfZGJCZ09+10OIxxt5Hyjxj8eqX4S9M8zf2JRKt6
      608kj4umLm305GJIJIIhkQiGRCIYEolgSCSCIZEIhkQiGBKJYEgkgiGRCIZEIhgSiWBIJIIh
      kQiGRCIYEolgSCSCIZEIhkQiGBKJYEgkgiGRCIZEIhgSiWBIJIIhkQiGRCIYEolgSCSCIZEI
      hkQiGBKJYEgkgiGRCIZEIhgSiWBIJIIhkQiGRCI09Z//gUBn2rrdwWe7tuCvn4djTuo2dBo7
      28szbfs6bb0jVR3B1veKoZ++Fu/uzkJWViZSFo5AcfpeXPQedgTAXpSLvw+bg5mjvB9pm2k7
      +i2k78nCnvS3MNqciYyTXtPXRs3BwpetMFe4vHfgMdPWZ+dPJW2FNGgqNmzfgJ+/NAJ6HeCe
      xfYzYynKrV5r7UU4cHwQFi94Ef29HnJdOYWTQxYh8dVI6HWATh+JVxMXYcjJUz5TlaKNBpQU
      l8E7JVeFGdboOIzrZuTp00RbIQUw09a9rejAcQxavMBjkE2Hvj7T9nHQ+O+hY6btTI/JV3bT
      IRQOWowF/ipC20zbMP8zbev9zrSthtmzpLaZtkYO/2unuZttt65m2sJuwqHjz+AXb0+A/4wA
      zrSVp8GQuptpa0fJkXwMXrTF7yWtA2faStNcSPaSg9jxSSje3J7iO4706/P45OINXLu4Dp95
      PzFlDY4hHmuzVnrMtPWsreeZtvmlTsTH21pn2nbd0VNJWyG5Z9pu7WKm7fAEJGcleG28icJ3
      /gSs7vgeyRVtgO2MBfYpUzwuia0zbad1N9M2vxTOIdWojJkMdtSZpm62A5ppGwDOtJWnqXek
      wGbaBoIzbaVxpm0v4UxbogAwJBLBkEgEQyIRDIlEMCQSwZBIBEMiEQyJRDAkEsGQSARDIhEM
      iUQwJBLBkEgEQyIRDIlEMCQSwZBIBEMiEQyJRDAkEsGQSARDIhEMiUQwJBLBkEgEQyIRDIlE
      MCQSwZBIBEMiEQyJRDAkEsGQSARDIhEMiUQwJBLBkEgEQyIRDIlEaGqEBBDYcOSABihzOLIs
      pSWVh9XmzZnqWMkN1dSslFL31Z0rH6m09R+o4qaHWKNq1adp61XaiRrV1KxUc1ONOpG2XqV9
      WutxMIvKTi1QZ3OTVU55s++5NJernOQcdepEqkotqPV93Ivdbn+EF/7k09alLZDhyAGs4XBk
      edoKKZDhyAGs4XBkeRr/PfgfjtzTGg5Hlqe5m223LocjB7SGw5GlaTCk7oYjB7qGw5Glae7S
      Zi85iB0fP4tl21Mw329EPa/pGI7sqefhyKZSJwBr63BkXtY60VZI7uHIiV0MRw5wTUS0ATaT
      BfZOz2sdjhzd3XBkUymcVgsqY4zgVNvONBVSIMORA1nD4cjyNHWPFMhw5MAGKHM4sjQOR+4l
      HI5MFACGRCIYEolgSCSCIZEIhkQiGBKJYEgkgiGRCIZEIhgSiWBIJIIhkQiGRCIYEolgSCSC
      IZEIhkQiGBKJYEgkgiGRCIZEIhgSiWBIJIIhkQiGRCIYEolgSCTi/zxWP7XOUBPPAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='170' name='Sheet 14' width='192'>
      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
      A3mxP9t0B0f/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAFiElEQVR4nO3dy04bBwCF4TO2McbGGBMTQ9xgSNykVFRJF22SSl122W1fqq/Rt2ilbhpV
      SlVFURSUK0khAWyIwVwDxjNdpNDQelHVggGd/9uMZ9icxfyakVk4iKIoEmAqEfcAIE4EAGup
      D0++/+EnPX5Vj2sLzpnpax/pWaMV94yeHAvg8au67s3+EdcWnDeZtO4vrMa9oie8AsFaqtvF
      qctjql7M6cWblibHh/Xk5bKmp8parK+pNFrUwe6Ofnu6dNpbcUblB3OavjSiZmtTFy8MaW2t
      pb5cXpmorYWNfVWG+vXg5bLaYdxL/63rE2B+ualOJ1S5kNEv9xd0+9YVPXw4p1yhqKFMQpfK
      RR4dOLK5ta3W3oFyuQEtvK4rnckr6OxqIwx0o1JSXzqtfDoZ98yuut7H39ye1s7Onrbb0p0b
      Vc29WNHNmSkl21taaO6pub6lMxgzYnKlWlE1n9Lqxq5qE2PqT7Q1mBvSeK5Py1u7UhAo03c2
      A+j6CvTj3YcKAumgEyqZSKgTHj+GIbc//vZyflHziUBhGGqp2VIURlIQKFCkMJKSiUCd8Gz+
      v7VrAJ0PbvDDz/88AoeiKNJBJzo8OToe3vJn9eaX+BYI5ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1lIfnnwyNaYoCOLagnPmQiEnLazGPaMnxwJ48uatfn+x
      FNcWnDNfDPTHPaFnvALBWtcAsrmsPh4fVpBI6lplRJI0WRlVfyqlz2qX9OnlkVMdCZyUrgEM
      phPKjwzr1rWKWnsJff35lDLtd7p5tazZuWXlctnT3gmciK4BZLJZ7ayta/fgQCvrO8rnM2q2
      trUfRiqNlrS81DjtncCJ6BpAcTCjwXxW841N3ble0s+/PtNkbUL1RlOpzp4WWvunvRM4Ealu
      Fx88mT/6fPfRpiTp3qNXf115d9KbgFPDt0CwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwRgCwlop7AM6v
      WzMVffftTNwzekIA+N+ClJTMxr2iN7wCwRpPAPRs621dT2efa2zqqhpzzzR8+aqS28sKCxPK
      tNc0/6apG199qXQyiHvqv/AEQM+yxVGVywXV5+Z0oTajrZUljYyOaHNzRyurG6pVS2o0WnHP
      7IoA0LPG81nVW9JkraLV1/PaP4i0t7urrfWWOu09LS02lBnoj3tmV7wCoWdD5Yr2E2tK5kdV
      nUgrN1LS+tKiKuOByuM1tVrbKg0PxD2zKwJAz7KFoiYKxfcn+fdfC5Wr1aO/j2bO5s0v8QoE
      cwQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQA
      awQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAawQAa8d+Ieb6xEVFURTX
      Fpwz48NDGk6f3V9/+S/+BHVeIXr6w8PvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
      KJ8N+r8AuOEsP3Qna+YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SubClass' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
