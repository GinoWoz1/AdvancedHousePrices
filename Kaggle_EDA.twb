<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SavingAnalyticObjects />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data (2)' inline='true' name='federated.1e28wd1067nyw519jd0ag0b6qhc1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0p0jbix0mchrew161fq3708ib2la'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0p0jbix0mchrew161fq3708ib2la' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.425562' measure-ordering='alphabetic' measure-percentage='0.574438' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data_45' inline='true' name='federated.16u29xf1clbpci18rk0yf131z7ft' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_45' name='textscan.18r6tei0pgmseb1dcukeu11o8qem'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data_56.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.18r6tei0pgmseb1dcukeu11o8qem' name='data_56.csv' table='[data_56#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data_56.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/jjonus/Documents/My Tableau Repository/Datasources/data_45.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/12/2018 12:45:07 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='80' timestamp-start='2018-08-12 00:45:07.340' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>0</ordinal>
              <family>data_56.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>x</remote-name>
              <remote-type>5</remote-type>
              <local-name>[x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>x</remote-alias>
              <ordinal>1</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>y</remote-alias>
              <ordinal>2</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coord</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coord]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coord</remote-alias>
              <ordinal>3</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cos2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cos2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cos2</remote-alias>
              <ordinal>4</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>contrib</remote-name>
              <remote-type>5</remote-type>
              <local-name>[contrib]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>contrib</remote-alias>
              <ordinal>5</ordinal>
              <family>data_56.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.425562' measure-ordering='alphabetic' measure-percentage='0.574438' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='train' inline='true' name='federated.0je71i81w9fhsx19mepx11n8r32i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.1bo3rqi0xsc0ee1gb4xo211bmb2z'>
            <connection class='textscan' directory='C:/Users/jjonus/Google Drive/Kaggle/GitAdvancedHousePrices' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1bo3rqi0xsc0ee1gb4xo211bmb2z' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Id' ordinal='0' />
            <column datatype='string' name='MSSubClass' ordinal='1' />
            <column datatype='string' name='MSZoning' ordinal='2' />
            <column datatype='string' name='LotFrontage' ordinal='3' />
            <column datatype='integer' name='LotArea' ordinal='4' />
            <column datatype='string' name='Street' ordinal='5' />
            <column datatype='string' name='Alley' ordinal='6' />
            <column datatype='string' name='LotShape' ordinal='7' />
            <column datatype='string' name='LandContour' ordinal='8' />
            <column datatype='string' name='Utilities' ordinal='9' />
            <column datatype='string' name='LotConfig' ordinal='10' />
            <column datatype='string' name='LandSlope' ordinal='11' />
            <column datatype='string' name='Neighborhood' ordinal='12' />
            <column datatype='string' name='Condition1' ordinal='13' />
            <column datatype='string' name='Condition2' ordinal='14' />
            <column datatype='string' name='BldgType' ordinal='15' />
            <column datatype='string' name='HouseStyle' ordinal='16' />
            <column datatype='string' name='OverallQual' ordinal='17' />
            <column datatype='integer' name='OverallCond' ordinal='18' />
            <column datatype='integer' name='YearBuilt' ordinal='19' />
            <column datatype='integer' name='YearRemodAdd' ordinal='20' />
            <column datatype='string' name='RoofStyle' ordinal='21' />
            <column datatype='string' name='RoofMatl' ordinal='22' />
            <column datatype='string' name='Exterior1st' ordinal='23' />
            <column datatype='string' name='Exterior2nd' ordinal='24' />
            <column datatype='string' name='MasVnrType' ordinal='25' />
            <column datatype='integer' name='MasVnrArea' ordinal='26' />
            <column datatype='string' name='ExterQual' ordinal='27' />
            <column datatype='string' name='ExterCond' ordinal='28' />
            <column datatype='string' name='Foundation' ordinal='29' />
            <column datatype='string' name='BsmtQual' ordinal='30' />
            <column datatype='string' name='BsmtCond' ordinal='31' />
            <column datatype='string' name='BsmtExposure' ordinal='32' />
            <column datatype='string' name='BsmtFinType1' ordinal='33' />
            <column datatype='integer' name='BsmtFinSF1' ordinal='34' />
            <column datatype='string' name='BsmtFinType2' ordinal='35' />
            <column datatype='integer' name='BsmtFinSF2' ordinal='36' />
            <column datatype='integer' name='BsmtUnfSF' ordinal='37' />
            <column datatype='integer' name='TotalBsmtSF' ordinal='38' />
            <column datatype='string' name='Heating' ordinal='39' />
            <column datatype='string' name='HeatingQC' ordinal='40' />
            <column datatype='string' name='CentralAir' ordinal='41' />
            <column datatype='string' name='Electrical' ordinal='42' />
            <column datatype='integer' name='1stFlrSF' ordinal='43' />
            <column datatype='integer' name='2ndFlrSF' ordinal='44' />
            <column datatype='integer' name='LowQualFinSF' ordinal='45' />
            <column datatype='integer' name='GrLivArea' ordinal='46' />
            <column datatype='integer' name='BsmtFullBath' ordinal='47' />
            <column datatype='integer' name='BsmtHalfBath' ordinal='48' />
            <column datatype='integer' name='FullBath' ordinal='49' />
            <column datatype='integer' name='HalfBath' ordinal='50' />
            <column datatype='integer' name='BedroomAbvGr' ordinal='51' />
            <column datatype='integer' name='KitchenAbvGr' ordinal='52' />
            <column datatype='string' name='KitchenQual' ordinal='53' />
            <column datatype='integer' name='TotRmsAbvGrd' ordinal='54' />
            <column datatype='string' name='Functional' ordinal='55' />
            <column datatype='integer' name='Fireplaces' ordinal='56' />
            <column datatype='string' name='FireplaceQu' ordinal='57' />
            <column datatype='string' name='GarageType' ordinal='58' />
            <column datatype='string' name='GarageYrBlt' ordinal='59' />
            <column datatype='string' name='GarageFinish' ordinal='60' />
            <column datatype='integer' name='GarageCars' ordinal='61' />
            <column datatype='integer' name='GarageArea' ordinal='62' />
            <column datatype='string' name='GarageQual' ordinal='63' />
            <column datatype='string' name='GarageCond' ordinal='64' />
            <column datatype='string' name='PavedDrive' ordinal='65' />
            <column datatype='integer' name='WoodDeckSF' ordinal='66' />
            <column datatype='integer' name='OpenPorchSF' ordinal='67' />
            <column datatype='integer' name='EnclosedPorch' ordinal='68' />
            <column datatype='integer' name='3SsnPorch' ordinal='69' />
            <column datatype='integer' name='ScreenPorch' ordinal='70' />
            <column datatype='integer' name='PoolArea' ordinal='71' />
            <column datatype='string' name='PoolQC' ordinal='72' />
            <column datatype='string' name='Fence' ordinal='73' />
            <column datatype='string' name='MiscFeature' ordinal='74' />
            <column datatype='integer' name='MiscVal' ordinal='75' />
            <column datatype='integer' name='MoSold' ordinal='76' />
            <column datatype='integer' name='YrSold' ordinal='77' />
            <column datatype='string' name='SaleType' ordinal='78' />
            <column datatype='string' name='SaleCondition' ordinal='79' />
            <column datatype='integer' name='SalePrice' ordinal='80' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSSubClass</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MSSubClass]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MSSubClass</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSZoning</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MSZoning]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MSZoning</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotFrontage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotFrontage]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotFrontage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LotArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotArea</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Street</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alley</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Alley]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Alley</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotShape</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotShape]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotShape</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandContour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LandContour]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LandContour</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Utilities</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Utilities]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Utilities</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LotConfig</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LotConfig]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LotConfig</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LandSlope</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LandSlope]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LandSlope</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighborhood]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Neighborhood</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Condition1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Condition2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Condition2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BldgType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BldgType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BldgType</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HouseStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HouseStyle]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HouseStyle</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OverallQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OverallQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OverallQual</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OverallCond</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OverallCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OverallCond</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearBuilt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearBuilt]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YearBuilt</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearRemodAdd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YearRemodAdd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YearRemodAdd</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoofStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoofStyle]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>RoofStyle</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoofMatl</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoofMatl]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>RoofMatl</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exterior1st</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exterior1st]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Exterior1st</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exterior2nd</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exterior2nd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Exterior2nd</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MasVnrType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MasVnrType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MasVnrType</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MasVnrArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MasVnrArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MasVnrArea</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExterQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExterQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ExterQual</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExterCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ExterCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ExterCond</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foundation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foundation]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Foundation</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtQual</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtCond</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtExposure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtExposure]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtExposure</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinType1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtFinType1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinType1</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinSF1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFinSF1]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinSF1</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinType2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BsmtFinType2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinType2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFinSF2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFinSF2]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFinSF2</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtUnfSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtUnfSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtUnfSF</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalBsmtSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalBsmtSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>TotalBsmtSF</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Heating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Heating]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Heating</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HeatingQC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[HeatingQC]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HeatingQC</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CentralAir</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CentralAir]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>CentralAir</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electrical</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electrical]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Electrical</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1stFlrSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1stFlrSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>1stFlrSF</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2ndFlrSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2ndFlrSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>2ndFlrSF</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LowQualFinSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LowQualFinSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>LowQualFinSF</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GrLivArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GrLivArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GrLivArea</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtFullBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtFullBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtFullBath</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BsmtHalfBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BsmtHalfBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BsmtHalfBath</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FullBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FullBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>FullBath</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HalfBath</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HalfBath]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>HalfBath</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BedroomAbvGr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BedroomAbvGr]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>BedroomAbvGr</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KitchenAbvGr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[KitchenAbvGr]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>KitchenAbvGr</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KitchenQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[KitchenQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>KitchenQual</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotRmsAbvGrd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotRmsAbvGrd]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>TotRmsAbvGrd</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Functional</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Functional]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Functional</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fireplaces</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fireplaces]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fireplaces</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FireplaceQu</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FireplaceQu]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>FireplaceQu</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageType</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageYrBlt</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageYrBlt]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageYrBlt</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageFinish</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageFinish]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageFinish</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageCars</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GarageCars]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageCars</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GarageArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageArea</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageQual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageQual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageQual</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GarageCond</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GarageCond]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>GarageCond</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PavedDrive</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PavedDrive]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PavedDrive</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WoodDeckSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WoodDeckSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>WoodDeckSF</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenPorchSF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OpenPorchSF]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>OpenPorchSF</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EnclosedPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EnclosedPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>EnclosedPorch</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3SsnPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3SsnPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>3SsnPorch</remote-alias>
            <ordinal>69</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ScreenPorch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ScreenPorch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>ScreenPorch</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PoolArea</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PoolArea]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PoolArea</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PoolQC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PoolQC]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PoolQC</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Fence]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fence</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiscFeature</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MiscFeature]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MiscFeature</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MiscVal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MiscVal]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MiscVal</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MoSold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MoSold]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>MoSold</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YrSold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YrSold]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>YrSold</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SaleType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SaleType]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SaleType</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SaleCondition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SaleCondition]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SaleCondition</remote-alias>
            <ordinal>79</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalePrice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SalePrice]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SalePrice</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Bedroom Abv Gr' datatype='integer' name='[BedroomAbvGr]' role='measure' type='quantitative' />
      <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
      <column caption='Bsmt Cond' datatype='string' name='[BsmtCond]' role='dimension' type='nominal' />
      <column caption='Bsmt Exposure' datatype='string' name='[BsmtExposure]' role='dimension' type='nominal' />
      <column datatype='string' name='[BsmtFinType1]' role='dimension' type='nominal' />
      <column datatype='string' name='[BsmtFinType2]' role='dimension' type='nominal' />
      <column caption='Bsmt Full Bath' datatype='integer' name='[BsmtFullBath]' role='measure' type='quantitative' />
      <column caption='Bsmt Half Bath' datatype='integer' name='[BsmtHalfBath]' role='measure' type='quantitative' />
      <column caption='Bsmt Qual' datatype='string' name='[BsmtQual]' role='dimension' type='nominal' />
      <column caption='Bsmt Unf SF' datatype='integer' name='[BsmtUnfSF]' role='measure' type='quantitative' />
      <column caption='Ratio of live to total' datatype='real' name='[Calculation_401664822191943686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[GrLivArea]/[LotArea]' />
      </column>
      <column caption='Qual_Garage_Number' datatype='integer' name='[Calculation_401664822194020361]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [GarageQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [GarageQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [GarageQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [GarageQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Average Qual' datatype='real' name='[Calculation_401664822195130379]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Qual_Garage_Number (copy)] + [Qual_Bsmt_Number (copy 2)] + [Calculation_401664822194020361] + [Qual_Bsmt_Number (copy)])/4' />
      </column>
      <column caption='QualCombined' datatype='string' name='[Calculation_503840242685890562]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[KitchenQual] + [ExterQual]' />
      </column>
      <column caption='Central Air' datatype='string' name='[CentralAir]' role='dimension' type='nominal' />
      <column caption='Enclosed Porch' datatype='integer' name='[EnclosedPorch]' role='measure' type='quantitative' />
      <column datatype='string' name='[Exter Qual (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[ExterQual]' new-bin='true'>
          <bin default-name='true' value='&quot;Fa &amp; TA&quot;'>
            <value>&quot;Fa&quot;</value>
            <value>&quot;TA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Exter Cond' datatype='string' name='[ExterCond]' role='dimension' type='nominal' />
      <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
      <column caption='Fireplace Qu' datatype='string' name='[FireplaceQu]' role='dimension' type='nominal' />
      <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
      <column caption='Full Bath' datatype='integer' name='[FullBath]' role='measure' type='quantitative' />
      <column caption='Garage Area' datatype='integer' name='[GarageArea]' role='measure' type='quantitative' />
      <column caption='Garage Cars' datatype='integer' name='[GarageCars]' role='measure' type='quantitative' />
      <column caption='Garage Cond' datatype='string' name='[GarageCond]' role='dimension' type='nominal' />
      <column caption='Garage Finish' datatype='string' name='[GarageFinish]' role='dimension' type='nominal' />
      <column caption='Garage Qual' datatype='string' name='[GarageQual]' role='dimension' type='nominal' />
      <column caption='Garage Type' datatype='string' name='[GarageType]' role='dimension' type='nominal' />
      <column caption='Garage Yr Blt' datatype='string' name='[GarageYrBlt]' role='dimension' type='nominal' />
      <column caption='Gr Liv Area' datatype='integer' name='[GrLivArea]' role='measure' type='quantitative' />
      <column caption='Half Bath' datatype='integer' name='[HalfBath]' role='measure' type='quantitative' />
      <column caption='Heating QC' datatype='string' name='[HeatingQC]' role='dimension' type='nominal' />
      <column datatype='string' name='[House Style (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[HouseStyle]' new-bin='true'>
          <bin default-name='true' value='&quot;2.5Fin &amp; 2Story&quot;'>
            <value>&quot;2.5Fin&quot;</value>
            <value>&quot;2Story&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='House Style' datatype='string' name='[HouseStyle]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
      <column caption='Kitchen Abv Gr' datatype='integer' name='[KitchenAbvGr]' role='measure' type='quantitative' />
      <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
      <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
      <column caption='Land Slope' datatype='string' name='[LandSlope]' role='dimension' type='nominal' />
      <column caption='Lot Area' datatype='integer' name='[LotArea]' role='measure' type='quantitative' />
      <column caption='Lot Config' datatype='string' name='[LotConfig]' role='dimension' type='nominal' />
      <column caption='Lot Frontage' datatype='string' name='[LotFrontage]' role='dimension' type='nominal' />
      <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
      <column caption='Low Qual Fin SF' datatype='integer' name='[LowQualFinSF]' role='measure' type='quantitative' />
      <column datatype='string' name='[MS Sub Class (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MSSubClass]' new-bin='true'>
          <bin default-name='true' value='&quot;160, 190, 40 and 4 more&quot;'>
            <value>&quot;160&quot;</value>
            <value>&quot;190&quot;</value>
            <value>&quot;40&quot;</value>
            <value>&quot;50&quot;</value>
            <value>&quot;70&quot;</value>
            <value>&quot;85&quot;</value>
            <value>&quot;90&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;180, 30, 45&quot;'>
            <value>&quot;180&quot;</value>
            <value>&quot;30&quot;</value>
            <value>&quot;45&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;20, 75, 80&quot;'>
            <value>&quot;20&quot;</value>
            <value>&quot;75&quot;</value>
            <value>&quot;80&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='MS Sub Class' datatype='string' name='[MSSubClass]' role='dimension' type='nominal' />
      <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
      <column caption='Mas Vnr Area' datatype='integer' name='[MasVnrArea]' role='measure' type='quantitative' />
      <column caption='Mas Vnr Type' datatype='string' name='[MasVnrType]' role='dimension' type='nominal' />
      <column caption='Misc Feature' datatype='string' name='[MiscFeature]' role='dimension' type='nominal' />
      <column caption='Misc Val' datatype='integer' name='[MiscVal]' role='measure' type='quantitative' />
      <column datatype='string' name='[Mo Sold (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[MoSold]' new-bin='true'>
          <bin default-name='false' value='&quot;Fall&quot;'>
            <value>9</value>
            <value>10</value>
          </bin>
          <bin default-name='false' value='&quot;Spring&quot;'>
            <value>3</value>
            <value>4</value>
            <value>5</value>
          </bin>
          <bin default-name='false' value='&quot;Summer&quot;'>
            <value>6</value>
            <value>7</value>
            <value>8</value>
          </bin>
          <bin default-name='false' value='&quot;Winter&quot;'>
            <value>1</value>
            <value>2</value>
            <value>11</value>
            <value>12</value>
          </bin>
        </calculation>
      </column>
      <column caption='Mo Sold' datatype='integer' name='[MoSold]' role='measure' type='quantitative' />
      <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
          <bin default-name='false' value='&quot;BEO&quot;'>
            <value>&quot;BrkSide&quot;</value>
            <value>&quot;Edwards&quot;</value>
            <value>&quot;OldTown&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BlueSwis&quot;'>
            <value>&quot;Blueste&quot;</value>
            <value>&quot;Mitchel&quot;</value>
            <value>&quot;NAmes&quot;</value>
            <value>&quot;NPkVill&quot;</value>
            <value>&quot;Sawyer&quot;</value>
            <value>&quot;SWISU&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BNS&quot;'>
            <value>&quot;Blmngtn&quot;</value>
            <value>&quot;Gilbert&quot;</value>
            <value>&quot;NWAmes&quot;</value>
            <value>&quot;SawyerW&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BrMeadow&quot;'>
            <value>&quot;BrDale&quot;</value>
            <value>&quot;IDOTRR&quot;</value>
            <value>&quot;MeadowV&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;C3&quot;'>
            <value>&quot;ClearCr&quot;</value>
            <value>&quot;CollgCr&quot;</value>
            <value>&quot;Crawfor&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;NNS&quot;'>
            <value>&quot;NoRidge&quot;</value>
            <value>&quot;NridgHt&quot;</value>
            <value>&quot;StoneBr&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;STV&quot;'>
            <value>&quot;Somerst&quot;</value>
            <value>&quot;Timber&quot;</value>
            <value>&quot;Veenker&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Porch SF' datatype='integer' name='[OpenPorchSF]' role='measure' type='quantitative' />
      <column caption='Overall Cond' datatype='integer' name='[OverallCond]' role='measure' type='quantitative' />
      <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
      <column caption='Paved Drive' datatype='string' name='[PavedDrive]' role='dimension' type='nominal' />
      <column caption='Pool Area' datatype='integer' name='[PoolArea]' role='measure' type='quantitative' />
      <column caption='Pool QC' datatype='string' name='[PoolQC]' role='dimension' type='nominal' />
      <column caption='Qual_Exter_Number' datatype='integer' name='[Qual_Bsmt_Number (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [ExterQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [ExterQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [ExterQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [ExterQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Qual_Kitchen_Number' datatype='integer' name='[Qual_Bsmt_Number (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [KitchenQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [KitchenQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [KitchenQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [KitchenQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Qual_Bsmt_Number' datatype='integer' name='[Qual_Garage_Number (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [BsmtQual] = &quot;Ex&quot; then 4&#13;&#10;ELSEIF [BsmtQual] = &quot;Gd&quot; then 3&#13;&#10;ELSEIF [BsmtQual] = &quot;TA&quot; then 2&#13;&#10;ELSEIF [BsmtQual] = &quot;FA&quot; then 1&#13;&#10;ELSE 0 END' />
      </column>
      <column caption='Roof Matl' datatype='string' name='[RoofMatl]' role='dimension' type='nominal' />
      <column caption='Roof Style' datatype='string' name='[RoofStyle]' role='dimension' type='nominal' />
      <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
      <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
      <column caption='Sale Type' datatype='string' name='[SaleType]' role='dimension' type='nominal' />
      <column caption='Screen Porch' datatype='integer' name='[ScreenPorch]' role='measure' type='quantitative' />
      <column caption='Tot Rms Abv Grd' datatype='integer' name='[TotRmsAbvGrd]' role='measure' type='quantitative' />
      <column caption='Total Bsmt SF' datatype='integer' name='[TotalBsmtSF]' role='measure' type='quantitative' />
      <column caption='Wood Deck SF' datatype='integer' name='[WoodDeckSF]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year Built' datatype='integer' name='[YearBuilt]' role='dimension' type='ordinal' />
      <column caption='Year Remod Add' datatype='integer' name='[YearRemodAdd]' role='dimension' type='quantitative' />
      <column caption='Yr Sold' datatype='integer' name='[YrSold]' role='dimension' type='quantitative' />
      <group name='[Bsmt Qual, Garage Qual, Heating QC and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[GarageQual]' />
          <groupfilter function='level-members' level='[HeatingQC]' />
          <groupfilter function='level-members' level='[ExterQual]' />
          <groupfilter function='level-members' level='[KitchenQual]' />
        </groupfilter>
      </group>
      <group name='[BsmtFinType1, Foundation, Bsmt Qual and 1 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BsmtFinType1]' />
          <groupfilter function='level-members' level='[Foundation]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[BsmtFinType2]' />
        </groupfilter>
      </group>
      <group name='[Foundation &amp; Bsmt Qual (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Foundation]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
        </groupfilter>
      </group>
      <group name='[Garage Qual, Bsmt Qual, Exter Qual and 2 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GarageQual]' />
          <groupfilter function='level-members' level='[BsmtQual]' />
          <groupfilter function='level-members' level='[ExterQual]' />
          <groupfilter function='level-members' level='[KitchenQual]' />
        </groupfilter>
      </group>
      <group name='[Kitchen Qual &amp; Exter Qual (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[KitchenQual]' />
          <groupfilter function='level-members' level='[ExterQual]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.539797' measure-ordering='alphabetic' measure-percentage='0.460203' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Neighborhood (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BEO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C3&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;BrMeadow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BNS&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;NNS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BlueSwis&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data' inline='true' name='federated.055r1m20ncqq4z13lx9eq0aa278b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.1gk7rvx0ffecon15kfsli1d46qc4'>
            <connection class='textscan' directory='C:/Users/jjonus/Documents' filename='data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1gk7rvx0ffecon15kfsli1d46qc4' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='real' name='x' ordinal='1' />
            <column datatype='real' name='y' ordinal='2' />
            <column datatype='real' name='coord' ordinal='3' />
            <column datatype='real' name='cos2' ordinal='4' />
            <column datatype='real' name='contrib' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[x]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>y</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>coord</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cos2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cos2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>cos2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contrib</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contrib]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>contrib</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KitchenExterQual' datatype='string' name='[Calculation_503840242685714433]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([federated.0je71i81w9fhsx19mepx11n8r32i].[KitchenQual]) + ATTR([federated.0je71i81w9fhsx19mepx11n8r32i].[ExterQual])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
      <column caption='Cos2' datatype='real' name='[cos2]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
      <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
      <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coord]' derivation='Sum' name='[sum:coord:qk]' pivot='key' type='quantitative' />
      <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.424023' measure-ordering='alphabetic' measure-percentage='0.575977' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
        <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
        <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{99145fdf-f0b8-4ebf-8bad-2276ed643301}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[attr:name:nk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:coord:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' />
            <field name='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1/2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.055r1m20ncqq4z13lx9eq0aa278b' />
          </datasources>
          <datasource-dependencies datasource='federated.055r1m20ncqq4z13lx9eq0aa278b'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{99145fdf-f0b8-4ebf-8bad-2276ed643301}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
            <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coord]' derivation='Sum' name='[sum:coord:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' field-type='quantitative' max='0.47714843519516992' min='-0.11356780768797037' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' field-type='quantitative' max='0.3873070829113201' min='-0.16410622865981084' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' />
              <text column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]' />
              <lod column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]' />
              <lod column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:coord:qk]' />
              <color column='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:y:qk]</rows>
        <cols>[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='3/4'>
      <table>
        <view>
          <datasources>
            <datasource caption='data (2)' name='federated.1e28wd1067nyw519jd0ag0b6qhc1' />
          </datasources>
          <datasource-dependencies datasource='federated.1e28wd1067nyw519jd0ag0b6qhc1'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1e28wd1067nyw519jd0ag0b6qhc1].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[sum:y:qk]</rows>
        <cols>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='5/6'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_45' name='federated.16u29xf1clbpci18rk0yf131z7ft' />
          </datasources>
          <datasource-dependencies datasource='federated.16u29xf1clbpci18rk0yf131z7ft'>
            <column caption='Contrib' datatype='real' name='[contrib]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[contrib]' derivation='Sum' name='[sum:contrib:qk]' pivot='key' type='quantitative' />
            <column-instance column='[x]' derivation='Sum' name='[sum:x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y]' derivation='Sum' name='[sum:y:qk]' pivot='key' type='quantitative' />
            <column caption='X' datatype='real' name='[x]' role='measure' type='quantitative' />
            <column caption='Y' datatype='real' name='[y]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:x:qk]' field-type='quantitative' max='0.41871570542622416' min='0.021284078646205195' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:y:qk]' field-type='quantitative' max='0.35576301556811546' min='0.04486974733608428' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' />
              <size column='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' />
              <text column='[federated.16u29xf1clbpci18rk0yf131z7ft].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:y:qk]</rows>
        <cols>[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='BldgType'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BldgType]' derivation='None' name='[none:BldgType:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column caption='Garage Qual' datatype='string' name='[GarageQual]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GarageQual]' derivation='None' name='[none:GarageQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]' direction='ASC'>
            <dictionary>
              <bucket>(&quot;Gd&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(&quot;Gd&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Gd&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Gd&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Fa&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Ex&quot;,&quot;TA&quot;)</bucket>
              <bucket>(&quot;Fa&quot;,&quot;Fa&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Fa&quot;)</bucket>
              <bucket>(&quot;TA&quot;,&quot;Ex&quot;)</bucket>
              <bucket>(%all%,%all%)</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]'>
            <groupfilter from='&quot;Ex&quot;' function='range' level='[none:GarageQual:nk]' to='&quot;TA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]</column>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk] / [federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)])</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQualGrouping'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Exter Qual (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[ExterQual]' new-bin='true'>
                <bin default-name='true' value='&quot;Fa &amp; TA&quot;'>
                  <value>&quot;Fa&quot;</value>
                  <value>&quot;TA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[ExterQual]' derivation='None' name='[none:ExterQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Ex&quot;</bucket>
              <bucket>&quot;Gd&quot;</bucket>
              <bucket>&quot;Fa &amp; TA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Exter Qual (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='ExterQualKitchenQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='QualCombined' datatype='string' name='[Calculation_503840242685890562]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[KitchenQual] + [ExterQual]' />
            </column>
            <column caption='Exter Qual' datatype='string' name='[ExterQual]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Kitchen Qual' datatype='string' name='[KitchenQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Max' name='[max:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Min' name='[min:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_503840242685890562]' derivation='None' name='[none:Calculation_503840242685890562:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Stdev' name='[std:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Exterior1st'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exterior1st]' derivation='None' name='[none:Exterior1st:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Stdev' name='[std:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]' value='24' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Exterior1st (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_503840242688516099]' role='measure' type='quantitative' user:unnamed='Exterior1st (2)'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Exterior1st]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exterior1st]' derivation='None' name='[none:Exterior1st:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_503840242688516099]' derivation='User' name='[usr:Calculation_503840242688516099:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242688516099:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Foundation'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Foundation]' derivation='None' name='[none:Foundation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Gr LIv Area Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664822185672708]' role='measure' type='quantitative' user:unnamed='Gr LIv Area Price'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Fence]' role='dimension' type='nominal' />
            <column datatype='string' name='[Functional]' role='dimension' type='nominal' />
            <column caption='Heating QC' datatype='string' name='[HeatingQC]' role='dimension' type='nominal' />
            <column datatype='string' name='[House Style (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[HouseStyle]' new-bin='true'>
                <bin default-name='true' value='&quot;2.5Fin &amp; 2Story&quot;'>
                  <value>&quot;2.5Fin&quot;</value>
                  <value>&quot;2Story&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='House Style' datatype='string' name='[HouseStyle]' role='dimension' type='nominal' />
            <column caption='Land Contour' datatype='string' name='[LandContour]' role='dimension' type='nominal' />
            <column caption='Lot Shape' datatype='string' name='[LotShape]' role='dimension' type='nominal' />
            <column caption='MS Zoning' datatype='string' name='[MSZoning]' role='dimension' type='nominal' />
            <column caption='Misc Feature' datatype='string' name='[MiscFeature]' role='dimension' type='nominal' />
            <column caption='Paved Drive' datatype='string' name='[PavedDrive]' role='dimension' type='nominal' />
            <column caption='Sale Condition' datatype='string' name='[SaleCondition]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column datatype='string' name='[Utilities]' role='dimension' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BldgType]' derivation='None' name='[none:BldgType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Fence]' derivation='None' name='[none:Fence:nk]' pivot='key' type='nominal' />
            <column-instance column='[Functional]' derivation='None' name='[none:Functional:nk]' pivot='key' type='nominal' />
            <column-instance column='[HeatingQC]' derivation='None' name='[none:HeatingQC:nk]' pivot='key' type='nominal' />
            <column-instance column='[LandContour]' derivation='None' name='[none:LandContour:nk]' pivot='key' type='nominal' />
            <column-instance column='[LotShape]' derivation='None' name='[none:LotShape:nk]' pivot='key' type='nominal' />
            <column-instance column='[MSZoning]' derivation='None' name='[none:MSZoning:nk]' pivot='key' type='nominal' />
            <column-instance column='[MiscFeature]' derivation='None' name='[none:MiscFeature:nk]' pivot='key' type='nominal' />
            <column-instance column='[PavedDrive]' derivation='None' name='[none:PavedDrive:nk]' pivot='key' type='nominal' />
            <column-instance column='[SaleCondition]' derivation='None' name='[none:SaleCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Utilities]' derivation='None' name='[none:Utilities:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664822185672708]' derivation='User' name='[usr:Calculation_401664822185672708:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Utilities:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PavedDrive:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MiscFeature:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Functional:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fence:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]' />
              <lod column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664822185672708:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[House Style (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='MasVnr'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Bldg Type' datatype='string' name='[BldgType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Max' name='[max:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Min' name='[min:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BldgType]' derivation='None' name='[none:BldgType:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Stdev' name='[std:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[min:SalePrice:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[std:SalePrice:qk]&quot;</bucket>
              <bucket>&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[max:SalePrice:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='NeighborhoodGrouping'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_401664821936644098]' role='measure' type='quantitative' user:unnamed='NeighborhoodGrouping'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
                <bin default-name='false' value='&quot;BEO&quot;'>
                  <value>&quot;BrkSide&quot;</value>
                  <value>&quot;Edwards&quot;</value>
                  <value>&quot;OldTown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BlueSwis&quot;'>
                  <value>&quot;Blueste&quot;</value>
                  <value>&quot;Mitchel&quot;</value>
                  <value>&quot;NAmes&quot;</value>
                  <value>&quot;NPkVill&quot;</value>
                  <value>&quot;Sawyer&quot;</value>
                  <value>&quot;SWISU&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BNS&quot;'>
                  <value>&quot;Blmngtn&quot;</value>
                  <value>&quot;Gilbert&quot;</value>
                  <value>&quot;NWAmes&quot;</value>
                  <value>&quot;SawyerW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BrMeadow&quot;'>
                  <value>&quot;BrDale&quot;</value>
                  <value>&quot;IDOTRR&quot;</value>
                  <value>&quot;MeadowV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C3&quot;'>
                  <value>&quot;ClearCr&quot;</value>
                  <value>&quot;CollgCr&quot;</value>
                  <value>&quot;Crawfor&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NNS&quot;'>
                  <value>&quot;NoRidge&quot;</value>
                  <value>&quot;NridgHt&quot;</value>
                  <value>&quot;StoneBr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;STV&quot;'>
                  <value>&quot;Somerst&quot;</value>
                  <value>&quot;Timber&quot;</value>
                  <value>&quot;Veenker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664821936644098]' derivation='User' name='[usr:Calculation_401664821936644098:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' z-order='1' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_401664821936644098:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='NeighborhoodGroupinga'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Neighborhood (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Neighborhood]' new-bin='true'>
                <bin default-name='false' value='&quot;BEO&quot;'>
                  <value>&quot;BrkSide&quot;</value>
                  <value>&quot;Edwards&quot;</value>
                  <value>&quot;OldTown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BlueSwis&quot;'>
                  <value>&quot;Blueste&quot;</value>
                  <value>&quot;Mitchel&quot;</value>
                  <value>&quot;NAmes&quot;</value>
                  <value>&quot;NPkVill&quot;</value>
                  <value>&quot;Sawyer&quot;</value>
                  <value>&quot;SWISU&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BNS&quot;'>
                  <value>&quot;Blmngtn&quot;</value>
                  <value>&quot;Gilbert&quot;</value>
                  <value>&quot;NWAmes&quot;</value>
                  <value>&quot;SawyerW&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BrMeadow&quot;'>
                  <value>&quot;BrDale&quot;</value>
                  <value>&quot;IDOTRR&quot;</value>
                  <value>&quot;MeadowV&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C3&quot;'>
                  <value>&quot;ClearCr&quot;</value>
                  <value>&quot;CollgCr&quot;</value>
                  <value>&quot;Crawfor&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;NNS&quot;'>
                  <value>&quot;NoRidge&quot;</value>
                  <value>&quot;NridgHt&quot;</value>
                  <value>&quot;StoneBr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;STV&quot;'>
                  <value>&quot;Somerst&quot;</value>
                  <value>&quot;Timber&quot;</value>
                  <value>&quot;Veenker&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' direction='ASC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]' value='40' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='1' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='OverallQual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='Overall Qual' datatype='string' name='[OverallQual]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[OverallQual]' derivation='None' name='[none:OverallQual:nk]' pivot='key' type='nominal' />
            <column-instance column='[SalePrice]' derivation='Sum' name='[sum:SalePrice:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='SubClass'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log([Sale Price])' datatype='real' name='[Calculation_401664822163374083]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='log([SalePrice])' />
            </column>
            <column datatype='string' name='[MS Sub Class (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[MSSubClass]' new-bin='true'>
                <bin default-name='true' value='&quot;160, 190, 40 and 4 more&quot;'>
                  <value>&quot;160&quot;</value>
                  <value>&quot;190&quot;</value>
                  <value>&quot;40&quot;</value>
                  <value>&quot;50&quot;</value>
                  <value>&quot;70&quot;</value>
                  <value>&quot;85&quot;</value>
                  <value>&quot;90&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;180, 30, 45&quot;'>
                  <value>&quot;180&quot;</value>
                  <value>&quot;30&quot;</value>
                  <value>&quot;45&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;20, 75, 80&quot;'>
                  <value>&quot;20&quot;</value>
                  <value>&quot;75&quot;</value>
                  <value>&quot;80&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='MS Sub Class' datatype='string' name='[MSSubClass]' role='dimension' type='nominal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Median' name='[med:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_401664822163374083]' derivation='Sum' name='[sum:Calculation_401664822163374083:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]' direction='DESC' using='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' />
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Calculation_401664822163374083:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[MS Sub Class (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='UnderDaHouse'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column datatype='string' name='[Foundation]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Id]' role='dimension' type='ordinal' />
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column-instance column='[SalePrice]' derivation='Avg' name='[avg:SalePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Id]' derivation='CountD' name='[ctd:Id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Foundation]' derivation='None' name='[none:Foundation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0je71i81w9fhsx19mepx11n8r32i].[ctd:Id:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;PConc&quot;</bucket>
              <bucket>&quot;Wood&quot;</bucket>
              <bucket>&quot;Stone&quot;</bucket>
              <bucket>&quot;CBlock&quot;</bucket>
              <bucket>&quot;BrkTil&quot;</bucket>
              <bucket>&quot;Slab&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='YearBuilt'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.0je71i81w9fhsx19mepx11n8r32i' />
          </datasources>
          <datasource-dependencies datasource='federated.0je71i81w9fhsx19mepx11n8r32i'>
            <column caption='log(SUM([Sale Price]))' datatype='real' name='[Calculation_503840242684461056]' role='measure' type='quantitative' user:unnamed='YearBuilt'>
              <calculation class='tableau' formula='log(SUM([SalePrice]))' />
            </column>
            <column caption='Sale Price' datatype='integer' name='[SalePrice]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year Built' datatype='integer' name='[YearBuilt]' role='dimension' type='ordinal' />
            <column-instance column='[YearBuilt]' derivation='None' name='[none:YearBuilt:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_503840242684461056]' derivation='User' name='[usr:Calculation_503840242684461056:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0214917659759521' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0je71i81w9fhsx19mepx11n8r32i].[usr:Calculation_503840242684461056:qk]</rows>
        <cols>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearBuilt:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='93'>
    <window class='worksheet' name='1/2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='0' param='[federated.055r1m20ncqq4z13lx9eq0aa278b].[sum:contrib:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:AdhocCluster:1:ok]</field>
            <field>[federated.055r1m20ncqq4z13lx9eq0aa278b].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3/4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[:Measure Names]</field>
            <field>[federated.1e28wd1067nyw519jd0ag0b6qhc1].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='5/6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.16u29xf1clbpci18rk0yf131z7ft].[sum:contrib:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16u29xf1clbpci18rk0yf131z7ft].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='NeighborhoodGrouping'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='240'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='NeighborhoodGroupinga'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='240'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='OverallQual'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BsmtQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQualGrouping'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='SubClass'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSSubClass:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gr LIv Area Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:SalePrice:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Fence:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Functional:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HouseStyle:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandContour:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LandSlope:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:LotShape:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MSZoning:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MiscFeature:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:PavedDrive:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:SaleCondition:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Utilities:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:LotArea:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='BldgType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='ExterQual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[med:SalePrice:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Qual, Exter Qual, Kitchen Qual and 1 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Bsmt Qual, Garage Qual, Heating QC and 2 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Garage Qual, Bsmt Qual, Exter Qual and 2 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Kitchen Qual &amp; Exter Qual (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:ExterQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:GarageQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:KitchenQual:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:OverallQual:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Foundation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='YearBuilt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Mo Sold (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearBuilt:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YearRemodAdd:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:ok]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:YrSold:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[sum:YearBuilt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='ExterQualKitchenQual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Calculation_503840242685890562:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Exterior1st'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Exterior1st (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[avg:SalePrice:qk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Exterior1st:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='MasVnr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Neighborhood (group)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:BldgType:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:HeatingQC:nk]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:MasVnrType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='UnderDaHouse'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[BsmtFinType1, Foundation, Bsmt Qual and 1 more (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Foundation &amp; Bsmt Qual (Combined)]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[Multiple Values]</field>
            <field>[federated.0je71i81w9fhsx19mepx11n8r32i].[none:Foundation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1/2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3/4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5/6' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='BldgType' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ExterQual' width='192'>
      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
      XCaJhAGrKZ8tGItGkUITTGSL2HhD8EolGZknGE1itDgp9rggJ+Kf9SMYLNjsdmy3UT7ZNzrO
      f7oLiDBFTpLJaLDYF1sGlyU+OUE6IwJgdJfi8OTLHXOZOLJiwGQxkImE0NsL0GoF/OfeJlt1
      H6UlWmIz00iygqWoHKvDRNI3STqdxVFeg9GkJZuMEPHNobW6cXqL0CwyCiRF/EQCeakTjc6K
      u7Yqn9qhSKRiGcwuB7lkmIjPj8bsxuV1MfHJhzg23I+VMNFgJH8hjYXCmjISU2PIqgFneSV6
      vYAUCxKbm0dnL8JZXMB/fWT397EmWEXOiGiMpm9d5eFucYA7ASmVRG+5Pcb124Kq5pAzEnqz
      +bbs+n8f/l4ywQJ60+11fl/ynQSwfJHuyvcQFoPjqw+649CC8eulu3wPHeDOQRAEXIuWIvkB
      dyOWnQPkE90+K0TX6Q3otBqysgRa/R9FLPIsoiRJN3J2BI0Oo0GHquSQswp6g/6umtb/FNRc
      FlkUUQGN3ohepyUrZcgpeVnBxa61P4WSlVDQotNpyUkZstmFzFKNDr3RgCJLKKqAzqD/jM1V
      VXJZiWxWQb+gR6rmskiihNZgRKfToqoK2Uwm/3vo9YvOBs1fXiErZdEbDYBKTpbJylm0eiNa
      vRZVlpBlecFG402MvkJWFFFVAb0pv5/LiRlyiorWYESryWuPfrre1xmXaRg05h/jWu8Ig4NT
      1DY10LSmlapCI6fe/TVq/cPcu67slgeuZOJcv9bOaO8g2tJKqqoa2bK6luDIJd49F+LZHz+E
      /e6WhLuBYPcxrp6Zwllsx7N6J17DLJdOd2EgjaF2N5v3rF60Mydn+rjy+iuw5sfs2dfEXNc5
      xkcCqFIC3yzc99I+Og6fIJNM0/T4y1SUORCAbGqei6++hmowoveuYfO96+l++x+JynrSool7
      XnqKYNsRensCoCisfuxZij2L4ylUKU7X4XfpGozxwl//c7KJIJdefx3VbCed0bL1maeZ+uQP
      RJJaxFiIyr0/or4hL4M8332armvjIEbxbHqMlga4+OYpNCYN6YzA+gf2M3HxJBkJIgPXKH/q
      fwWWoQO4yhrZV1wGajs79uWZYDE4iKHhXqT5YVRKEW56DbRmJ1t27MWNFt2qjdQ6LahKlvEZ
      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
    </thumbnail>
    <thumbnail height='192' name='ExterQualGrouping' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ExterQualKitchenQual' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Exterior1st' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Exterior1st (2)' width='192'>
      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
      J+36O9IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='170' name='Foundation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gr LIv Area Price' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='149' name='MasVnr' width='192'>
      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
      ngQLZM3/AxWuyjIYsh7TAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodGrouping' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='NeighborhoodGroupinga' width='192'>
      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
      rMCUORByTAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='OverallQual' width='192'>
      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
      8wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SubClass' width='192'>
      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
    </thumbnail>
    <thumbnail height='170' name='UnderDaHouse' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='YearBuilt' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
